schedule: main
run: 1 main 0: (((1 string-address) (raw)) <- ((integer-to-decimal-string)) ((34 literal)))
run: 2 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (34)
run: 34 => ((1 integer))
setm: ((1 integer)) <= 34
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1002 to 34
run: 4 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 1003 to nil
run: 5 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 6 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1005 to nil
run: 7 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1006 to nil
run: 8 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 9 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 10 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 11 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 1062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 1062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 1033 to 1062
run: 12 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 1062 => ((2 integer-address))
setm: ((2 integer-address)) <= 1062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1034 to 1062
run: 13 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1062 to 0
run: 14 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1063 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 1063
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 1035 to 1063
run: 15 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1036 to 30
run: 16 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 1064 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 1064
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 1063 to 1064
run: 17 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 1062 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 1062
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 1007 to 1062
run: 18 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: 0 => ((7 character))
setm: ((7 character)) <= 0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 1008 to 0
run: 19 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1009 to 48
run: 20 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1010 to nil
run: 21 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 22 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 3 => ((1 integer))
setm: ((1 integer)) <= 3
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1002 to 3
run: 4 => ((10 integer))
setm: ((10 integer)) <= 4
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 1011 to 4
run: 23 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 52 => ((11 integer))
setm: ((11 integer)) <= 52
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 1012 to 52
run: 24 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: 4 => ((12 character))
setm: ((12 character)) <= 4
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 1013 to 4
run: 25 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 26 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1095 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 27 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062 4)
run: 1062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 1062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 1097 to 1062
run: 28 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1062 4)
run: 4 => ((2 character))
setm: ((2 character)) <= 4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1098 to 4
run: 29 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 30 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1126 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 31 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 1062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 1128 to 1062
run: 32 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((1062 integer) (raw))
sizeof: ((1062 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 1129 to 0
run: 33 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1063 string-address) (raw))
sizeof: ((1063 string-address) (raw))
run: 1064 => ((3 string-address))
setm: ((3 string-address)) <= 1064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 1130 to 1064
run: 34 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1064 integer) (raw))
sizeof: ((1064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1131 to 30
run: 35 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1132 to nil
run: 36 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 1099 to nil
run: 37 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 38 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 1100 to 1062
run: 39 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1063 string-address) (raw))
sizeof: ((1063 string-address) (raw))
run: 1064 => ((5 string-address))
setm: ((5 string-address)) <= 1064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 1101 to 1064
run: 40 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1064 string) (raw))
m: ((1064 integer) (raw))
sizeof: ((1064 integer) (raw))
sizeof: ((_ byte))
run: 1065 => ((6 byte-address))
setm: ((6 byte-address)) <= 1065
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 1102 to 1065
run: 41 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: 4 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= 4
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 1065 to 4
run: 42 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 1
run: 43 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 1062 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 1062
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 1007 to 1062
run: 44 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 45 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1010 to nil
run: 46 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 47 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1002 to 0
run: 3 => ((10 integer))
setm: ((10 integer)) <= 3
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 1011 to 3
run: 48 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 51 => ((11 integer))
setm: ((11 integer)) <= 51
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 1012 to 51
run: 49 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: 3 => ((12 character))
setm: ((12 character)) <= 3
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 1013 to 3
run: 50 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 51 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 52 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062 3)
run: 1062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 1062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 1159 to 1062
run: 53 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1062 3)
run: 3 => ((2 character))
setm: ((2 character)) <= 3
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 1160 to 3
run: 54 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 55 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 56 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 1062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 1190 to 1062
run: 57 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((1062 integer) (raw))
sizeof: ((1062 integer) (raw))
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 1191 to 1
run: 58 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1063 string-address) (raw))
sizeof: ((1063 string-address) (raw))
run: 1064 => ((3 string-address))
setm: ((3 string-address)) <= 1064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 1192 to 1064
run: 59 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1064 integer) (raw))
sizeof: ((1064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1193 to 30
run: 60 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1194 to nil
run: 61 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 1161 to nil
run: 62 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 63 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 1062 => ((4 integer-address))
setm: ((4 integer-address)) <= 1062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 1162 to 1062
run: 64 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1063 string-address) (raw))
sizeof: ((1063 string-address) (raw))
run: 1064 => ((5 string-address))
setm: ((5 string-address)) <= 1064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 1163 to 1064
run: 65 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1064 string) (raw))
m: ((1064 integer) (raw))
sizeof: ((1064 integer) (raw))
sizeof: ((_ byte))
run: 1066 => ((6 byte-address))
setm: ((6 byte-address)) <= 1066
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 1164 to 1066
run: 66 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: 3 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= 3
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 1066 to 3
run: 67 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1062 to 2
run: 68 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 1062 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 1062
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 1007 to 1062
run: 69 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 70 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1010 to t
run: 71 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 72 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 73 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((1062 integer) (raw))
sizeof: ((1062 integer) (raw))
run: 2 => ((13 integer))
setm: ((13 integer)) <= 2
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 1014 to 2
run: 74 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1063 string-address) (raw))
sizeof: ((1063 string-address) (raw))
run: 1064 => ((14 string-address))
setm: ((14 string-address)) <= 1064
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 1015 to 1064
run: 75 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 1219 => ((15 string-address))
setm: ((15 string-address)) <= 1219
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 1016 to 1219
run: 76 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 1 => ((16 integer))
setm: ((16 integer)) <= 1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 1017 to 1
run: 77 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 1018 to 0
run: 78 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1010 to nil
run: 79 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 80 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((1064 string) (raw))
m: ((1064 integer) (raw))
sizeof: ((1064 integer) (raw))
sizeof: ((_ byte))
m: ((1066 byte) (raw))
sizeof: ((1066 byte) (raw))
run: 3 => ((18 byte))
setm: ((18 byte)) <= 3
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 1019 to 3
run: 81 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((1219 string) (raw))
m: ((1219 integer) (raw))
sizeof: ((1219 integer) (raw))
sizeof: ((_ byte))
run: 1220 => ((19 byte-address))
setm: ((19 byte-address)) <= 1220
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 1020 to 1220
run: 82 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: 3 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= 3
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 1220 to 3
run: 83 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 1017 to 0
run: 84 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 1018 to 1
run: 85 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 86 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1010 to nil
run: 87 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 88 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((1064 string) (raw))
m: ((1064 integer) (raw))
sizeof: ((1064 integer) (raw))
sizeof: ((_ byte))
m: ((1065 byte) (raw))
sizeof: ((1065 byte) (raw))
run: 4 => ((18 byte))
setm: ((18 byte)) <= 4
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 1019 to 4
run: 89 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((1219 string) (raw))
m: ((1219 integer) (raw))
sizeof: ((1219 integer) (raw))
sizeof: ((_ byte))
run: 1221 => ((19 byte-address))
setm: ((19 byte-address)) <= 1221
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 1020 to 1221
run: 90 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: 4 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= 4
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 1221 to 4
run: 91 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 1017 to -1
run: 92 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 2 => ((17 integer))
setm: ((17 integer)) <= 2
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 1018 to 2
run: 93 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 94 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1010 to t
run: 95 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 96 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((1 string-address) (raw)))
reply: 1219 => ((1 string-address) (raw))
setm: ((1 string-address) (raw)) <= 1219
setm: size of ((1 string-address) (raw)) is 1
setm: ((1 string-address) (raw)): setting 1 to 1219
schedule: done with routine 
