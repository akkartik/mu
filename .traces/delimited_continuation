9999 parse: instruction: create-delimited-continuation
9999 parse:   ingredient: {name: "f", properties: ["f": "recipe"]}
9999 parse:   ingredient: {name: "12", properties: ["12": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "continuation"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "5", properties: ["5": "literal"]}
9999 parse:   product: {name: "2", properties: ["2": "number"]}
9999 parse: label: {
9999 parse: instruction: call
9999 parse:   ingredient: {name: "1", properties: ["1": "continuation"]}
9999 parse:   ingredient: {name: "2", properties: ["2": "number"]}
9999 parse:   product: {name: "2", properties: ["2": "number"]}
9999 parse: instruction: greater-or-equal
9999 parse:   ingredient: {name: "2", properties: ["2": "number"]}
9999 parse:   ingredient: {name: "8", properties: ["8": "literal"]}
9999 parse:   product: {name: "3", properties: ["3": "boolean"]}
9999 parse: instruction: break-if
9999 parse:   ingredient: {name: "3", properties: ["3": "boolean"]}
9999 parse: instruction: loop
9999 parse: label: }
9999 parse: instruction: next-ingredient
9999 parse:   product: {name: "11", properties: ["11": "number"]}
9999 parse: instruction: g
9999 parse:   ingredient: {name: "11", properties: ["11": "number"]}
9999 parse:   product: {name: "12", properties: ["12": "number"]}
9999 parse: instruction: reply
9999 parse:   ingredient: {name: "12", properties: ["12": "number"]}
9999 parse: instruction: next-ingredient
9999 parse:   product: {name: "21", properties: ["21": "number"]}
9999 parse: instruction: rewind-ingredients
9999 parse: instruction: reply-delimited-continuation
9999 parse: instruction: next-ingredient
9999 parse:   product: {name: "22", properties: ["22": "number"]}
9999 parse: instruction: add
9999 parse:   ingredient: {name: "22", properties: ["22": "number"]}
9999 parse:   ingredient: {name: "1", properties: ["1": "literal"]}
9999 parse:   product: {name: "23", properties: ["23": "number"]}
9999 parse: instruction: reply
9999 parse:   ingredient: {name: "23", properties: ["23": "number"]}
9999 brace: main: push (open, 2)
9999 brace: push (close, 7)
9999 after-brace: recipe main
9999 after-brace: create-delimited-continuation ...
9999 after-brace: copy ...
9999 after-brace: call ...
9999 after-brace: greater-or-equal ...
9999 after-brace: jump-if 3, 1:offset
9999 after-brace: jump -4:offset
9999 after-brace: recipe f
9999 after-brace: next-ingredient ...
9999 after-brace: g ...
9999 after-brace: reply ...
9999 after-brace: recipe g
9999 after-brace: next-ingredient ...
9999 after-brace: rewind-ingredients ...
9999 after-brace: reply-delimited-continuation ...
9999 after-brace: next-ingredient ...
9999 after-brace: add ...
9999 after-brace: reply ...
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 101 run: 1:continuation <- create-delimited-continuation f:recipe, 12
 102 run: 11:number <- next-ingredient 
9999 mem: storing 12 in location 11
 102 run: 12:number <- g 11:number
9999 mem: location 11 is 12
 103 run: 21:number <- next-ingredient 
9999 mem: storing 12 in location 21
 103 run: rewind-ingredients 
 103 run: reply-delimited-continuation 
9999 mem: storing 0 in location 1
 101 run: 2:number <- copy 5
9999 mem: storing 5 in location 2
 101 run: 2:number <- call 1:continuation, 2:number
9999 mem: location 1 is 0
9999 mem: location 2 is 5
 102 run: 22:number <- next-ingredient 
9999 mem: storing 5 in location 22
 102 run: 23:number <- add 22:number, 1
9999 mem: location 22 is 5
9999 mem: storing 6 in location 23
 102 run: reply 23:number
9999 mem: location 23 is 6
9999 run: result 0 is 6
9999 mem: storing 6 in location 12
 101 run: reply 12:number
9999 mem: location 12 is 6
9999 run: result 0 is 6
9999 mem: storing 6 in location 2
 100 run: 3:boolean <- greater-or-equal 2:number, 8
9999 mem: location 2 is 6
9999 mem: storing 0 in location 3
 100 run: break-if 3:boolean, 
9999 mem: location 3 is 0
9999 run: jump-if fell through
 100 run: loop 
9999 run: jumping to instruction 3
 100 run: 2:number <- call 1:continuation, 2:number
9999 mem: location 1 is 0
9999 mem: location 2 is 6
 101 run: 22:number <- next-ingredient 
9999 mem: storing 6 in location 22
 101 run: 23:number <- add 22:number, 1
9999 mem: location 22 is 6
9999 mem: storing 7 in location 23
 101 run: reply 23:number
9999 mem: location 23 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 12
 100 run: reply 12:number
9999 mem: location 12 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 2
  99 run: 3:boolean <- greater-or-equal 2:number, 8
9999 mem: location 2 is 7
9999 mem: storing 0 in location 3
  99 run: break-if 3:boolean, 
9999 mem: location 3 is 0
9999 run: jump-if fell through
  99 run: loop 
9999 run: jumping to instruction 3
  99 run: 2:number <- call 1:continuation, 2:number
9999 mem: location 1 is 0
9999 mem: location 2 is 7
 100 run: 22:number <- next-ingredient 
9999 mem: storing 7 in location 22
 100 run: 23:number <- add 22:number, 1
9999 mem: location 22 is 7
9999 mem: storing 8 in location 23
 100 run: reply 23:number
9999 mem: location 23 is 8
9999 run: result 0 is 8
9999 mem: storing 8 in location 12
  99 run: reply 12:number
9999 mem: location 12 is 8
9999 run: result 0 is 8
9999 mem: storing 8 in location 2
  98 run: 3:boolean <- greater-or-equal 2:number, 8
9999 mem: location 2 is 8
9999 mem: storing 1 in location 3
  98 run: break-if 3:boolean, 
9999 mem: location 3 is 1
9999 run: jumping to instruction 7
