 102 run: assume-console [
    left-click 1, 3
    press down-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 1, 3
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"down-arrow": <>}
9992 load: after rewriting: press down-arrow
9999 mem: storing 'left-click' event starting at 1316
9999 mem: storing 'press' event starting at 1320
9999 mem: storing console in 1324
9999 mem: storing console data in 1326
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1324
9999 mem: location 2 is 1153
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1327
9999 mem: storing 14 in location 1328
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 76 -> 77
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1333
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1334
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1253
 105 run: jump-unless screen, 
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: *row <- copy new-row
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: *column <- copy new-column
9999 mem: location 1253 is 0
9999 mem: location 1255 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1331 is 1324
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1286
9999 mem: incrementing refcount of 1324: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1286 is 1324
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1287
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1326
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1326 is 1314
9999 mem: storing 1314 in location 1288
9999 mem: incrementing refcount of 1314: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9999 mem: storing 2 in location 1289
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1289 is 2
9999 mem: storing 0 in location 1290
 105 run: jump-unless done?, 
9999 mem: location 1290 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9998 run: base address is 1315
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 0
9998 run: address to copy is 1316
9998 run: its type is event
9999 mem: location 1316 is 2
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 1
9999 mem: location 1319 is 3
9999 mem: storing 2 in location 1292
9999 mem: storing 65513 in location 1293
9999 mem: storing 1 in location 1294
9999 mem: storing 3 in location 1295
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1287 is 1325
9999 mem: storing 1 in location 1325
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1292 is 2
9999 mem: location 1293 is 65513
9999 mem: location 1294 is 1
9999 mem: location 1295 is 3
9999 mem: location 1286 is 1324
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 3]
9998 run: result 1 is 1324
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1335
9999 mem: storing 65513 in location 1336
9999 mem: storing 1 in location 1337
9999 mem: storing 3 in location 1338
9999 mem: decrementing refcount of 1324: 2 -> 1
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 1 -> 2
9999 mem: storing 1 in location 1339
9999 mem: storing 0 in location 1340
 104 run: jump-unless found?, 
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1340 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1335 is 2
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9999 mem: storing 1336 in location 1341
 104 run: jump-unless t, 
9999 mem: location 1341 is 1336
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1330 is 1012
9999 mem: location 1332 is 1153
9999 mem: location 1341 is 1336
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1343
9999 mem: storing 27 in location 1344
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1347
9999 mem: incrementing refcount of 1153: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1348
9999 mem: storing 1 in location 1349
9999 mem: storing 3 in location 1350
 105 run: jump-if editor, 1:offset
9999 mem: location 1347 is 1153
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 1
9999 mem: location 1350 is 3
9998 run: address to copy is 1349
9998 run: its type is number
9999 mem: location 1349 is 1
9999 mem: storing 1 in location 1351
 105 run: jump-if click-row, 1:offset
9999 mem: location 1351 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 1
9999 mem: location 1350 is 3
9998 run: address to copy is 1350
9998 run: its type is number
9999 mem: location 1350 is 3
9999 mem: storing 3 in location 1352
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1353
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1352 is 3
9999 mem: location 1353 is 0
9999 mem: storing 0 in location 1354
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1354 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1355
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1352 is 3
9999 mem: location 1355 is 9
9999 mem: storing 0 in location 1356
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1356 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1357
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1358
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1359
9999 mem: incrementing refcount of 1175: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1346 is 1012
9999 mem: location 1347 is 1153
9999 mem: location 1351 is 1
9999 mem: location 1352 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1372
9999 mem: storing 26 in location 1373
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1375
9999 mem: incrementing refcount of 1012: 79 -> 80
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1376
9999 mem: incrementing refcount of 1153: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1377
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1378
 106 run: jump-if editor, 1:offset
9999 mem: location 1376 is 1153
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1379
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1380
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1375 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1196
9999 mem: incrementing refcount of 1012: 80 -> 81
 107 run: jump-unless screen, 
9999 mem: location 1196 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1197
 107 run: reply height:number
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1381
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1382
9999 mem: incrementing refcount of 1175: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1382 is 1175
9999 mem: storing 1175 in location 1383
9999 mem: incrementing refcount of 1175: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1196
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1189
9999 mem: location 1178 is 0
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1175: 15 -> 14
9999 mem: storing 1189 in location 1382
9999 mem: incrementing refcount of 1189: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1384
 106 run: column:number <- copy left
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1385
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1386
 106 run: *cursor-row <- copy target-row
9999 mem: location 1377 is 1
9999 mem: location 1386 is 1161
9999 mem: storing 1 in location 1161
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1387
 106 run: *cursor-column <- copy target-column
9999 mem: location 1378 is 3
9999 mem: location 1387 is 1162
9999 mem: storing 3 in location 1162
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1388
 106 run: jump-unless curr, 
9999 mem: location 1382 is 1189
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if off-screen?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1385 is 0
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless at-cursor?, 
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1382 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1382 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is character
9999 mem: location 1190 is 97
9999 mem: storing 97 in location 1392
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1392 is 97
9999 mem: storing 0 in location 1393
 106 run: jump-unless newline?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1385 is 0
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-right?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 17 -> 16
9999 mem: storing 1198 in location 1382
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1383 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1196
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1189
9999 mem: location 1178 is 0
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1175: 15 -> 14
9999 mem: storing 1189 in location 1383
9999 mem: incrementing refcount of 1189: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1385 is 0
9999 mem: storing 1 in location 1385
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1382 is 1198
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if off-screen?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless at-cursor?, 
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1382 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1382 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 98
9999 mem: storing 98 in location 1392
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1392 is 98
9999 mem: storing 0 in location 1393
 106 run: jump-unless newline?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1385 is 1
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-right?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1202 in location 1382
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1383 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 19 -> 18
9999 mem: storing 1198 in location 1383
9999 mem: incrementing refcount of 1198: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1385 is 1
9999 mem: storing 2 in location 1385
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1382 is 1202
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if off-screen?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless at-cursor?, 
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1382 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1382 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 99
9999 mem: storing 99 in location 1392
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1392 is 99
9999 mem: storing 0 in location 1393
 106 run: jump-unless newline?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1385 is 2
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-right?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 17 -> 16
9999 mem: storing 1206 in location 1382
9999 mem: incrementing refcount of 1206: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1383 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 19 -> 18
9999 mem: storing 1202 in location 1383
9999 mem: incrementing refcount of 1202: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1385 is 2
9999 mem: storing 3 in location 1385
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1382 is 1206
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if off-screen?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 1 in location 1391
 106 run: jump-unless at-cursor?, 
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1383 is 1202
9999 mem: location 1388 is 1157
9999 mem: decrementing refcount of 1175: 14 -> 13
9999 mem: storing 1202 in location 1157
9999 mem: incrementing refcount of 1202: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1382 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1382 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 10
9999 mem: storing 10 in location 1392
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1392 is 10
9999 mem: storing 1 in location 1393
 106 run: jump-unless newline?, 
9999 mem: location 1393 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1394
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1394 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1384 is 1
9999 mem: storing 2 in location 1384
 106 run: column <- copy left
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1385
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 17 -> 16
9999 mem: storing 1210 in location 1382
9999 mem: incrementing refcount of 1210: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1383 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 20 -> 19
9999 mem: storing 1206 in location 1383
9999 mem: incrementing refcount of 1206: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1382 is 1210
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1384 is 2
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if off-screen?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1382 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1382 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is character
9999 mem: location 1211 is 100
9999 mem: storing 100 in location 1392
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1392 is 100
9999 mem: storing 0 in location 1393
 106 run: jump-unless newline?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1385 is 0
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-right?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1212
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 17 -> 16
9999 mem: storing 1214 in location 1382
9999 mem: incrementing refcount of 1214: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1383 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 19 -> 18
9999 mem: storing 1210 in location 1383
9999 mem: incrementing refcount of 1210: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1385 is 0
9999 mem: storing 1 in location 1385
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1382 is 1214
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1384 is 2
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if off-screen?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1390
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1390 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1382 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1382 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is character
9999 mem: location 1215 is 101
9999 mem: storing 101 in location 1392
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1392 is 101
9999 mem: storing 0 in location 1393
 106 run: jump-unless newline?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1385 is 1
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless at-right?, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1382 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1197
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1214: 15 -> 14
9999 mem: storing 0 in location 1382
 106 run: prev <- next_2 prev
9999 mem: location 1383 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1212
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 19 -> 18
9999 mem: storing 1214 in location 1383
9999 mem: incrementing refcount of 1214: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1385 is 1
9999 mem: storing 2 in location 1385
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1390
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 1 in location 1396
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1390 is 0
9999 mem: location 1396 is 1
9999 mem: storing 0 in location 1397
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1398
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1397 is 0
9999 mem: location 1398 is 0
9999 mem: storing 0 in location 1399
 106 run: jump-unless before-cursor?, 
9999 mem: location 1399 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1376 is 1153
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 9 -> 8
9999 mem: storing 1153 in location 1347
9999 mem: incrementing refcount of 1153: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1360
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1361
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1362
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1363
9999 mem: incrementing refcount of 1175: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1360 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1365
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1357 is 1
9999 mem: location 1358 is 0
9999 mem: location 1359 is 1175
9999 mem: location 1361 is 1
9999 mem: location 1362 is 3
9999 mem: location 1363 is 1175
9999 mem: location 1360 is 0
9999 mem: location 1365 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1365 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1175 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 3 in location 1006
9999 mem: storing 1175 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1347 is 1153
9999 mem: location 1365 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1400
9999 mem: storing 5 in location 1401
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1403
9999 mem: incrementing refcount of 1153: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1404
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1405
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1404 is 1000
9999 mem: location 1405 is 1164
9999 mem: location 1164 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1251
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1252
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1407
9999 mem: storing 1407 in location 1253
9999 mem: incrementing refcount of 1407: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1253 is 1407
9999 mem: skipping refcount at 1407
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1408 is 0
9999 mem: location 1409 is 0
9999 mem: location 1253 is 1407
9999 mem: skipping refcount at 1407
9998 run: address to copy is 1408
9999 mem: storing 1408 in location 1254
 107 run: *val <- copy x
9999 mem: location 1251 is 1000
9999 mem: location 1254 is 1408
9999 mem: storing 1000 in location 1408
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1253 is 1407
9999 mem: skipping refcount at 1407
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1408 is 1000
9999 mem: location 1409 is 0
9999 mem: location 1253 is 1407
9999 mem: skipping refcount at 1407
9999 type: type deduced to be address$
9998 run: address to copy is 1409
9999 mem: storing 1409 in location 1255
 107 run: *next <- copy in
9999 mem: location 1252 is 0
9999 mem: location 1255 is 1409
9999 mem: storing 0 in location 1409
 107 run: reply result
9999 mem: location 1253 is 1407
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1407
9999 mem: location 1405 is 1164
9999 mem: storing 1407 in location 1164
9999 mem: incrementing refcount of 1407: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1406
 106 run: *redo <- copy 0
9999 mem: location 1406 is 1165
9999 mem: storing 0 in location 1165
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1403 is 1153
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 10 -> 9
9999 mem: storing 1153 in location 1347
9999 mem: incrementing refcount of 1153: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1333
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1334
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 1
9999 mem: location 1334 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 105 run: jump-unless screen, 
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: *row <- copy new-row
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: *column <- copy new-column
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 81 -> 82
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1331 is 1324
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1286
9999 mem: incrementing refcount of 1324: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1286 is 1324
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 1
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1287
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 1
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1326
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1326 is 1314
9999 mem: storing 1314 in location 1288
9999 mem: incrementing refcount of 1314: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9999 mem: storing 2 in location 1289
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 1
9999 mem: location 1289 is 2
9999 mem: storing 0 in location 1290
 105 run: jump-unless done?, 
9999 mem: location 1290 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9998 run: base address is 1315
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 1
9998 run: address to copy is 1320
9998 run: its type is event
9999 mem: location 1320 is 1
9999 mem: location 1321 is 65516
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: storing 1 in location 1292
9999 mem: storing 65516 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 1
9999 mem: location 1287 is 1325
9999 mem: storing 2 in location 1325
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65516
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1286 is 1324
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1324
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1335
9999 mem: storing 65516 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1324: 3 -> 2
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 2 -> 3
9999 mem: storing 1 in location 1339
9999 mem: storing 0 in location 1340
 104 run: jump-unless found?, 
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1340 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65516
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1341
 104 run: jump-unless t, 
9999 mem: location 1341 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1330 is 1012
9999 mem: location 1332 is 1153
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65516
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1410
9999 mem: storing 85 in location 1411
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1413
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1415
9999 mem: storing 65516 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1419
 105 run: jump-if editor, 1:offset
9999 mem: location 1414 is 1153
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1413 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1196
9999 mem: incrementing refcount of 1012: 83 -> 84
 106 run: jump-unless screen, 
9999 mem: location 1196 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1197
 106 run: reply width:number
9999 mem: location 1197 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1420
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1413 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1196
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: jump-unless screen, 
9999 mem: location 1196 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1197
 106 run: reply height:number
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1421
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1422
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1423
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1424
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1425
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1426
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1425 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1427
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1426 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1428
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1415 is 1
9999 mem: location 1416 is 65516
9999 mem: location 1417 is 0
9999 mem: location 1418 is 0
9999 mem: storing 0 in location 1429
 105 run: jump-unless c, 
9999 mem: location 1429 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1415 is 1
9999 mem: location 1416 is 65516
9999 mem: location 1417 is 0
9999 mem: location 1418 is 0
9999 mem: storing 1416 in location 1483
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1483 is 1416
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1483 is 1416
9999 mem: location 1416 is 65516
9999 mem: storing 0 in location 1446
 105 run: jump-unless page-up?, 
9999 mem: location 1446 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1483 is 1416
9999 mem: location 1416 is 65516
9999 mem: storing 0 in location 1462
 105 run: jump-unless page-down?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1483 is 1416
9999 mem: location 1416 is 65516
9999 mem: storing 0 in location 1469
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1469 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1483 is 1416
9999 mem: location 1416 is 65516
9999 mem: storing 0 in location 1470
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1470 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1483 is 1416
9999 mem: location 1416 is 65516
9999 mem: storing 1 in location 1484
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1449
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1450
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1451
9999 mem: incrementing refcount of 1175: 14 -> 15
 105 run: editor, go-render? <- move-to-next-line editor, screen-height
9999 mem: location 1414 is 1153
9999 mem: location 1421 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1497
9999 mem: storing 23 in location 1498
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1500
9999 mem: incrementing refcount of 1153: 11 -> 12
 106 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1501
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1502
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1503
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1504
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1505
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1202
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1500 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1506
 106 run: last-line:number <- subtract screen-height, 1
9999 mem: location 1501 is 5
9999 mem: storing 4 in location 1507
 106 run: already-at-bottom?:boolean <- greater-or-equal *cursor-row, last-line
9999 mem: location 1502 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1507 is 4
9999 mem: storing 0 in location 1508
 106 run: jump-if already-at-bottom?, 
9999 mem: location 1508 is 0
9998 run: jump-if fell through
 106 run: max:number <- subtract right, left
9999 mem: location 1506 is 9
9999 mem: location 1505 is 0
9999 mem: storing 9 in location 1509
 106 run: next-line:address:shared:duplex-list:character <- before-start-of-next-line *before-cursor, max
9999 mem: location 1504 is 1157
9999 mem: location 1157 is 1202
9999 mem: location 1509 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: original:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1182
9999 mem: incrementing refcount of 1202: 19 -> 20
 107 run: max:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1183
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1184
 107 run: curr:address:shared:duplex-list:character <- copy original
9999 mem: location 1182 is 1202
9999 mem: storing 1202 in location 1185
9999 mem: incrementing refcount of 1202: 20 -> 21
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1185 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1185 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 99
9999 mem: storing 99 in location 1186
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1186 is 99
9999 mem: storing 0 in location 1187
 107 run: jump-unless at-newline?, 
9999 mem: location 1187 is 0
9998 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1185 is 1202
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1184 is 0
9999 mem: location 1183 is 9
9999 mem: storing 0 in location 1188
 107 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1185 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1185 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 99
9999 mem: storing 99 in location 1186
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1186 is 99
9999 mem: storing 0 in location 1187
 107 run: jump-if at-newline?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1185 is 1202
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 21 -> 22
9990 schedule: next_2/before-start-of-next-line/move-to-next-line/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-adjusts-column-at-next-line
 108 run: jump-if in, 1:offset
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 99
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 18 -> 19
 108 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 22 -> 21
9999 mem: storing 1206 in location 1185
9999 mem: incrementing refcount of 1206: 19 -> 20
 107 run: count <- add count, 1
9999 mem: location 1184 is 0
9999 mem: storing 1 in location 1184
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1185 is 1206
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1184 is 1
9999 mem: location 1183 is 9
9999 mem: storing 0 in location 1188
 107 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1185 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1185 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 10
9999 mem: storing 10 in location 1186
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1186 is 10
9999 mem: storing 1 in location 1187
 107 run: jump-if at-newline?, 
9999 mem: location 1187 is 1
9998 run: jumping to instruction 23
 107 run: jump-if curr, 1:offset
9999 mem: location 1185 is 1206
9998 run: jumping to instruction 26
 107 run: reply curr
9999 mem: location 1185 is 1206
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1510
9999 mem: incrementing refcount of 1206: 20 -> 21
 106 run: no-motion?:boolean <- equal next-line, *before-cursor
9999 mem: location 1510 is 1206
9999 mem: location 1504 is 1157
9999 mem: location 1157 is 1202
9999 mem: storing 0 in location 1511
 106 run: jump-unless no-motion?, 
9999 mem: location 1511 is 0
9998 run: jumping to instruction 21
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1502 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1502 is 1161
9999 mem: storing 2 in location 1161
 106 run: *before-cursor <- copy next-line
9999 mem: location 1510 is 1206
9999 mem: location 1504 is 1157
9999 mem: decrementing refcount of 1202: 21 -> 20
9999 mem: storing 1206 in location 1157
9999 mem: incrementing refcount of 1206: 21 -> 22
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1503 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1514
 106 run: *cursor-column <- copy left
9999 mem: location 1505 is 0
9999 mem: location 1503 is 1162
9999 mem: storing 0 in location 1162
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1503 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1515
 106 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1504 is 1157
9999 mem: location 1157 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1516
9999 mem: incrementing refcount of 1210: 19 -> 20
 106 run: jump-unless curr, 
9999 mem: location 1516 is 1210
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1516 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1516 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is character
9999 mem: location 1211 is 100
9999 mem: storing 100 in location 1517
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1517 is 100
9999 mem: storing 0 in location 1518
 106 run: jump-if at-newline?, 
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- copy curr
9999 mem: location 1516 is 1210
9999 mem: location 1504 is 1157
9999 mem: decrementing refcount of 1206: 23 -> 22
9999 mem: storing 1210 in location 1157
9999 mem: incrementing refcount of 1210: 20 -> 21
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1503 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1503 is 1162
9999 mem: storing 1 in location 1162
 106 run: jump 
9998 run: jumping to instruction 27
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1503 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1515
 106 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1504 is 1157
9999 mem: location 1157 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 21 -> 22
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 100
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1212
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 22 -> 21
9999 mem: storing 1214 in location 1516
9999 mem: incrementing refcount of 1214: 17 -> 18
 106 run: jump-unless curr, 
9999 mem: location 1516 is 1214
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1516 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1516 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is character
9999 mem: location 1215 is 101
9999 mem: storing 101 in location 1517
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1517 is 101
9999 mem: storing 0 in location 1518
 106 run: jump-if at-newline?, 
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- copy curr
9999 mem: location 1516 is 1214
9999 mem: location 1504 is 1157
9999 mem: decrementing refcount of 1210: 21 -> 20
9999 mem: storing 1214 in location 1157
9999 mem: incrementing refcount of 1214: 18 -> 19
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1503 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1503 is 1162
9999 mem: storing 2 in location 1162
 106 run: jump 
9998 run: jumping to instruction 27
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1503 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1515
 106 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1504 is 1157
9999 mem: location 1157 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1197
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1197 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1214: 20 -> 19
9999 mem: storing 0 in location 1516
 106 run: jump-unless curr, 
9999 mem: location 1516 is 0
9998 run: jumping to instruction 37
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1513
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1500 is 1153
9999 mem: location 1513 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1153: 12 -> 11
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 11 -> 12
9999 mem: storing 0 in location 1419
 105 run: undo-coalesce-tag:number <- copy 4/down-arrow
9999 mem: storing 4 in location 1452
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1453
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1454
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1455
9999 mem: incrementing refcount of 1175: 15 -> 16
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1452 is 4
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1433
 105 run: jump-unless *undo, 
9999 mem: location 1433 is 1164
9999 mem: location 1164 is 1407
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1433 is 1164
9999 mem: location 1164 is 1407
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1407 in location 1196
9999 mem: incrementing refcount of 1407: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1196 is 1407
9999 mem: skipping refcount at 1407
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1408 is 1000
9999 mem: location 1409 is 0
9999 mem: location 1196 is 1407
9999 mem: skipping refcount at 1407
9998 run: address to copy is 1408
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1408 is 1000
9999 mem: storing 1000 in location 1197
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1197 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1432
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1432 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1175
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1175
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1432 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1438
 105 run: jump-unless move, 
9999 mem: location 1438 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1438 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1175
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1175
9999 mem: location 1008 is 0
9999 mem: location 1438 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1456
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1452 is 4
9999 mem: location 1456 is 0
9999 mem: storing 0 in location 1457
 105 run: jump-unless coalesce?, 
9999 mem: location 1457 is 0
9998 run: jumping to instruction 629
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1432
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1449 is 1
9999 mem: location 1450 is 3
9999 mem: location 1451 is 1175
9999 mem: location 1453 is 2
9999 mem: location 1454 is 2
9999 mem: location 1455 is 1175
9999 mem: location 1452 is 4
9999 mem: location 1432 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1432 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 3 in location 1123
9999 mem: storing 1175 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 2 in location 1126
9999 mem: storing 1175 in location 1127
9999 mem: storing 4 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1414 is 1153
9999 mem: location 1432 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1403
9999 mem: incrementing refcount of 1153: 12 -> 13
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1404
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1407
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1405
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1404 is 1120
9999 mem: location 1405 is 1164
9999 mem: location 1164 is 1407
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1251
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1407 in location 1252
9999 mem: incrementing refcount of 1407: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1522
9999 mem: storing 1522 in location 1253
9999 mem: incrementing refcount of 1522: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1253 is 1522
9999 mem: skipping refcount at 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1523 is 0
9999 mem: location 1524 is 0
9999 mem: location 1253 is 1522
9999 mem: skipping refcount at 1522
9998 run: address to copy is 1523
9999 mem: storing 1523 in location 1254
 107 run: *val <- copy x
9999 mem: location 1251 is 1120
9999 mem: location 1254 is 1523
9999 mem: storing 1120 in location 1523
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1253 is 1522
9999 mem: skipping refcount at 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1523 is 1120
9999 mem: location 1524 is 0
9999 mem: location 1253 is 1522
9999 mem: skipping refcount at 1522
9999 type: type deduced to be address$
9998 run: address to copy is 1524
9999 mem: storing 1524 in location 1255
 107 run: *next <- copy in
9999 mem: location 1252 is 1407
9999 mem: location 1255 is 1524
9999 mem: storing 1407 in location 1524
9999 mem: incrementing refcount of 1407: 4 -> 5
 107 run: reply result
9999 mem: location 1253 is 1522
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1522
9999 mem: location 1405 is 1164
9999 mem: decrementing refcount of 1407: 5 -> 4
9999 mem: storing 1522 in location 1164
9999 mem: incrementing refcount of 1522: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1406
 106 run: *redo <- copy 0
9999 mem: location 1406 is 1165
9999 mem: storing 0 in location 1165
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1403 is 1153
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 13 -> 12
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 12 -> 13
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1413 is 1012
9999 mem: location 1414 is 1153
9999 mem: location 1419 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1153
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 85 -> 84
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 84 -> 85
9999 mem: decrementing refcount of 1153: 13 -> 12
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 12 -> 13
9999 mem: storing 0 in location 1342
 104 run: jump-unless go-render?, 
9999 mem: location 1342 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1333
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1334
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 2
9999 mem: location 1334 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 85 -> 86
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1253
 105 run: jump-unless screen, 
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: *row <- copy new-row
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: *column <- copy new-column
9999 mem: location 1253 is 2
9999 mem: location 1255 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 85 -> 86
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1331 is 1324
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1286
9999 mem: incrementing refcount of 1324: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1286 is 1324
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 2
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1287
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 2
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1326
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1326 is 1314
9999 mem: storing 1314 in location 1288
9999 mem: incrementing refcount of 1314: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9999 mem: storing 2 in location 1289
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 2
9999 mem: location 1289 is 2
9999 mem: storing 1 in location 1290
 105 run: jump-unless done?, 
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1193 in location 1291
9999 mem: incrementing refcount of 1193: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1291 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1286 is 1324
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1324
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1324: 4 -> 3
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 3 -> 4
9999 mem: storing 1 in location 1339
9999 mem: storing 1 in location 1340
 104 run: jump-unless found?, 
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1340 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1330 is 1012
9999 mem: location 1331 is 1324
9999 mem: location 1332 is 1153
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 2
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [0]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
9999 mem: storing 'type' event starting at 1527
9999 mem: storing 'text' tag at 1527
9999 mem: storing character 48 at 1528
9999 mem: storing console in 1531
9999 mem: storing console data in 1533
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1531
9999 mem: location 2 is 1153
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 86 -> 87
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1531 in location 1331
9999 mem: incrementing refcount of 1531: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 13 -> 14
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1333
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1334
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 2
9999 mem: location 1334 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 87 -> 88
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1253
 105 run: jump-unless screen, 
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: *row <- copy new-row
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: *column <- copy new-column
9999 mem: location 1253 is 2
9999 mem: location 1255 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 88 -> 87
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 87 -> 88
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1331 is 1531
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1531 in location 1286
9999 mem: incrementing refcount of 1531: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1286 is 1531
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1532 is 0
9999 mem: location 1533 is 1525
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9998 run: address to copy is 1532
9999 mem: storing 1532 in location 1287
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1532 is 0
9999 mem: location 1533 is 1525
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9998 run: address to copy is 1533
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1533 is 1525
9999 mem: storing 1525 in location 1288
9999 mem: incrementing refcount of 1525: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1288 is 1525
9999 mem: skipping refcount at 1525
9999 mem: storing 1 in location 1289
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1287 is 1532
9999 mem: location 1532 is 0
9999 mem: location 1289 is 1
9999 mem: storing 0 in location 1290
 105 run: jump-unless done?, 
9999 mem: location 1290 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1288 is 1525
9999 mem: skipping refcount at 1525
9998 run: base address is 1526
9999 mem: location 1287 is 1532
9999 mem: location 1532 is 0
9998 run: address to copy is 1527
9998 run: its type is event
9999 mem: location 1527 is 0
9999 mem: location 1528 is 48
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: storing 0 in location 1292
9999 mem: storing 48 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1287 is 1532
9999 mem: location 1532 is 0
9999 mem: location 1287 is 1532
9999 mem: storing 1 in location 1532
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1292 is 0
9999 mem: location 1293 is 48
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1286 is 1531
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1531
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1335
9999 mem: storing 48 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1531: 2 -> 1
9999 mem: storing 1531 in location 1331
9999 mem: incrementing refcount of 1531: 1 -> 2
9999 mem: storing 1 in location 1339
9999 mem: storing 0 in location 1340
 104 run: jump-unless found?, 
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1340 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1335 is 0
9999 mem: location 1336 is 48
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1341
 104 run: jump-unless t, 
9999 mem: location 1341 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1330 is 1012
9999 mem: location 1332 is 1153
9999 mem: location 1335 is 0
9999 mem: location 1336 is 48
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1413
9999 mem: incrementing refcount of 1012: 88 -> 89
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 14 -> 15
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1415
9999 mem: storing 48 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1419
 105 run: jump-if editor, 1:offset
9999 mem: location 1414 is 1153
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1413 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1534
9999 mem: storing 3 in location 1535
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1537
9999 mem: incrementing refcount of 1012: 89 -> 90
 106 run: jump-unless screen, 
9999 mem: location 1537 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1538
 106 run: reply width:number
9999 mem: location 1538 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1420
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1413 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1537
9999 mem: incrementing refcount of 1012: 90 -> 91
 106 run: jump-unless screen, 
9999 mem: location 1537 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1538
 106 run: reply height:number
9999 mem: location 1538 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1421
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1422
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1423
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1424
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1425
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1426
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1425 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1427
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1426 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1428
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1415 is 0
9999 mem: location 1416 is 48
9999 mem: location 1417 is 0
9999 mem: location 1418 is 0
9999 mem: storing 1416 in location 1429
 105 run: jump-unless c, 
9999 mem: location 1429 is 1416
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1430
 105 run: jump-unless redo?, 
9999 mem: location 1430 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1441
 105 run: jump-unless undo?, 
9999 mem: location 1441 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1446
 105 run: jump-unless page-up?, 
9999 mem: location 1446 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1462
 105 run: jump-unless page-down?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1463
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1468
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1468 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1469
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1469 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1470
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1470 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1471
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1475
 105 run: jump-unless tab?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 0 in location 1479
 105 run: jump-unless newline?, 
9999 mem: location 1479 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: storing 1 in location 1482
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1419
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1482 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1464
9999 mem: incrementing refcount of 1175: 16 -> 17
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1424 is 1157
9999 mem: location 1157 is 1214
9999 mem: storing 1214 in location 1476
9999 mem: incrementing refcount of 1214: 19 -> 20
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1414 is 1153
9999 mem: location 1429 is 1416
9999 mem: location 1416 is 48
9999 mem: location 1413 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1539
9999 mem: storing 31 in location 1540
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1542
9999 mem: incrementing refcount of 1153: 15 -> 16
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1543
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1544
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1545
 106 run: insert_2 c, *before-cursor
9999 mem: location 1543 is 48
9999 mem: location 1545 is 1157
9999 mem: location 1157 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1169
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1170
9999 mem: incrementing refcount of 1214: 20 -> 21
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1572
9999 mem: storing 1572 in location 1171
9999 mem: incrementing refcount of 1572: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1171 is 1572
9999 mem: skipping refcount at 1572
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: location 1575 is 0
9999 mem: location 1171 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1573
9999 mem: storing 1573 in location 1172
 107 run: *val <- copy x
9999 mem: location 1169 is 48
9999 mem: location 1172 is 1573
9999 mem: storing 48 in location 1573
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1170 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1170 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1173
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1170 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1170 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1174
 107 run: *y <- copy new-node
9999 mem: location 1171 is 1572
9999 mem: location 1174 is 1216
9999 mem: storing 1572 in location 1216
9999 mem: incrementing refcount of 1572: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1171 is 1572
9999 mem: skipping refcount at 1572
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 48
9999 mem: location 1574 is 0
9999 mem: location 1575 is 0
9999 mem: location 1171 is 1572
9999 mem: skipping refcount at 1572
9999 type: type deduced to be character$
9998 run: address to copy is 1575
9999 mem: storing 1575 in location 1174
 107 run: *y <- copy in
9999 mem: location 1170 is 1214
9999 mem: location 1174 is 1575
9999 mem: storing 1214 in location 1575
9999 mem: incrementing refcount of 1214: 21 -> 22
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1171 is 1572
9999 mem: skipping refcount at 1572
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 48
9999 mem: location 1574 is 0
9999 mem: location 1575 is 1214
9999 mem: location 1171 is 1572
9999 mem: skipping refcount at 1572
9999 type: type deduced to be character$
9998 run: address to copy is 1574
9999 mem: storing 1574 in location 1174
 107 run: *y <- copy next-node
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1574
9999 mem: storing 0 in location 1574
 107 run: jump-if next-node, 1:offset
9999 mem: location 1173 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1170 is 1214
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1545 is 1157
9999 mem: location 1157 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1537
9999 mem: incrementing refcount of 1214: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1537 is 1214
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1537 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1572
9999 mem: location 1217 is 1210
9999 mem: location 1537 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 1572
9999 mem: storing 1572 in location 1538
9999 mem: incrementing refcount of 1572: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1538 is 1572
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1572
9999 mem: location 1545 is 1157
9999 mem: decrementing refcount of 1214: 23 -> 22
9999 mem: storing 1572 in location 1157
9999 mem: incrementing refcount of 1572: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1546
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1547
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is number
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1548
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1542 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1549
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1546 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1550
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1547 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1551
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1544 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1537
9999 mem: incrementing refcount of 1012: 92 -> 93
 107 run: jump-unless screen, 
9999 mem: location 1537 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1538
 107 run: reply width:number
9999 mem: location 1538 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1552
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1544 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1537
9999 mem: incrementing refcount of 1012: 93 -> 94
 107 run: jump-unless screen, 
9999 mem: location 1537 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1537 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1538
 107 run: reply height:number
9999 mem: location 1538 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1553
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1549 is 9
9999 mem: storing 8 in location 1554
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1547 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1554 is 8
9999 mem: storing 0 in location 1555
 106 run: jump-unless at-wrap?, 
9999 mem: location 1555 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1547 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1547 is 1162
9999 mem: storing 3 in location 1162
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1545 is 1157
9999 mem: location 1157 is 1572
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1572 in location 1537
9999 mem: incrementing refcount of 1572: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1537 is 1572
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1537 is 1572
9999 mem: skipping refcount at 1572
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 48
9999 mem: location 1574 is 0
9999 mem: location 1575 is 1214
9999 mem: location 1537 is 1572
9999 mem: skipping refcount at 1572
9999 type: type deduced to be character$
9998 run: address to copy is 1574
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1574 is 0
9999 mem: storing 0 in location 1538
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1538 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1562
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1562 is 0
9999 mem: storing 1 in location 1563
 106 run: jump-unless at-end?, 
9999 mem: location 1563 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1553 is 5
9999 mem: storing 4 in location 1564
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1550 is 2
9999 mem: location 1564 is 4
9999 mem: storing 0 in location 1565
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1551 is 2
9999 mem: location 1549 is 9
9999 mem: storing 0 in location 1566
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1565 is 0
9999 mem: location 1566 is 0
9999 mem: storing 0 in location 1567
 106 run: jump-if overflow?, 
9999 mem: location 1567 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1544 is 1012
9999 mem: location 1550 is 2
9999 mem: location 1551 is 2
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1253
 107 run: jump-unless screen, 
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 107 run: *row <- copy new-row
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 107 run: *column <- copy new-column
9999 mem: location 1253 is 2
9999 mem: location 1255 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1544 is 1012
9999 mem: location 1543 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1259
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1260
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 107 run: jump-if color-found?, 
9999 mem: location 1262 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1261
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
 107 run: jump-if bg-color-found?, 
9999 mem: location 1264 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1263
 107 run: trace 90, [print-character], c
9999 mem: location 1260 is 48
  90 print-character: 48 
 107 run: jump-unless screen, 
9999 mem: location 1259 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1265
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1266
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1267
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1267 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1268
 107 run: jump-if legal?, 1:offset
9999 mem: location 1268 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1267 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1266 is 5
9999 mem: storing 1 in location 1268
 107 run: jump-if legal?, 1:offset
9999 mem: location 1268 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1269
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1268
 107 run: jump-if legal?, 1:offset
9999 mem: location 1268 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1265 is 10
9999 mem: storing 1 in location 1268
 107 run: jump-if legal?, 1:offset
9999 mem: location 1268 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1260 is 48
9999 mem: storing 0 in location 1270
 107 run: jump-unless newline?, 
9999 mem: location 1270 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1267 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1265 is 10
9999 mem: storing 20 in location 1273
 107 run: index <- add index, *column
9999 mem: location 1273 is 20
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1273
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1274
9999 mem: incrementing refcount of 1018: 54 -> 55
 107 run: len:number <- length *buf
9999 mem: location 1274 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1275
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1260 is 48
9999 mem: storing 0 in location 1276
 107 run: jump-unless backspace?, 
9999 mem: location 1276 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1274 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1273 is 22
9999 mem: storing 1064 in location 1278
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1278 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1278 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1279
 107 run: *cursor-contents <- copy c
9999 mem: location 1260 is 48
9999 mem: location 1279 is 1064
9999 mem: storing 48 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1278 is 1064
9999 mem: location 1064 is 48
9999 mem: location 1065 is 7
9999 mem: location 1278 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1280
 107 run: *cursor-color <- copy color
9999 mem: location 1261 is 7
9999 mem: location 1280 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1265 is 10
9999 mem: storing 9 in location 1281
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1281 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if at-right?, 
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1269 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1259 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1561
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1542 is 1153
9999 mem: location 1544 is 1012
9999 mem: location 1561 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1153: 16 -> 15
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 15 -> 16
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1413
9999 mem: incrementing refcount of 1012: 95 -> 96
9999 mem: storing 0 in location 1419
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1466
9999 mem: incrementing refcount of 1175: 17 -> 18
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1433
 105 run: jump-unless *undo, 
9999 mem: location 1433 is 1164
9999 mem: location 1164 is 1522
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1433 is 1164
9999 mem: location 1164 is 1522
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1522 in location 1537
9999 mem: incrementing refcount of 1522: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1537 is 1522
9999 mem: skipping refcount at 1522
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1523 is 1120
9999 mem: location 1524 is 1407
9999 mem: location 1537 is 1522
9999 mem: skipping refcount at 1522
9998 run: address to copy is 1523
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1523 is 1120
9999 mem: storing 1120 in location 1538
9999 mem: incrementing refcount of 1120: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1538 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1432
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1432 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1175
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1175
9999 mem: location 1128 is 4
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1432 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1439
 105 run: jump-unless typing, 
9999 mem: location 1439 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1476 is 1214
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1537
9999 mem: incrementing refcount of 1214: 22 -> 23
 106 run: jump-if in, 1:offset
9999 mem: location 1537 is 1214
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1537 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 101
9999 mem: location 1216 is 1572
9999 mem: location 1217 is 1210
9999 mem: location 1537 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 1572
9999 mem: storing 1572 in location 1538
9999 mem: incrementing refcount of 1572: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1538 is 1572
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1572
9999 mem: storing 1572 in location 1440
9999 mem: incrementing refcount of 1572: 6 -> 7
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1440 is 1572
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1572 in location 1537
9999 mem: incrementing refcount of 1572: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1537 is 1572
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1537 is 1572
9999 mem: skipping refcount at 1572
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1573 is 48
9999 mem: location 1574 is 0
9999 mem: location 1575 is 1214
9999 mem: location 1537 is 1572
9999 mem: skipping refcount at 1572
9999 type: type deduced to be character$
9998 run: address to copy is 1574
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1574 is 0
9999 mem: storing 0 in location 1538
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1538 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1478
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1576
9999 mem: decrementing refcount of 1120: 6 -> 5
9999 mem: storing 1576 in location 1432
9999 mem: incrementing refcount of 1576: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1427 is 2
9999 mem: location 1428 is 2
9999 mem: location 1464 is 1175
9999 mem: location 1425 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1426 is 1162
9999 mem: location 1162 is 3
9999 mem: location 1466 is 1175
9999 mem: location 1440 is 1572
9999 mem: location 1478 is 0
9999 mem: location 1432 is 1576
9999 mem: skipping refcount at 1576
9999 mem: location 1432 is 1576
9999 mem: skipping refcount at 1576
9999 mem: storing 0 in location 1577
9999 mem: storing 2 in location 1578
9999 mem: storing 2 in location 1579
9999 mem: storing 1175 in location 1580
9999 mem: storing 2 in location 1581
9999 mem: storing 3 in location 1582
9999 mem: storing 1175 in location 1583
9999 mem: storing 1572 in location 1584
9999 mem: storing 0 in location 1585
9999 mem: storing 1 in location 1586
 105 run: editor <- add-operation editor, op
9999 mem: location 1414 is 1153
9999 mem: location 1432 is 1576
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1403
9999 mem: incrementing refcount of 1153: 16 -> 17
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1576 in location 1404
9999 mem: incrementing refcount of 1576: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1522
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1405
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1404 is 1576
9999 mem: location 1405 is 1164
9999 mem: location 1164 is 1522
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1576 in location 1251
9999 mem: incrementing refcount of 1576: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1522 in location 1252
9999 mem: incrementing refcount of 1522: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1588
9999 mem: storing 1588 in location 1253
9999 mem: incrementing refcount of 1588: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1253 is 1588
9999 mem: skipping refcount at 1588
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1253 is 1588
9999 mem: skipping refcount at 1588
9998 run: address to copy is 1589
9999 mem: storing 1589 in location 1254
 107 run: *val <- copy x
9999 mem: location 1251 is 1576
9999 mem: location 1254 is 1589
9999 mem: storing 1576 in location 1589
9999 mem: incrementing refcount of 1576: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1253 is 1588
9999 mem: skipping refcount at 1588
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1589 is 1576
9999 mem: location 1590 is 0
9999 mem: location 1253 is 1588
9999 mem: skipping refcount at 1588
9999 type: type deduced to be address$
9998 run: address to copy is 1590
9999 mem: storing 1590 in location 1255
 107 run: *next <- copy in
9999 mem: location 1252 is 1522
9999 mem: location 1255 is 1590
9999 mem: storing 1522 in location 1590
9999 mem: incrementing refcount of 1522: 4 -> 5
 107 run: reply result
9999 mem: location 1253 is 1588
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1588
9999 mem: location 1405 is 1164
9999 mem: decrementing refcount of 1522: 5 -> 4
9999 mem: storing 1588 in location 1164
9999 mem: incrementing refcount of 1588: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1588
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1406
 106 run: *redo <- copy 0
9999 mem: location 1406 is 1165
9999 mem: storing 0 in location 1165
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1403 is 1153
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 17 -> 16
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 16 -> 17
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1413 is 1012
9999 mem: location 1414 is 1153
9999 mem: location 1419 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1153
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 95 -> 96
9999 mem: decrementing refcount of 1153: 17 -> 16
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 16 -> 17
9999 mem: storing 0 in location 1342
 104 run: jump-unless go-render?, 
9999 mem: location 1342 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1588
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1333
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1572
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1588
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1334
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 2
9999 mem: location 1334 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 96 -> 97
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 105 run: jump-unless screen, 
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: *row <- copy new-row
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: *column <- copy new-column
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 96 -> 97
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1331 is 1531
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1531 in location 1286
9999 mem: incrementing refcount of 1531: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1286 is 1531
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1532 is 1
9999 mem: location 1533 is 1525
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9998 run: address to copy is 1532
9999 mem: storing 1532 in location 1287
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1532 is 1
9999 mem: location 1533 is 1525
9999 mem: location 1286 is 1531
9999 mem: skipping refcount at 1531
9998 run: address to copy is 1533
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1533 is 1525
9999 mem: storing 1525 in location 1288
9999 mem: incrementing refcount of 1525: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1288 is 1525
9999 mem: skipping refcount at 1525
9999 mem: storing 1 in location 1289
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1287 is 1532
9999 mem: location 1532 is 1
9999 mem: location 1289 is 1
9999 mem: storing 1 in location 1290
 105 run: jump-unless done?, 
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1534 in location 1291
9999 mem: incrementing refcount of 1534: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1291 is 1534
9999 mem: skipping refcount at 1534
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1286 is 1531
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1531
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1531: 3 -> 2
9999 mem: storing 1531 in location 1331
9999 mem: incrementing refcount of 1531: 2 -> 3
9999 mem: storing 1 in location 1339
9999 mem: storing 1 in location 1340
 104 run: jump-unless found?, 
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1340 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1330 is 1012
9999 mem: location 1331 is 1531
9999 mem: location 1332 is 1153
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
9990 schedule: scenario_editor-adjusts-column-at-next-line
 102 run: screen-should-contain [
    .          .
    .abc       .
    .de0       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
