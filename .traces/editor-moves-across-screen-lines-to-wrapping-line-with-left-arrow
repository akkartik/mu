 102 run: screen-should-contain [
    .          .
    .abcd↩     .
    .ef        .
    .g         .
    .┈┈┈┈┈     .
  ]
 102 run: assume-console [
    left-click 3, 0
    press left-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 3, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"left-arrow": <>}
9992 load: after rewriting: press left-arrow
9999 mem: storing 'left-click' event starting at 1326
9999 mem: storing 'press' event starting at 1330
9999 mem: storing console in 1334
9999 mem: storing console data in 1336
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9992 transform: checking variant (strict) 0: recipe editor-event-loop {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>} -> {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1334
9999 mem: location 2 is 1155
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1337
9999 mem: storing 14 in location 1338
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1340
9999 mem: incrementing refcount of 1012: 62 -> 63
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1342
9999 mem: incrementing refcount of 1155: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1343
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1344
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1340 is 1012
9999 mem: location 1343 is 1
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1261
9999 mem: incrementing refcount of 1012: 63 -> 64
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1262
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1263
 105 run: jump-unless screen, 
9999 mem: location 1261 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1264
 105 run: *row <- copy new-row
9999 mem: location 1262 is 1
9999 mem: location 1264 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1265
 105 run: *column <- copy new-column
9999 mem: location 1263 is 0
9999 mem: location 1265 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1261 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 64 -> 63
9999 mem: storing 1012 in location 1340
9999 mem: incrementing refcount of 1012: 63 -> 64
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1296
9999 mem: incrementing refcount of 1334: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1296 is 1334
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 0
9999 mem: location 1336 is 1324
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9999 mem: storing 1335 in location 1297
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 0
9999 mem: location 1336 is 1324
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1336 is 1324
9999 mem: storing 1324 in location 1298
9999 mem: incrementing refcount of 1324: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1298 is 1324
9999 mem: skipping refcount at 1324
9999 mem: storing 2 in location 1299
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 0
9999 mem: location 1299 is 2
9999 mem: storing 0 in location 1300
 105 run: jump-unless done?, 
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1298 is 1324
9999 mem: skipping refcount at 1324
9998 run: base address is 1325
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 0
9998 run: address to copy is 1326
9998 run: its type is event
9999 mem: location 1326 is 2
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 3
9999 mem: location 1329 is 0
9999 mem: storing 2 in location 1302
9999 mem: storing 65513 in location 1303
9999 mem: storing 3 in location 1304
9999 mem: storing 0 in location 1305
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 0
9999 mem: location 1297 is 1335
9999 mem: storing 1 in location 1335
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 3
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1345
9999 mem: storing 65513 in location 1346
9999 mem: storing 3 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 2 -> 1
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 1 -> 2
9999 mem: storing 1 in location 1349
9999 mem: storing 0 in location 1350
 104 run: jump-unless found?, 
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1350 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1345 is 2
9999 mem: location 1346 is 65513
9999 mem: location 1347 is 3
9999 mem: location 1348 is 0
9999 mem: storing 1346 in location 1351
 104 run: jump-unless t, 
9999 mem: location 1351 is 1346
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1340 is 1012
9999 mem: location 1342 is 1155
9999 mem: location 1351 is 1346
9999 mem: location 1346 is 65513
9999 mem: location 1347 is 3
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1353
9999 mem: storing 27 in location 1354
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1356
9999 mem: incrementing refcount of 1012: 64 -> 65
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1357
9999 mem: incrementing refcount of 1155: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1358
9999 mem: storing 3 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if editor, 1:offset
9999 mem: location 1357 is 1155
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1358 is 65513
9999 mem: location 1359 is 3
9999 mem: location 1360 is 0
9998 run: address to copy is 1359
9998 run: its type is number
9999 mem: location 1359 is 3
9999 mem: storing 3 in location 1361
 105 run: jump-if click-row, 1:offset
9999 mem: location 1361 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1358 is 65513
9999 mem: location 1359 is 3
9999 mem: location 1360 is 0
9998 run: address to copy is 1360
9998 run: its type is number
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1362
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1363
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1364 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1365
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1362 is 0
9999 mem: location 1365 is 4
9999 mem: storing 0 in location 1366
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1366 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1367
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1368
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1157 is 1177
9999 mem: storing 1177 in location 1369
9999 mem: incrementing refcount of 1177: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1356 is 1012
9999 mem: location 1357 is 1155
9999 mem: location 1361 is 3
9999 mem: location 1362 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1382
9999 mem: storing 26 in location 1383
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1385
9999 mem: incrementing refcount of 1012: 65 -> 66
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1386
9999 mem: incrementing refcount of 1155: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1387
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1388
 106 run: jump-if editor, 1:offset
9999 mem: location 1386 is 1155
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1389
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1390
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1385 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1198
9999 mem: incrementing refcount of 1012: 66 -> 67
 107 run: jump-unless screen, 
9999 mem: location 1198 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1198 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1198 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1199
 107 run: reply height:number
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1391
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1157 is 1177
9999 mem: storing 1177 in location 1392
9999 mem: incrementing refcount of 1177: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1392 is 1177
9999 mem: storing 1177 in location 1393
9999 mem: incrementing refcount of 1177: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1198
9999 mem: incrementing refcount of 1177: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1177
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1177
9999 mem: skipping refcount at 1177
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1191
9999 mem: location 1180 is 0
9999 mem: location 1198 is 1177
9999 mem: skipping refcount at 1177
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1179 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1177: 15 -> 14
9999 mem: storing 1191 in location 1392
9999 mem: incrementing refcount of 1191: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1394
 106 run: column:number <- copy left
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1395
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1396
 106 run: *cursor-row <- copy target-row
9999 mem: location 1387 is 3
9999 mem: location 1396 is 1163
9999 mem: storing 3 in location 1163
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1397
 106 run: *cursor-column <- copy target-column
9999 mem: location 1388 is 0
9999 mem: location 1397 is 1164
9999 mem: storing 0 in location 1164
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1177
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1386 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1398
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1191
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-across-screen-lines-to-wrapping-line-with-left-arrow
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1191
9999 mem: skipping refcount at 1191
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1177
9999 mem: location 1392 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is character
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 97
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 0
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1177
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 17 -> 16
9999 mem: storing 1200 in location 1392
9999 mem: incrementing refcount of 1200: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1198
9999 mem: incrementing refcount of 1177: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1177
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1177
9999 mem: skipping refcount at 1177
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 167
9999 mem: location 1179 is 1191
9999 mem: location 1180 is 0
9999 mem: location 1198 is 1177
9999 mem: skipping refcount at 1177
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1179 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1177: 15 -> 14
9999 mem: storing 1191 in location 1393
9999 mem: incrementing refcount of 1191: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1395 is 0
9999 mem: storing 1 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1200
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1392 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is character
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 98
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 1
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 17 -> 16
9999 mem: storing 1204 in location 1392
9999 mem: incrementing refcount of 1204: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1177
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 19 -> 18
9999 mem: storing 1200 in location 1393
9999 mem: incrementing refcount of 1200: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1395 is 1
9999 mem: storing 2 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1204
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1392 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is character
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 99
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 2
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 17 -> 16
9999 mem: storing 1208 in location 1392
9999 mem: incrementing refcount of 1208: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 19 -> 18
9999 mem: storing 1204 in location 1393
9999 mem: incrementing refcount of 1204: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1395 is 2
9999 mem: storing 3 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1208
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1392 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is character
9999 mem: location 1209 is 100
9999 mem: storing 100 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 100
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 3
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 17 -> 16
9999 mem: storing 1212 in location 1392
9999 mem: incrementing refcount of 1212: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 19 -> 18
9999 mem: storing 1208 in location 1393
9999 mem: incrementing refcount of 1208: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1395 is 3
9999 mem: storing 4 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1212
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 1
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 1
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1392 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is character
9999 mem: location 1213 is 101
9999 mem: storing 101 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 101
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 4
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 106 run: column <- copy left
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1395
 106 run: row <- add row, 1
9999 mem: location 1394 is 1
9999 mem: storing 2 in location 1394
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1212
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1392 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is character
9999 mem: location 1213 is 101
9999 mem: storing 101 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 101
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 0
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 17 -> 16
9999 mem: storing 1216 in location 1392
9999 mem: incrementing refcount of 1216: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 19 -> 18
9999 mem: storing 1212 in location 1393
9999 mem: incrementing refcount of 1212: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1395 is 0
9999 mem: storing 1 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1216
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 102
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1392 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is character
9999 mem: location 1217 is 102
9999 mem: storing 102 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 102
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 1
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 102
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 17 -> 16
9999 mem: storing 1220 in location 1392
9999 mem: incrementing refcount of 1220: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 19 -> 18
9999 mem: storing 1216 in location 1393
9999 mem: incrementing refcount of 1216: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1395 is 1
9999 mem: storing 2 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1220
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 2
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1220
9999 mem: skipping refcount at 1220
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1392 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is character
9999 mem: location 1221 is 10
9999 mem: storing 10 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 10
9999 mem: storing 1 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 2
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1394 is 2
9999 mem: storing 3 in location 1394
 106 run: column <- copy left
9999 mem: location 1389 is 0
9999 mem: storing 0 in location 1395
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 17 -> 16
9999 mem: storing 1224 in location 1392
9999 mem: incrementing refcount of 1224: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 102
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 19 -> 18
9999 mem: storing 1220 in location 1393
9999 mem: incrementing refcount of 1220: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1392 is 1224
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1394 is 3
9999 mem: location 1391 is 5
9999 mem: storing 0 in location 1399
 106 run: jump-if off-screen?, 
9999 mem: location 1399 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 3
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1400
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1395 is 0
9999 mem: location 1397 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 1 in location 1401
 106 run: jump-unless at-cursor?, 
9999 mem: location 1401 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1393 is 1220
9999 mem: location 1398 is 1159
9999 mem: decrementing refcount of 1177: 14 -> 13
9999 mem: storing 1220 in location 1159
9999 mem: incrementing refcount of 1220: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1392 is 1224
9999 mem: skipping refcount at 1224
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1225 is 103
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1392 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is character
9999 mem: location 1225 is 103
9999 mem: storing 103 in location 1402
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1402 is 103
9999 mem: storing 0 in location 1403
 106 run: jump-unless newline?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1395 is 0
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1405
 106 run: jump-unless at-right?, 
9999 mem: location 1405 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1392 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1225 is 103
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 type: type deduced to be character$
9998 run: address to copy is 1226
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1226 is 0
9999 mem: storing 0 in location 1199
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1224: 15 -> 14
9999 mem: storing 0 in location 1392
 106 run: prev <- next_2 prev
9999 mem: location 1393 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 20 -> 19
9999 mem: storing 1224 in location 1393
9999 mem: incrementing refcount of 1224: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1395 is 0
9999 mem: storing 1 in location 1395
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1392 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1394 is 3
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1400
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1395 is 1
9999 mem: location 1397 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1406
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1400 is 1
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 1407
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1394 is 3
9999 mem: location 1396 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1408
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: storing 0 in location 1409
 106 run: jump-unless before-cursor?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1386 is 1155
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1155: 9 -> 8
9999 mem: storing 1155 in location 1357
9999 mem: incrementing refcount of 1155: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1370
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1371
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1372
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1357 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1157 is 1177
9999 mem: storing 1177 in location 1373
9999 mem: incrementing refcount of 1177: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1375
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1367 is 1
9999 mem: location 1368 is 0
9999 mem: location 1369 is 1177
9999 mem: location 1371 is 3
9999 mem: location 1372 is 0
9999 mem: location 1373 is 1177
9999 mem: location 1370 is 0
9999 mem: location 1375 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1375 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1177 in location 1004
9999 mem: storing 3 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1177 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1357 is 1155
9999 mem: location 1375 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1410
9999 mem: storing 5 in location 1411
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1413
9999 mem: incrementing refcount of 1155: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1414
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1415
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1414 is 1000
9999 mem: location 1415 is 1166
9999 mem: location 1166 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1261
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1417
9999 mem: storing 1417 in location 1263
9999 mem: incrementing refcount of 1417: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1263 is 1417
9999 mem: skipping refcount at 1417
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: location 1263 is 1417
9999 mem: skipping refcount at 1417
9998 run: address to copy is 1418
9999 mem: storing 1418 in location 1264
 107 run: *val <- copy x
9999 mem: location 1261 is 1000
9999 mem: location 1264 is 1418
9999 mem: storing 1000 in location 1418
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1263 is 1417
9999 mem: skipping refcount at 1417
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1418 is 1000
9999 mem: location 1419 is 0
9999 mem: location 1263 is 1417
9999 mem: skipping refcount at 1417
9999 type: type deduced to be address$
9998 run: address to copy is 1419
9999 mem: storing 1419 in location 1265
 107 run: *next <- copy in
9999 mem: location 1262 is 0
9999 mem: location 1265 is 1419
9999 mem: storing 0 in location 1419
 107 run: reply result
9999 mem: location 1263 is 1417
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1417
9999 mem: location 1415 is 1166
9999 mem: storing 1417 in location 1166
9999 mem: incrementing refcount of 1417: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1416
 106 run: *redo <- copy 0
9999 mem: location 1416 is 1167
9999 mem: storing 0 in location 1167
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1413 is 1155
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1155: 10 -> 9
9999 mem: storing 1155 in location 1357
9999 mem: incrementing refcount of 1155: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1343
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1344
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1340 is 1012
9999 mem: location 1343 is 3
9999 mem: location 1344 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1261
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1262
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1263
 105 run: jump-unless screen, 
9999 mem: location 1261 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1264
 105 run: *row <- copy new-row
9999 mem: location 1262 is 3
9999 mem: location 1264 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1265
 105 run: *column <- copy new-column
9999 mem: location 1263 is 0
9999 mem: location 1265 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1261 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 68 -> 67
9999 mem: storing 1012 in location 1340
9999 mem: incrementing refcount of 1012: 67 -> 68
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1296
9999 mem: incrementing refcount of 1334: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1296 is 1334
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 1
9999 mem: location 1336 is 1324
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9999 mem: storing 1335 in location 1297
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 1
9999 mem: location 1336 is 1324
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1336 is 1324
9999 mem: storing 1324 in location 1298
9999 mem: incrementing refcount of 1324: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1298 is 1324
9999 mem: skipping refcount at 1324
9999 mem: storing 2 in location 1299
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 1
9999 mem: location 1299 is 2
9999 mem: storing 0 in location 1300
 105 run: jump-unless done?, 
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1298 is 1324
9999 mem: skipping refcount at 1324
9998 run: base address is 1325
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 1
9998 run: address to copy is 1330
9998 run: its type is event
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65515
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: storing 1 in location 1302
9999 mem: storing 65515 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 1
9999 mem: location 1297 is 1335
9999 mem: storing 2 in location 1335
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65515
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1345
9999 mem: storing 65515 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 3 -> 2
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 2 -> 3
9999 mem: storing 1 in location 1349
9999 mem: storing 0 in location 1350
 104 run: jump-unless found?, 
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1350 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65515
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1351
 104 run: jump-unless t, 
9999 mem: location 1351 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1340 is 1012
9999 mem: location 1342 is 1155
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65515
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1420
9999 mem: storing 85 in location 1421
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1423
9999 mem: incrementing refcount of 1012: 68 -> 69
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1424
9999 mem: incrementing refcount of 1155: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1425
9999 mem: storing 65515 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1429
 105 run: jump-if editor, 1:offset
9999 mem: location 1424 is 1155
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1198
9999 mem: incrementing refcount of 1012: 69 -> 70
 106 run: jump-unless screen, 
9999 mem: location 1198 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1198 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1198 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1199
 106 run: reply width:number
9999 mem: location 1199 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1430
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1198
9999 mem: incrementing refcount of 1012: 70 -> 71
 106 run: jump-unless screen, 
9999 mem: location 1198 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1198 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1198 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1199
 106 run: reply height:number
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1431
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1432
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1433
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1434
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1435
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1436
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1435 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1437
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1436 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1438
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1425 is 1
9999 mem: location 1426 is 65515
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: storing 0 in location 1439
 105 run: jump-unless c, 
9999 mem: location 1439 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1425 is 1
9999 mem: location 1426 is 65515
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: storing 1426 in location 1493
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1493 is 1426
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 0 in location 1456
 105 run: jump-unless page-up?, 
9999 mem: location 1456 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 0 in location 1472
 105 run: jump-unless page-down?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 0 in location 1479
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1479 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 0 in location 1480
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1480 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 0 in location 1494
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 0 in location 1495
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1493 is 1426
9999 mem: location 1426 is 65515
9999 mem: storing 1 in location 1496
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1496 is 1
9998 run: jump-unless fell through
 105 run: trace 10, [app], [left arrow]
  10 app: left arrow 
 105 run: prev:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1434 is 1159
9999 mem: location 1159 is 1220
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 19 -> 20
 106 run: jump-if in, 1:offset
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 106 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: type deduced to be character$
9998 run: address to copy is 1223
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1223 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 18 -> 19
 106 run: reply result
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1497
9999 mem: incrementing refcount of 1216: 19 -> 20
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1429
 105 run: jump-if prev, 1:offset
9999 mem: location 1497 is 1216
9998 run: jumping to instruction 682
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1459
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1460
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1157 is 1177
9999 mem: storing 1177 in location 1461
9999 mem: incrementing refcount of 1177: 14 -> 15
 105 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1424 is 1155
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1507
9999 mem: storing 20 in location 1508
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1510
9999 mem: incrementing refcount of 1155: 11 -> 12
 106 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1220
9999 mem: storing 1220 in location 1511
9999 mem: incrementing refcount of 1220: 20 -> 21
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1512
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1513
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1514
 106 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1513 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1514 is 0
9999 mem: storing 1 in location 1515
 106 run: jump-if at-left-margin?, 
9999 mem: location 1515 is 1
9998 run: jumping to instruction 13
 106 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1512 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1517
 106 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1516
 106 run: jump-if top-of-screen?, 
9999 mem: location 1517 is 0
9998 run: jump-if fell through
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1512 is 1163
9999 mem: location 1163 is 3
9999 mem: location 1512 is 1163
9999 mem: storing 2 in location 1163
 106 run: jump-unless top-of-screen?, 
9999 mem: location 1517 is 0
9998 run: jumping to instruction 32
 106 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1511 is 1220
9999 mem: skipping refcount at 1220
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1511 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is character
9999 mem: location 1221 is 10
9999 mem: storing 10 in location 1521
 106 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1521 is 10
9999 mem: storing 1 in location 1522
 106 run: jump-unless previous-character-is-newline?, 
9999 mem: location 1522 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [switching to previous line]
  10 app: switching to previous line 
 106 run: d:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1177
9999 mem: storing 1177 in location 1523
9999 mem: incrementing refcount of 1177: 15 -> 16
 106 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1511 is 1220
9999 mem: location 1523 is 1177
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1171
9999 mem: incrementing refcount of 1220: 21 -> 22
 107 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1177 in location 1172
9999 mem: incrementing refcount of 1177: 16 -> 17
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1173
 107 run: jump-if curr, 1:offset
9999 mem: location 1171 is 1220
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1220
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1174 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1220
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 22 -> 23
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 type: type deduced to be character$
9998 run: address to copy is 1223
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1223 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 20 -> 21
 108 run: reply result
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1220: 23 -> 22
9999 mem: storing 1216 in location 1171
9999 mem: incrementing refcount of 1216: 21 -> 22
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1216
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1216
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1171 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 102
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1171 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is character
9999 mem: location 1217 is 102
9999 mem: storing 102 in location 1175
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1175 is 102
9999 mem: storing 0 in location 1176
 107 run: jump-if at-newline?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1173 is 0
9999 mem: storing 1 in location 1173
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1216
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 22 -> 23
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1217 is 102
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 type: type deduced to be character$
9998 run: address to copy is 1219
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1219 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 18 -> 19
 108 run: reply result
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1216: 23 -> 22
9999 mem: storing 1212 in location 1171
9999 mem: incrementing refcount of 1212: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1212
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1212
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1171 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1171 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is character
9999 mem: location 1213 is 101
9999 mem: storing 101 in location 1175
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1175 is 101
9999 mem: storing 0 in location 1176
 107 run: jump-if at-newline?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1173 is 1
9999 mem: storing 2 in location 1173
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1212
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 type: type deduced to be character$
9998 run: address to copy is 1215
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1215 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 18 -> 19
 108 run: reply result
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1212: 21 -> 20
9999 mem: storing 1208 in location 1171
9999 mem: incrementing refcount of 1208: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1208
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1208
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1171 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1171 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is character
9999 mem: location 1209 is 100
9999 mem: storing 100 in location 1175
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1175 is 100
9999 mem: storing 0 in location 1176
 107 run: jump-if at-newline?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1173 is 2
9999 mem: storing 3 in location 1173
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1208
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 type: type deduced to be character$
9998 run: address to copy is 1211
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1211 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 18 -> 19
9990 schedule: prev_2/previous-line-length/move-cursor-coordinates-left/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-across-screen-lines-to-wrapping-line-with-left-arrow
 108 run: reply result
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1208: 21 -> 20
9999 mem: storing 1204 in location 1171
9999 mem: incrementing refcount of 1204: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1204
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1204
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1171 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1171 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is character
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1175
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1175 is 99
9999 mem: storing 0 in location 1176
 107 run: jump-if at-newline?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1173 is 3
9999 mem: storing 4 in location 1173
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1204
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 type: type deduced to be character$
9998 run: address to copy is 1207
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1207 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 18 -> 19
 108 run: reply result
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1204: 21 -> 20
9999 mem: storing 1200 in location 1171
9999 mem: incrementing refcount of 1200: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1200
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1200
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1171 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1171 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is character
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1175
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1175 is 98
9999 mem: storing 0 in location 1176
 107 run: jump-if at-newline?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1173 is 4
9999 mem: storing 5 in location 1173
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1200
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 18 -> 19
 108 run: reply result
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1200: 21 -> 20
9999 mem: storing 1191 in location 1171
9999 mem: incrementing refcount of 1191: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1191
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1191
9999 mem: location 1172 is 1177
9999 mem: storing 0 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1171 is 1191
9999 mem: skipping refcount at 1191
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1177
9999 mem: location 1171 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is character
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1175
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1175 is 97
9999 mem: storing 0 in location 1176
 107 run: jump-if at-newline?, 
9999 mem: location 1176 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1173 is 5
9999 mem: storing 6 in location 1173
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1171 is 1191
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1177
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1177
9999 mem: storing 1177 in location 1199
9999 mem: incrementing refcount of 1177: 17 -> 18
 108 run: reply result
9999 mem: location 1199 is 1177
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1177
9999 mem: decrementing refcount of 1191: 21 -> 20
9999 mem: storing 1177 in location 1171
9999 mem: incrementing refcount of 1177: 18 -> 19
 107 run: jump-unless curr, 
9999 mem: location 1171 is 1177
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1171 is 1177
9999 mem: location 1172 is 1177
9999 mem: storing 1 in location 1174
 107 run: jump-if at-start?, 
9999 mem: location 1174 is 1
9998 run: jumping to instruction 19
 107 run: reply result:number
9999 mem: location 1173 is 6
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1524
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1220
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1510 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1161
9998 run: its type is number
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1525
 106 run: width:number <- subtract right, left
9999 mem: location 1525 is 4
9999 mem: location 1514 is 0
9999 mem: storing 4 in location 1526
 106 run: wrap?:boolean <- greater-than end-of-line, width
9999 mem: location 1524 is 6
9999 mem: location 1526 is 4
9999 mem: storing 1 in location 1527
 106 run: jump-unless wrap?, 
9999 mem: location 1527 is 1
9998 run: jump-unless fell through
 106 run: _, column-offset:number <- divide-with-remainder end-of-line, width
9999 mem: location 1524 is 6
9999 mem: location 1526 is 4
9999 mem: storing 2 in location 1528
 106 run: *cursor-column <- add left, column-offset
9999 mem: location 1514 is 0
9999 mem: location 1528 is 2
9999 mem: location 1513 is 1164
9999 mem: storing 2 in location 1164
 106 run: jump-if wrap?, 
9999 mem: location 1527 is 1
9998 run: jumping to instruction 51
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1510 is 1155
9999 mem: location 1516 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1155
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1155: 12 -> 11
9999 mem: storing 1155 in location 1424
9999 mem: incrementing refcount of 1155: 11 -> 12
9999 mem: storing 0 in location 1429
 105 run: *before-cursor <- copy prev
9999 mem: location 1497 is 1216
9999 mem: location 1434 is 1159
9999 mem: decrementing refcount of 1220: 22 -> 21
9999 mem: storing 1216 in location 1159
9999 mem: incrementing refcount of 1216: 22 -> 23
 105 run: undo-coalesce-tag:number <- copy 1/left-arrow
9999 mem: storing 1 in location 1462
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 2
9999 mem: storing 2 in location 1463
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 2
9999 mem: storing 2 in location 1464
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1157 is 1177
9999 mem: storing 1177 in location 1465
9999 mem: incrementing refcount of 1177: 19 -> 20
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1462 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1424 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1443
 105 run: jump-unless *undo, 
9999 mem: location 1443 is 1166
9999 mem: location 1166 is 1417
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1443 is 1166
9999 mem: location 1166 is 1417
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1417 in location 1198
9999 mem: incrementing refcount of 1417: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1198 is 1417
9999 mem: skipping refcount at 1417
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1418 is 1000
9999 mem: location 1419 is 0
9999 mem: location 1198 is 1417
9999 mem: skipping refcount at 1417
9998 run: address to copy is 1418
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1418 is 1000
9999 mem: storing 1000 in location 1199
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1199 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1442
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1442 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1177
9999 mem: location 1005 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1177
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1442 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1448
 105 run: jump-unless move, 
9999 mem: location 1448 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1448 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1177
9999 mem: location 1005 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1177
9999 mem: location 1008 is 0
9999 mem: location 1448 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1466
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1462 is 1
9999 mem: location 1466 is 0
9999 mem: storing 0 in location 1467
 105 run: jump-unless coalesce?, 
9999 mem: location 1467 is 0
9998 run: jumping to instruction 709
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1442
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1459 is 3
9999 mem: location 1460 is 0
9999 mem: location 1461 is 1177
9999 mem: location 1463 is 2
9999 mem: location 1464 is 2
9999 mem: location 1465 is 1177
9999 mem: location 1462 is 1
9999 mem: location 1442 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1442 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 3 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1177 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 2 in location 1126
9999 mem: storing 1177 in location 1127
9999 mem: storing 1 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1424 is 1155
9999 mem: location 1442 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1413
9999 mem: incrementing refcount of 1155: 12 -> 13
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1414
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1417
9999 mem: location 1167 is 0
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1415
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1414 is 1120
9999 mem: location 1415 is 1166
9999 mem: location 1166 is 1417
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1261
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1417 in location 1262
9999 mem: incrementing refcount of 1417: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1529
9999 mem: storing 1529 in location 1263
9999 mem: incrementing refcount of 1529: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1263 is 1529
9999 mem: skipping refcount at 1529
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1530 is 0
9999 mem: location 1531 is 0
9999 mem: location 1263 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1530
9999 mem: storing 1530 in location 1264
 107 run: *val <- copy x
9999 mem: location 1261 is 1120
9999 mem: location 1264 is 1530
9999 mem: storing 1120 in location 1530
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1263 is 1529
9999 mem: skipping refcount at 1529
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1530 is 1120
9999 mem: location 1531 is 0
9999 mem: location 1263 is 1529
9999 mem: skipping refcount at 1529
9999 type: type deduced to be address$
9998 run: address to copy is 1531
9999 mem: storing 1531 in location 1265
 107 run: *next <- copy in
9999 mem: location 1262 is 1417
9999 mem: location 1265 is 1531
9999 mem: storing 1417 in location 1531
9999 mem: incrementing refcount of 1417: 4 -> 5
 107 run: reply result
9999 mem: location 1263 is 1529
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1529
9999 mem: location 1415 is 1166
9999 mem: decrementing refcount of 1417: 5 -> 4
9999 mem: storing 1529 in location 1166
9999 mem: incrementing refcount of 1529: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1529
9999 mem: location 1167 is 0
9999 mem: location 1413 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1416
 106 run: *redo <- copy 0
9999 mem: location 1416 is 1167
9999 mem: storing 0 in location 1167
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1413 is 1155
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1155: 13 -> 12
9999 mem: storing 1155 in location 1424
9999 mem: incrementing refcount of 1155: 12 -> 13
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1423 is 1012
9999 mem: location 1424 is 1155
9999 mem: location 1429 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1155
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1340
9999 mem: incrementing refcount of 1012: 70 -> 71
9999 mem: decrementing refcount of 1155: 13 -> 12
9999 mem: storing 1155 in location 1342
9999 mem: incrementing refcount of 1155: 12 -> 13
9999 mem: storing 0 in location 1352
 104 run: jump-unless go-render?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1529
9999 mem: location 1167 is 0
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 2
9999 mem: storing 2 in location 1343
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1529
9999 mem: location 1167 is 0
9999 mem: location 1342 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 2
9999 mem: storing 2 in location 1344
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1340 is 1012
9999 mem: location 1343 is 2
9999 mem: location 1344 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1261
9999 mem: incrementing refcount of 1012: 71 -> 72
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1262
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 105 run: jump-unless screen, 
9999 mem: location 1261 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1264
 105 run: *row <- copy new-row
9999 mem: location 1262 is 2
9999 mem: location 1264 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1261 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1265
 105 run: *column <- copy new-column
9999 mem: location 1263 is 2
9999 mem: location 1265 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1261 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1340
9999 mem: incrementing refcount of 1012: 71 -> 72
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1341 is 1334
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1334 in location 1296
9999 mem: incrementing refcount of 1334: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1296 is 1334
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 2
9999 mem: location 1336 is 1324
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1335
9999 mem: storing 1335 in location 1297
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9999 mem: location 1335 is 2
9999 mem: location 1336 is 1324
9999 mem: location 1296 is 1334
9999 mem: skipping refcount at 1334
9998 run: address to copy is 1336
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1336 is 1324
9999 mem: storing 1324 in location 1298
9999 mem: incrementing refcount of 1324: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1298 is 1324
9999 mem: skipping refcount at 1324
9999 mem: storing 2 in location 1299
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1297 is 1335
9999 mem: location 1335 is 2
9999 mem: location 1299 is 2
9999 mem: storing 1 in location 1300
 105 run: jump-unless done?, 
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1195 in location 1301
9999 mem: incrementing refcount of 1195: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1301 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1296 is 1334
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1334
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: decrementing refcount of 1334: 4 -> 3
9999 mem: storing 1334 in location 1341
9999 mem: incrementing refcount of 1334: 3 -> 4
9999 mem: storing 1 in location 1349
9999 mem: storing 1 in location 1350
 104 run: jump-unless found?, 
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1350 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1340 is 1012
9999 mem: location 1341 is 1334
9999 mem: location 1342 is 1155
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1529
9999 mem: location 1167 is 0
9999 mem: location 2 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1177
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1216
9999 mem: location 1160 is 0
9999 mem: location 1161 is 4
9999 mem: location 1162 is 3
9999 mem: location 1163 is 2
9999 mem: location 1164 is 2
9999 mem: location 1165 is 1
9999 mem: location 1166 is 1529
9999 mem: location 1167 is 0
9999 mem: location 2 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2  # previous row
    4 <- 2  # end of wrapped line
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
