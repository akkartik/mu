9991 parse: --- defining scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"10": "literal", "width": <>}
9993 parse:   ingredient: {"4": "literal", "height": <>}
9992 load: after rewriting: screen:address:screen <- new-fake-screen 10/width, 4/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abcdef\ng\nh\ni": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 1:address:array:character <- new [abcdef
g
h
i]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"5": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: 2:address:editor-data <- new-editor 1:address:array:character, screen:address:screen, 0/left, 5/right
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abcd↩     .\n    .ef        .\n    .g         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .abcd↩     .
    .ef        .
    .g         .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press page-down
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .g         .\n    .h         .\n    .i         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .g         .
    .h         .
    .i         .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press up-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press up-arrow
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .ef        .\n    .g         .\n    .h         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .ef        .
    .g         .
    .h         .
  ]
9999 parse: recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- transform braces for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9991 transform: --- deduce types for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9992 transform: screen => <address : <screen : <>>>
9991 transform: --- resolve ambiguous calls for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9992 transform: instruction new-editor
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- transform names for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- compute instruction operations for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- perform checks for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- parsing any uninitialized reagents as integers
9991 transform: --- checking type and type_name pointers for recipe string-equal
9991 transform: --- checking type and type_name pointers for recipe new-buffer
9991 transform: --- checking type and type_name pointers for recipe grow-buffer
9991 transform: --- checking type and type_name pointers for recipe buffer-full?
9991 transform: --- checking type and type_name pointers for recipe buffer-append
9991 transform: --- checking type and type_name pointers for recipe integer-to-decimal-string
9991 transform: --- checking type and type_name pointers for recipe buffer-to-array
9991 transform: --- checking type and type_name pointers for recipe string-append
9991 transform: --- checking type and type_name pointers for recipe string-replace
9991 transform: --- checking type and type_name pointers for recipe interpolate
9991 transform: --- checking type and type_name pointers for recipe space?
9991 transform: --- checking type and type_name pointers for recipe trim
9991 transform: --- checking type and type_name pointers for recipe find-next
9991 transform: --- checking type and type_name pointers for recipe find-substring
9991 transform: --- checking type and type_name pointers for recipe match-at
9991 transform: --- checking type and type_name pointers for recipe split
9991 transform: --- checking type and type_name pointers for recipe split-first
9991 transform: --- checking type and type_name pointers for recipe string-copy
9991 transform: --- checking type and type_name pointers for recipe min
9991 transform: --- checking type and type_name pointers for recipe max
9991 transform: --- checking type and type_name pointers for recipe new-channel
9991 transform: --- checking type and type_name pointers for recipe write
9991 transform: --- checking type and type_name pointers for recipe read
9991 transform: --- checking type and type_name pointers for recipe clear-channel
9991 transform: --- checking type and type_name pointers for recipe channel-empty?
9991 transform: --- checking type and type_name pointers for recipe channel-full?
9991 transform: --- checking type and type_name pointers for recipe channel-capacity
9991 transform: --- checking type and type_name pointers for recipe buffer-lines
9991 transform: --- checking type and type_name pointers for recipe new-array
9991 transform: --- checking type and type_name pointers for recipe force-specialization-list-number
9991 transform: --- checking type and type_name pointers for recipe force-specialization-duplex-list-character
9991 transform: --- checking type and type_name pointers for recipe new-stream
9991 transform: --- checking type and type_name pointers for recipe rewind-stream
9991 transform: --- checking type and type_name pointers for recipe read-line
9991 transform: --- checking type and type_name pointers for recipe end-of-stream?
9991 transform: --- checking type and type_name pointers for recipe new-fake-screen
9991 transform: --- checking type and type_name pointers for recipe clear-screen
9991 transform: --- checking type and type_name pointers for recipe sync-screen
9991 transform: --- checking type and type_name pointers for recipe fake-screen-is-empty?
9991 transform: --- checking type and type_name pointers for recipe print-character
9991 transform: --- checking type and type_name pointers for recipe clear-line
9991 transform: --- checking type and type_name pointers for recipe cursor-position
9991 transform: --- checking type and type_name pointers for recipe move-cursor
9991 transform: --- checking type and type_name pointers for recipe cursor-down
9991 transform: --- checking type and type_name pointers for recipe cursor-up
9991 transform: --- checking type and type_name pointers for recipe cursor-right
9991 transform: --- checking type and type_name pointers for recipe cursor-left
9991 transform: --- checking type and type_name pointers for recipe cursor-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe cursor-to-next-line
9991 transform: --- checking type and type_name pointers for recipe screen-width
9991 transform: --- checking type and type_name pointers for recipe screen-height
9991 transform: --- checking type and type_name pointers for recipe hide-cursor
9991 transform: --- checking type and type_name pointers for recipe show-cursor
9991 transform: --- checking type and type_name pointers for recipe hide-screen
9991 transform: --- checking type and type_name pointers for recipe show-screen
9991 transform: --- checking type and type_name pointers for recipe print-string
9991 transform: --- checking type and type_name pointers for recipe print-integer
9991 transform: --- checking type and type_name pointers for recipe new-fake-console
9991 transform: --- checking type and type_name pointers for recipe read-event
9991 transform: --- checking type and type_name pointers for recipe read-key
9991 transform: --- checking type and type_name pointers for recipe send-keys-to-channel
9991 transform: --- checking type and type_name pointers for recipe wait-for-event
9991 transform: --- checking type and type_name pointers for recipe has-more-events?
9991 transform: --- checking type and type_name pointers for recipe push_2
9991 transform: --- checking type and type_name pointers for recipe first_2
9991 transform: --- checking type and type_name pointers for recipe rest_2
9991 transform: --- checking type and type_name pointers for recipe push-duplex_2
9991 transform: --- checking type and type_name pointers for recipe first-duplex_2
9991 transform: --- checking type and type_name pointers for recipe next-duplex_2
9991 transform: --- checking type and type_name pointers for recipe prev-duplex_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex-between_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex-range_2
9991 transform: --- checking type and type_name pointers for recipe append-duplex_2
9991 transform: --- checking type and type_name pointers for recipe last-duplex_2
9991 transform: --- checking type and type_name pointers for recipe sandbox
9991 transform: --- checking type and type_name pointers for recipe main_2
9991 transform: --- checking type and type_name pointers for recipe new-editor
9991 transform: --- checking type and type_name pointers for recipe insert-text
9991 transform: --- checking type and type_name pointers for recipe render
9991 transform: --- checking type and type_name pointers for recipe clear-line-delimited
9991 transform: --- checking type and type_name pointers for recipe clear-screen-from
9991 transform: --- checking type and type_name pointers for recipe clear-rest-of-screen
9991 transform: --- checking type and type_name pointers for recipe get-color
9991 transform: --- checking type and type_name pointers for recipe editor-event-loop
9991 transform: --- checking type and type_name pointers for recipe move-cursor-in-editor
9991 transform: --- checking type and type_name pointers for recipe snap-cursor
9991 transform: --- checking type and type_name pointers for recipe handle-keyboard-event
9991 transform: --- checking type and type_name pointers for recipe insert-at-cursor
9991 transform: --- checking type and type_name pointers for recipe editor-render
9991 transform: --- checking type and type_name pointers for recipe insert-new-line-and-indent
9991 transform: --- checking type and type_name pointers for recipe line-indent
9991 transform: --- checking type and type_name pointers for recipe draw-horizontal
9991 transform: --- checking type and type_name pointers for recipe delete-before-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-left
9991 transform: --- checking type and type_name pointers for recipe previous-line-length
9991 transform: --- checking type and type_name pointers for recipe delete-at-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-right
9991 transform: --- checking type and type_name pointers for recipe move-to-previous-line
9991 transform: --- checking type and type_name pointers for recipe move-to-next-line
9991 transform: --- checking type and type_name pointers for recipe move-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe move-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe before-start-of-next-line
9991 transform: --- checking type and type_name pointers for recipe before-previous-line
9991 transform: --- checking type and type_name pointers for recipe page-down
9991 transform: --- checking type and type_name pointers for recipe page-up
9991 transform: --- checking type and type_name pointers for recipe new-programming-environment
9991 transform: --- checking type and type_name pointers for recipe event-loop
9991 transform: --- checking type and type_name pointers for recipe resize
9991 transform: --- checking type and type_name pointers for recipe render-all
9991 transform: --- checking type and type_name pointers for recipe render-recipes
9991 transform: --- checking type and type_name pointers for recipe render-sandbox-side
9991 transform: --- checking type and type_name pointers for recipe update-cursor
9991 transform: --- checking type and type_name pointers for recipe render-string
9991 transform: --- checking type and type_name pointers for recipe render-code-string
9991 transform: --- checking type and type_name pointers for recipe maximize
9991 transform: --- checking type and type_name pointers for recipe draw-vertical
9991 transform: --- checking type and type_name pointers for recipe run-sandboxes
9991 transform: --- checking type and type_name pointers for recipe update-recipes
9991 transform: --- checking type and type_name pointers for recipe update-sandbox
9991 transform: --- checking type and type_name pointers for recipe update-status
9991 transform: --- checking type and type_name pointers for recipe save-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-sandboxes
9991 transform: --- checking type and type_name pointers for recipe restore-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-screen
9991 transform: --- checking type and type_name pointers for recipe editor-contents
9991 transform: --- checking type and type_name pointers for recipe empty-editor?
9991 transform: --- checking type and type_name pointers for recipe extract-sandbox
9991 transform: --- checking type and type_name pointers for recipe delete-sandbox
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-output
9991 transform: --- checking type and type_name pointers for recipe toggle-expected-response
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-code
9991 transform: --- checking type and type_name pointers for recipe add-operation
9991 transform: --- checking type and type_name pointers for recipe first_3
9991 transform: --- checking type and type_name pointers for recipe rest_3
9991 transform: --- checking type and type_name pointers for recipe push_3
9991 transform: --- checking type and type_name pointers for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 102 run: screen:address:screen <- new-fake-screen 10/width, 4/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 103 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 103 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 103 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 4 in location 1009
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 103 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 103 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 4
9999 mem: storing 40 in location 1007
 103 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 40
9999 mem: array size is 40
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 103 run: clear-screen result
9999 mem: location 1002 is 1009
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1095
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1097
 104 run: jump-unless sc, 
9999 mem: location 1097 is 1009
9998 run: jump-unless fell through
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1097 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1097 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1098
 104 run: max:number <- length *buf
9999 mem: location 1098 is 1014
9999 mem: storing 40 in location 1099
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1100
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 0
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 0
9999 mem: storing 1015 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1102 is 1015
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1015
9999 mem: storing 0 in location 1015
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1102 is 1015
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1016
9999 mem: storing 7 in location 1016
 104 run: i <- add i, 1
9999 mem: location 1100 is 0
9999 mem: storing 1 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 1
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 1
9999 mem: storing 1017 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1102 is 1017
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1017
9999 mem: storing 0 in location 1017
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1102 is 1017
9998 run: address to copy is 1018
9999 mem: storing 1018 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1018
9999 mem: storing 7 in location 1018
 104 run: i <- add i, 1
9999 mem: location 1100 is 1
9999 mem: storing 2 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 2
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 2
9999 mem: storing 1019 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1102 is 1019
9998 run: address to copy is 1019
9999 mem: storing 1019 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1019
9999 mem: storing 0 in location 1019
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1102 is 1019
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1020
9999 mem: storing 7 in location 1020
 104 run: i <- add i, 1
9999 mem: location 1100 is 2
9999 mem: storing 3 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 3
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 3
9999 mem: storing 1021 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1102 is 1021
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1021
9999 mem: storing 0 in location 1021
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1102 is 1021
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1022
9999 mem: storing 7 in location 1022
 104 run: i <- add i, 1
9999 mem: location 1100 is 3
9999 mem: storing 4 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 4
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 4
9999 mem: storing 1023 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1102 is 1023
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1023
9999 mem: storing 0 in location 1023
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1102 is 1023
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1024
9999 mem: storing 7 in location 1024
 104 run: i <- add i, 1
9999 mem: location 1100 is 4
9999 mem: storing 5 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 5
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 5
9999 mem: storing 1025 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1102 is 1025
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1025
9999 mem: storing 0 in location 1025
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1102 is 1025
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1026
9999 mem: storing 7 in location 1026
 104 run: i <- add i, 1
9999 mem: location 1100 is 5
9999 mem: storing 6 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 6
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 6
9999 mem: storing 1027 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1102 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1027
9999 mem: storing 0 in location 1027
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1102 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1028
9999 mem: storing 7 in location 1028
 104 run: i <- add i, 1
9999 mem: location 1100 is 6
9999 mem: storing 7 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 7
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 7
9999 mem: storing 1029 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1102 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1029
9999 mem: storing 0 in location 1029
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1102 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1030
9999 mem: storing 7 in location 1030
 104 run: i <- add i, 1
9999 mem: location 1100 is 7
9999 mem: storing 8 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 8
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 8
9999 mem: storing 1031 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1102 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1031
9999 mem: storing 0 in location 1031
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1102 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1032
9999 mem: storing 7 in location 1032
 104 run: i <- add i, 1
9999 mem: location 1100 is 8
9999 mem: storing 9 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 9
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 9
9999 mem: storing 1033 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1102 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1033
9999 mem: storing 0 in location 1033
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1102 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1034
9999 mem: storing 7 in location 1034
 104 run: i <- add i, 1
9999 mem: location 1100 is 9
9999 mem: storing 10 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 10
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 10
9999 mem: storing 1035 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1102 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1035
9999 mem: storing 0 in location 1035
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1102 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1036
9999 mem: storing 7 in location 1036
 104 run: i <- add i, 1
9999 mem: location 1100 is 10
9999 mem: storing 11 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 11
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 11
9999 mem: storing 1037 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1102 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1037
9999 mem: storing 0 in location 1037
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1102 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1038
9999 mem: storing 7 in location 1038
 104 run: i <- add i, 1
9999 mem: location 1100 is 11
9999 mem: storing 12 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 12
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 12
9999 mem: storing 1039 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1102 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1039
9999 mem: storing 0 in location 1039
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1102 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1040
9999 mem: storing 7 in location 1040
 104 run: i <- add i, 1
9999 mem: location 1100 is 12
9999 mem: storing 13 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 13
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 13
9999 mem: storing 1041 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1102 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1041
9999 mem: storing 0 in location 1041
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1102 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1042
9999 mem: storing 7 in location 1042
 104 run: i <- add i, 1
9999 mem: location 1100 is 13
9999 mem: storing 14 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 14
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 14
9999 mem: storing 1043 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1102 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1043
9999 mem: storing 0 in location 1043
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1102 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1044
9999 mem: storing 7 in location 1044
 104 run: i <- add i, 1
9999 mem: location 1100 is 14
9999 mem: storing 15 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 15
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 15
9999 mem: storing 1045 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1102 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1045
9999 mem: storing 0 in location 1045
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1102 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1046
9999 mem: storing 7 in location 1046
 104 run: i <- add i, 1
9999 mem: location 1100 is 15
9999 mem: storing 16 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 16
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 16
9999 mem: storing 1047 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1102 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1047
9999 mem: storing 0 in location 1047
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1102 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1048
9999 mem: storing 7 in location 1048
 104 run: i <- add i, 1
9999 mem: location 1100 is 16
9999 mem: storing 17 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 17
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 17
9999 mem: storing 1049 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1102 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1049
9999 mem: storing 0 in location 1049
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1102 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1050
9999 mem: storing 7 in location 1050
 104 run: i <- add i, 1
9999 mem: location 1100 is 17
9999 mem: storing 18 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 18
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 18
9999 mem: storing 1051 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1102 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1051
9999 mem: storing 0 in location 1051
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1102 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1052
9999 mem: storing 7 in location 1052
 104 run: i <- add i, 1
9999 mem: location 1100 is 18
9999 mem: storing 19 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 19
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 19
9999 mem: storing 1053 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1102 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1053
9999 mem: storing 0 in location 1053
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1102 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1054
9999 mem: storing 7 in location 1054
 104 run: i <- add i, 1
9999 mem: location 1100 is 19
9999 mem: storing 20 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 20
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 20
9999 mem: storing 1055 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1102 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1055
9999 mem: storing 0 in location 1055
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1102 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1056
9999 mem: storing 7 in location 1056
 104 run: i <- add i, 1
9999 mem: location 1100 is 20
9999 mem: storing 21 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 21
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 21
9999 mem: storing 1057 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1102 is 1057
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1057
9999 mem: storing 0 in location 1057
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1102 is 1057
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1058
9999 mem: storing 7 in location 1058
 104 run: i <- add i, 1
9999 mem: location 1100 is 21
9999 mem: storing 22 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 22
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 22
9999 mem: storing 1059 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1102 is 1059
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1059
9999 mem: storing 0 in location 1059
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1102 is 1059
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1060
9999 mem: storing 7 in location 1060
 104 run: i <- add i, 1
9999 mem: location 1100 is 22
9999 mem: storing 23 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 23
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 23
9999 mem: storing 1061 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1102 is 1061
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1061
9999 mem: storing 0 in location 1061
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1102 is 1061
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1062
9999 mem: storing 7 in location 1062
 104 run: i <- add i, 1
9999 mem: location 1100 is 23
9999 mem: storing 24 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 24
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 24
9999 mem: storing 1063 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1102 is 1063
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1063
9999 mem: storing 0 in location 1063
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1102 is 1063
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1064
9999 mem: storing 7 in location 1064
 104 run: i <- add i, 1
9999 mem: location 1100 is 24
9999 mem: storing 25 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 25
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 25
9999 mem: storing 1065 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1102 is 1065
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1065
9999 mem: storing 0 in location 1065
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1102 is 1065
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1066
9999 mem: storing 7 in location 1066
 104 run: i <- add i, 1
9999 mem: location 1100 is 25
9999 mem: storing 26 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 26
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 26
9999 mem: storing 1067 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1102 is 1067
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1067
9999 mem: storing 0 in location 1067
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1102 is 1067
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1068
9999 mem: storing 7 in location 1068
 104 run: i <- add i, 1
9999 mem: location 1100 is 26
9999 mem: storing 27 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 27
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 27
9999 mem: storing 1069 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1102 is 1069
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1069
9999 mem: storing 0 in location 1069
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1102 is 1069
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1070
9999 mem: storing 7 in location 1070
 104 run: i <- add i, 1
9999 mem: location 1100 is 27
9999 mem: storing 28 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 28
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 28
9999 mem: storing 1071 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1102 is 1071
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1071
9999 mem: storing 0 in location 1071
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1102 is 1071
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1072
9999 mem: storing 7 in location 1072
 104 run: i <- add i, 1
9999 mem: location 1100 is 28
9999 mem: storing 29 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 29
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 29
9999 mem: storing 1073 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1102 is 1073
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1073
9999 mem: storing 0 in location 1073
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1102 is 1073
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1074
9999 mem: storing 7 in location 1074
 104 run: i <- add i, 1
9999 mem: location 1100 is 29
9999 mem: storing 30 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 30
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 30
9999 mem: storing 1075 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1102 is 1075
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1075
9999 mem: storing 0 in location 1075
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1102 is 1075
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1076
9999 mem: storing 7 in location 1076
 104 run: i <- add i, 1
9999 mem: location 1100 is 30
9999 mem: storing 31 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 31
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 31
9999 mem: storing 1077 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1102 is 1077
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1077
9999 mem: storing 0 in location 1077
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1102 is 1077
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1078
9999 mem: storing 7 in location 1078
 104 run: i <- add i, 1
9999 mem: location 1100 is 31
9999 mem: storing 32 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 32
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 32
9999 mem: storing 1079 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1102 is 1079
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1079
9999 mem: storing 0 in location 1079
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1102 is 1079
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1080
9999 mem: storing 7 in location 1080
 104 run: i <- add i, 1
9999 mem: location 1100 is 32
9999 mem: storing 33 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 33
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 33
9999 mem: storing 1081 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1102 is 1081
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1081
9999 mem: storing 0 in location 1081
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1102 is 1081
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1082
9999 mem: storing 7 in location 1082
 104 run: i <- add i, 1
9999 mem: location 1100 is 33
9999 mem: storing 34 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 34
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 34
9999 mem: storing 1083 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1102 is 1083
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1083
9999 mem: storing 0 in location 1083
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1102 is 1083
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1084
9999 mem: storing 7 in location 1084
 104 run: i <- add i, 1
9999 mem: location 1100 is 34
9999 mem: storing 35 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 35
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 35
9999 mem: storing 1085 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1102 is 1085
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1085
9999 mem: storing 0 in location 1085
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1102 is 1085
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1086
9999 mem: storing 7 in location 1086
 104 run: i <- add i, 1
9999 mem: location 1100 is 35
9999 mem: storing 36 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 36
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 36
9999 mem: storing 1087 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1102 is 1087
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1087
9999 mem: storing 0 in location 1087
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1102 is 1087
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1088
9999 mem: storing 7 in location 1088
 104 run: i <- add i, 1
9999 mem: location 1100 is 36
9999 mem: storing 37 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 37
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 37
9999 mem: storing 1089 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1102 is 1089
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1089
9999 mem: storing 0 in location 1089
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1102 is 1089
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1090
9999 mem: storing 7 in location 1090
 104 run: i <- add i, 1
9999 mem: location 1100 is 37
9999 mem: storing 38 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 38
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 38
9999 mem: storing 1091 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1102 is 1091
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1091
9999 mem: storing 0 in location 1091
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1102 is 1091
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1092
9999 mem: storing 7 in location 1092
 104 run: i <- add i, 1
9999 mem: location 1100 is 38
9999 mem: storing 39 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 39
9999 mem: location 1099 is 40
9999 mem: storing 0 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1098 is 1014
9999 mem: location 1100 is 39
9999 mem: storing 1093 in location 1102
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1102 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1102 is 1093
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1103
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1103 is 1093
9999 mem: storing 0 in location 1093
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1102 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1102 is 1093
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1104
 104 run: *curr-color <- copy 7/white
9999 mem: location 1104 is 1094
9999 mem: storing 7 in location 1094
 104 run: i <- add i, 1
9999 mem: location 1100 is 39
9999 mem: storing 40 in location 1100
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1100 is 40
9999 mem: location 1099 is 40
9999 mem: storing 1 in location 1101
 104 run: jump-if done?, 
9999 mem: location 1101 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1097 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1097 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1105
 104 run: *x <- copy 0
9999 mem: location 1105 is 1011
9999 mem: storing 0 in location 1011
 104 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1097 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1097 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1105
 104 run: *x <- copy 0
9999 mem: location 1105 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1097 is 1009
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply result
9999 mem: location 1002 is 1009
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 102 run: 1:address:array:character <- new [abcdef
g
h
i]
9999 mem: storing 1106 in location 1
 102 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address:screen, 0/left, 5/right
9999 mem: location 1 is 1106
9999 mem: location 900 is 1009
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1119
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1106 in location 1121
 103 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1122
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1123
 103 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1124
 103 run: right <- subtract right, 1
9999 mem: location 1124 is 5
9999 mem: storing 4 in location 1124
 103 run: result <- new editor-data:type
9999 mem: storing 1095 in location 1125
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1126
 103 run: *x <- copy left
9999 mem: location 1123 is 0
9999 mem: location 1126 is 1099
9999 mem: storing 0 in location 1099
 103 run: x <- get-address *result, right:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1126
 103 run: *x <- copy right
9999 mem: location 1124 is 4
9999 mem: location 1126 is 1100
9999 mem: storing 4 in location 1100
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1126
 103 run: *x <- copy 1/top
9999 mem: location 1126 is 1101
9999 mem: storing 1 in location 1101
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1126
 103 run: *x <- copy left
9999 mem: location 1123 is 0
9999 mem: location 1126 is 1102
9999 mem: storing 0 in location 1102
 103 run: init:address:address:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1127
 103 run: *init <- push-duplex_2 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1131
 104 run: x:_elem <- next-ingredient 
9999 mem: storing 167 in location 1133
 104 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1134
 104 run: result <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1139
9999 mem: storing 1139 in location 1135
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1135 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1135 is 1139
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1136
 104 run: *val <- copy x
9999 mem: location 1133 is 167
9999 mem: location 1136 is 1139
9999 mem: storing 167 in location 1139
 104 run: next:address:address:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1135 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 167
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1135 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1137
 104 run: *next <- copy in
9999 mem: location 1134 is 0
9999 mem: location 1137 is 1140
9999 mem: storing 0 in location 1140
 104 run: jump-if in, 1:offset
9999 mem: location 1134 is 0
9998 run: jump-if fell through
 104 run: reply result:address:duplex-list:_elem
9999 mem: location 1135 is 1139
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1139
9999 mem: location 1127 is 1095
9999 mem: storing 1139 in location 1095
 103 run: top-of-screen:address:address:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1128
 103 run: *top-of-screen <- copy *init
9999 mem: location 1127 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1128 is 1096
9999 mem: storing 1139 in location 1096
 103 run: y:address:address:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 103 run: *y <- copy *init
9999 mem: location 1127 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1129 is 1098
9999 mem: storing 1139 in location 1098
 103 run: result <- insert-text result, s
9999 mem: location 1125 is 1095
9999 mem: location 1121 is 1106
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1002
 104 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1106 in location 1003
 104 run: jump-if text, 1:offset
9999 mem: location 1003 is 1106
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1003 is 1106
9999 mem: storing 12 in location 1004
 104 run: jump-if len, 1:offset
9999 mem: location 1004 is 12
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1005
 104 run: curr:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1002 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1002 is 1095
9998 run: address to copy is 1095
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1095 is 1139
9999 mem: storing 1139 in location 1006
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 0
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 0
9998 run: address to copy is 1107
9998 run: its type is character
9999 mem: location 1107 is 97
9999 mem: storing 97 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 97
9999 mem: location 1006 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 97 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1139 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1142
9999 mem: storing 1142 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1135 is 1142
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 97
9999 mem: location 1136 is 1142
9999 mem: storing 97 in location 1142
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 167
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1134 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 167
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1134 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1142
9999 mem: location 1138 is 1140
9999 mem: storing 1142 in location 1140
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1135 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1139
9999 mem: location 1138 is 1144
9999 mem: storing 1139 in location 1144
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1139
9999 mem: location 1135 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1143
9999 mem: storing 0 in location 1143
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1142
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1145
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1139 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1139
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 167
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 0
9999 mem: location 1147 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 1142
9999 mem: storing 1142 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1142
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 0
9999 mem: storing 1 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 1
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 1
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 98
9999 mem: storing 98 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 98
9999 mem: location 1006 is 1142
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 98 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1142 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1149
9999 mem: storing 1149 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1135 is 1149
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 98
9999 mem: location 1136 is 1149
9999 mem: storing 98 in location 1149
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1139
9999 mem: location 1134 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1139
9999 mem: location 1134 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1149
9999 mem: location 1138 is 1143
9999 mem: storing 1149 in location 1143
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1135 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1142
9999 mem: location 1138 is 1151
9999 mem: storing 1142 in location 1151
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1142
9999 mem: location 1135 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1150
9999 mem: storing 0 in location 1150
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1149
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1142
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1142 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1142
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 1149
9999 mem: location 1144 is 1139
9999 mem: location 1147 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1143 is 1149
9999 mem: storing 1149 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1149
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: storing 1149 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 1
9999 mem: storing 2 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 2
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 2
9998 run: address to copy is 1109
9998 run: its type is character
9999 mem: location 1109 is 99
9999 mem: storing 99 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 99
9999 mem: location 1006 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 99 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1149 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1152
9999 mem: storing 1152 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1135 is 1152
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 99
9999 mem: location 1136 is 1152
9999 mem: storing 99 in location 1152
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1142
9999 mem: location 1134 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1150
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1150 is 0
9999 mem: storing 0 in location 1137
9990 schedule: insert-duplex_2/insert-text/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1142
9999 mem: location 1134 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1152
9999 mem: location 1138 is 1150
9999 mem: storing 1152 in location 1150
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1135 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1149
9999 mem: location 1138 is 1154
9999 mem: storing 1149 in location 1154
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1149
9999 mem: location 1135 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1153
9999 mem: storing 0 in location 1153
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1152
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1149 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 1152
9999 mem: location 1151 is 1142
9999 mem: location 1147 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1150
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1150 is 1152
9999 mem: storing 1152 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1152
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 2
9999 mem: storing 3 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 3
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 3
9998 run: address to copy is 1110
9998 run: its type is character
9999 mem: location 1110 is 100
9999 mem: storing 100 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 100
9999 mem: location 1006 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 100 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1152 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1155
9999 mem: storing 1155 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1135 is 1155
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 100
9999 mem: location 1136 is 1155
9999 mem: storing 100 in location 1155
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1149
9999 mem: location 1134 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1149
9999 mem: location 1134 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1155
9999 mem: location 1138 is 1153
9999 mem: storing 1155 in location 1153
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1135 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1152
9999 mem: location 1138 is 1157
9999 mem: storing 1152 in location 1157
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1152
9999 mem: location 1135 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1156
9999 mem: storing 0 in location 1156
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1155
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1152 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1152
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1149
9999 mem: location 1147 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1155
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1155
9999 mem: storing 1155 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 3
9999 mem: storing 4 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 4
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 4
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 101
9999 mem: storing 101 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 101
9999 mem: location 1006 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 101 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1158
9999 mem: storing 1158 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1135 is 1158
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 101
9999 mem: location 1136 is 1158
9999 mem: storing 101 in location 1158
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1152
9999 mem: location 1134 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1152
9999 mem: location 1134 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1158
9999 mem: location 1138 is 1156
9999 mem: storing 1158 in location 1156
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1135 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1155
9999 mem: location 1138 is 1160
9999 mem: storing 1155 in location 1160
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1155
9999 mem: location 1135 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1159
9999 mem: storing 0 in location 1159
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1158
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1155
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1147 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1158
9999 mem: storing 1158 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1158
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 4
9999 mem: storing 5 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 5
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 5
9998 run: address to copy is 1112
9998 run: its type is character
9999 mem: location 1112 is 102
9999 mem: storing 102 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 102
9999 mem: location 1006 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 102 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1161
9999 mem: storing 1161 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1135 is 1161
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 102
9999 mem: location 1136 is 1161
9999 mem: storing 102 in location 1161
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1155
9999 mem: location 1134 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1155
9999 mem: location 1134 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1161
9999 mem: location 1138 is 1159
9999 mem: storing 1161 in location 1159
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1135 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1158
9999 mem: location 1138 is 1163
9999 mem: storing 1158 in location 1163
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1158
9999 mem: location 1135 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1162
9999 mem: storing 0 in location 1162
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1161
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1158
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1147 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1161
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 5
9999 mem: storing 6 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 6
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 6
9998 run: address to copy is 1113
9998 run: its type is character
9999 mem: location 1113 is 10
9999 mem: storing 10 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1161
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 10 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1164
9999 mem: storing 1164 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1135 is 1164
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 10
9999 mem: location 1136 is 1164
9999 mem: storing 10 in location 1164
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1158
9999 mem: location 1134 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1158
9999 mem: location 1134 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1164
9999 mem: location 1138 is 1162
9999 mem: storing 1164 in location 1162
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1135 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1161
9999 mem: location 1138 is 1166
9999 mem: storing 1161 in location 1166
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1161
9999 mem: location 1135 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1165
9999 mem: storing 0 in location 1165
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1164
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1161
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1161
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1147 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1164
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 6
9999 mem: storing 7 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 7
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 7
9998 run: address to copy is 1114
9998 run: its type is character
9999 mem: location 1114 is 103
9999 mem: storing 103 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 103
9999 mem: location 1006 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 103 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1167
9999 mem: storing 1167 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1135 is 1167
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 103
9999 mem: location 1136 is 1167
9999 mem: storing 103 in location 1167
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1161
9999 mem: location 1134 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1161
9999 mem: location 1134 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1167
9999 mem: location 1138 is 1165
9999 mem: storing 1167 in location 1165
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1135 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1164
9999 mem: location 1138 is 1169
9999 mem: storing 1164 in location 1169
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1135 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1168
9999 mem: storing 0 in location 1168
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1167
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1164
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1147 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1167
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 7
9999 mem: storing 8 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 8
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 8
9998 run: address to copy is 1115
9998 run: its type is character
9999 mem: location 1115 is 10
9999 mem: storing 10 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 10 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1170
9999 mem: storing 1170 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1135 is 1170
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 10
9999 mem: location 1136 is 1170
9999 mem: storing 10 in location 1170
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1134 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1164
9999 mem: location 1134 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1170
9999 mem: location 1138 is 1168
9999 mem: storing 1170 in location 1168
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1135 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1167
9999 mem: location 1138 is 1172
9999 mem: storing 1167 in location 1172
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1167
9999 mem: location 1135 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1171
9999 mem: storing 0 in location 1171
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1170
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1167
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1147 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1170
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 8
9999 mem: storing 9 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 9
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 9
9998 run: address to copy is 1116
9998 run: its type is character
9999 mem: location 1116 is 104
9999 mem: storing 104 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 104
9999 mem: location 1006 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 104 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1173
9999 mem: storing 1173 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1135 is 1173
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 104
9999 mem: location 1136 is 1173
9999 mem: storing 104 in location 1173
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1167
9999 mem: location 1134 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1167
9999 mem: location 1134 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1173
9999 mem: location 1138 is 1171
9999 mem: storing 1173 in location 1171
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1135 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1175
9999 mem: storing 1175 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1170
9999 mem: location 1138 is 1175
9999 mem: storing 1170 in location 1175
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1170
9999 mem: location 1135 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1174
9999 mem: storing 0 in location 1174
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1173
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1170
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1147 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1173
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 9
9999 mem: storing 10 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 10
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 10
9998 run: address to copy is 1117
9998 run: its type is character
9999 mem: location 1117 is 10
9999 mem: storing 10 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1173
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 10 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1176
9999 mem: storing 1176 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1135 is 1176
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 10
9999 mem: location 1136 is 1176
9999 mem: storing 10 in location 1176
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1170
9999 mem: location 1134 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1170
9999 mem: location 1134 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 mem: storing 1174 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1176
9999 mem: location 1138 is 1174
9999 mem: storing 1176 in location 1174
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1135 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1173
9999 mem: location 1138 is 1178
9999 mem: storing 1173 in location 1178
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1135 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1177
9999 mem: storing 0 in location 1177
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1176
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1173
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1173
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1147 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1176
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 10
9999 mem: storing 11 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 11
9999 mem: location 1004 is 12
9999 mem: storing 0 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1003 is 1106
9999 mem: location 1005 is 11
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 105
9999 mem: storing 105 in location 1008
 104 run: insert-duplex_2 c, curr
9999 mem: location 1008 is 105
9999 mem: location 1006 is 1176
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient 
9999 mem: storing 105 in location 1133
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1134
 105 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1135
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1135 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1135 is 1179
9998 run: address to copy is 1179
9999 mem: storing 1179 in location 1136
 105 run: *val <- copy x
9999 mem: location 1133 is 105
9999 mem: location 1136 is 1179
9999 mem: storing 105 in location 1179
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1134 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1134 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 0
9999 mem: storing 0 in location 1137
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1134 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 0
9999 mem: location 1178 is 1173
9999 mem: location 1134 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1138
 105 run: *y <- copy new-node
9999 mem: location 1135 is 1179
9999 mem: location 1138 is 1177
9999 mem: storing 1179 in location 1177
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1135 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 105
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1135 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1138
 105 run: *y <- copy in
9999 mem: location 1134 is 1176
9999 mem: location 1138 is 1181
9999 mem: storing 1176 in location 1181
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1135 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 105
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1135 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9999 mem: storing 1180 in location 1138
 105 run: *y <- copy next-node
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1180
9999 mem: storing 0 in location 1180
 105 run: jump-if next-node, 1:offset
9999 mem: location 1137 is 0
9998 run: jump-if fell through
 105 run: reply new-node
9999 mem: location 1135 is 1179
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1006 is 1176
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1176
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1147 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1179
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1006
 104 run: idx <- add idx, 1
9999 mem: location 1005 is 11
9999 mem: storing 12 in location 1005
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 12
9999 mem: location 1004 is 12
9999 mem: storing 1 in location 1007
 104 run: jump-if done?, 
9999 mem: location 1007 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1002 is 1095
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1125
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 103 run: *y <- copy *init
9999 mem: location 1127 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1129 is 1098
9999 mem: storing 1139 in location 1098
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1122 is 1009
9999 mem: location 1125 is 1095
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1182
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1184
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1185
 104 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1095
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1186
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1147
 105 run: jump-unless sc, 
9999 mem: location 1147 is 1009
9998 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1147 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1148
 105 run: reply height
9999 mem: location 1148 is 4
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1187
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1188
 104 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1139
9999 mem: storing 1139 in location 1189
 104 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1189 is 1139
9999 mem: storing 1139 in location 1190
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1139 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1139
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 167
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 0
9999 mem: location 1147 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 1142
9999 mem: storing 1142 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1142
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1189
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1191
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1192
 104 run: column:number <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1194
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1195
 104 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1196
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 1
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1209
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1142
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 0
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1199
 104 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1190 is 1139
9999 mem: location 1196 is 1098
9999 mem: storing 1139 in location 1098
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 1149
9999 mem: location 1144 is 1139
9999 mem: location 1189 is 1142
9998 run: address to copy is 1142
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1142 is 97
9999 mem: storing 97 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1216
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 97
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 97
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 97
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 97
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1227
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 10
9999 mem: storing 1035 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1248 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1035
9999 mem: storing 97 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1248 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1142
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1142 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1142
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 1149
9999 mem: location 1144 is 1139
9999 mem: location 1147 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1143 is 1149
9999 mem: storing 1149 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1149
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: storing 1149 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1139 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1139
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 167
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 0
9999 mem: location 1147 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 1142
9999 mem: storing 1142 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1142
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1149
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 104 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 1152
9999 mem: location 1151 is 1142
9999 mem: location 1189 is 1149
9998 run: address to copy is 1149
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1149 is 98
9999 mem: storing 98 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 98
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 98
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 98
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 98
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 98
  90 print-character: 98 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
9990 schedule: print-character/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 11
9999 mem: storing 1037 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1248 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 98
9999 mem: location 1249 is 1037
9999 mem: storing 98 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1248 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1149 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 1152
9999 mem: location 1151 is 1142
9999 mem: location 1147 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1150
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1150 is 1152
9999 mem: storing 1152 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1152
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1142
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1142 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1142
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 1149
9999 mem: location 1144 is 1139
9999 mem: location 1147 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1143 is 1149
9999 mem: storing 1149 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1149
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: storing 1149 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1152
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 104 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1149
9999 mem: location 1189 is 1152
9998 run: address to copy is 1152
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1152 is 99
9999 mem: storing 99 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 99
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 99
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 99
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 2
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 99
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 99
  90 print-character: 99 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 12
9999 mem: storing 1039 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1248 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 99
9999 mem: location 1249 is 1039
9999 mem: storing 99 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1248 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1152 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1152
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1149
9999 mem: location 1147 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1155
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1155
9999 mem: storing 1155 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1149 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 1152
9999 mem: location 1151 is 1142
9999 mem: location 1147 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1150
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1150 is 1152
9999 mem: storing 1152 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1152
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 2
9999 mem: storing 3 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1155
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 3
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 104 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1189 is 1155
9998 run: address to copy is 1155
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1155 is 100
9999 mem: storing 100 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 100
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 100
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 100
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 100
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 3
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 100
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 100
  90 print-character: 100 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 100
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 13
9999 mem: storing 1041 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 100
9999 mem: location 1249 is 1041
9999 mem: storing 100 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1155
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1147 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1158
9999 mem: storing 1158 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1158
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1152 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1152
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1149
9999 mem: location 1147 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1153
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1155
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1155
9999 mem: storing 1155 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 3
9999 mem: storing 4 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1158
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 4
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 104 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1189 is 1158
9998 run: address to copy is 1158
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1158 is 101
9999 mem: storing 101 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 101
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 101
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 101
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 101
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 4
9999 mem: location 1188 is 4
9999 mem: storing 1 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 1
9998 run: jump-unless fell through
 104 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1184 is 1009
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 8617
  90 print-character: 8617 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 8617
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 8617
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 14
9999 mem: storing 1043 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1248 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 8617
9999 mem: location 1249 is 1043
9999 mem: storing 8617 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 7
9999 mem: location 1248 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 245
9999 mem: location 1250 is 1044
9999 mem: storing 245 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 104 run: row <- add row, 1
9999 mem: location 1192 is 1
9999 mem: storing 2 in location 1192
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 2
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1158
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1189 is 1158
9998 run: address to copy is 1158
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1158 is 101
9999 mem: storing 101 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 101
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 101
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 101
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 101
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 101
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 20
9999 mem: storing 1055 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1055
9999 mem: storing 101 in location 1055
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1158
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1147 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1161
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1155
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1147 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1158
9999 mem: storing 1158 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1158
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1161
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1189 is 1161
9998 run: address to copy is 1161
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1161 is 102
9999 mem: storing 102 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 102
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 102
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 102
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 102
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 21
9999 mem: storing 1057 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1057
9999 mem: storing 102 in location 1057
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1058
9999 mem: storing 7 in location 1058
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1161
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1161
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1147 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1164
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1158
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1147 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1161
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1164
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1189 is 1164
9998 run: address to copy is 1164
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1164 is 10
9999 mem: storing 10 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 10
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 10
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 2
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1253
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 105 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1256
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 22
9999 mem: storing 1059 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1059
9999 mem: storing 32 in location 1059
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1060
9999 mem: storing 7 in location 1060
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 23
9999 mem: storing 1061 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1061
9999 mem: storing 32 in location 1061
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1062
9999 mem: storing 7 in location 1062
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 24
9999 mem: storing 1063 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1248 is 1063
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1063
9999 mem: storing 32 in location 1063
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1248 is 1063
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1064
9999 mem: storing 7 in location 1064
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1192 is 2
9999 mem: storing 3 in location 1192
 104 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 3
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 3
9999 mem: location 1214 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1164
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1147 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1167
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1161
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1161
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1147 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1164
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1190
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1167
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 3
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1189 is 1167
9998 run: address to copy is 1167
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1167 is 103
9999 mem: storing 103 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 103
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 103
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 103
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 103
9999 mem: storing 0 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 104 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 103
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1230
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 105 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 105 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 105 run: trace 90, [print-character], c
9999 mem: location 1230 is 103
  90 print-character: 103 
 105 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 105 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 103
9999 mem: storing 0 in location 1240
 105 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 105 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1243
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 105 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 103
9999 mem: storing 0 in location 1246
 105 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 30
9999 mem: storing 1075 in location 1248
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1248 is 1075
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1249
 105 run: *cursor-contents <- copy c
9999 mem: location 1230 is 103
9999 mem: location 1249 is 1075
9999 mem: storing 103 in location 1075
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1248 is 1075
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1250
 105 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1076
9999 mem: storing 7 in location 1076
 105 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1167
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1147 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1170
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1164
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1164
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1147 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1167
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1190
 104 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1170
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 3
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1189 is 1170
9998 run: address to copy is 1170
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1200
 104 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1218
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1219
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1219 is 10
9999 mem: storing 0 in location 1221
 105 run: jump-unless starting-comment?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1219 is 10
9999 mem: storing 0 in location 1224
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless color-is-red?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1218 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 104 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1256
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
9990 schedule: print-character/clear-line-delimited/render/new-editor/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 31
9999 mem: storing 1077 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1248 is 1077
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1077
9999 mem: storing 32 in location 1077
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1248 is 1077
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1078
9999 mem: storing 7 in location 1078
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 32
9999 mem: storing 1079 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1248 is 1079
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1079
9999 mem: storing 32 in location 1079
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1248 is 1079
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1080
9999 mem: storing 7 in location 1080
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 33
9999 mem: storing 1081 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1248 is 1081
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1081
9999 mem: storing 32 in location 1081
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1248 is 1081
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1082
9999 mem: storing 7 in location 1082
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 106 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 106 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 106 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 106 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 106 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 106 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 106 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1243
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 106 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 34
9999 mem: storing 1083 in location 1248
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1248 is 1083
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1249
 106 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1083
9999 mem: storing 32 in location 1083
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1248 is 1083
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1250
 106 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1084
9999 mem: storing 7 in location 1084
 106 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 106 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 105 run: jump 
9998 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 105 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1192 is 3
9999 mem: storing 4 in location 1192
 104 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 4
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 4
9999 mem: location 1214 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 104 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1170
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1147 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1173
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1189
 104 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1147
 105 run: jump-if in, 1:offset
9999 mem: location 1147 is 1167
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1147 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1147 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1148
 105 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1170
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1190
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1189 is 1173
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 4
9999 mem: location 1187 is 4
9999 mem: storing 1 in location 1197
 104 run: jump-if off-screen?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1204
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1189 is 1173
9999 mem: location 1204 is 1097
9999 mem: storing 1173 in location 1097
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 4
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1193 is 0
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1205
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1198 is 0
9999 mem: location 1205 is 1
9999 mem: storing 0 in location 1206
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1192 is 4
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1207
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1208
 104 run: jump-unless before-cursor?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 80
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1192 is 4
9999 mem: location 1193 is 0
9999 mem: location 1184 is 1009
9999 mem: location 1185 is 1095
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1009
9998 run: result 3 is 1095
9999 mem: storing 1009 in location 1122
9999 mem: storing 1095 in location 1125
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1125 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1125 is 1095
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 103 run: *indent? <- copy 1/true
9999 mem: location 1130 is 1103
9999 mem: storing 1 in location 1103
 103 run: reply result:address:editor-data
9999 mem: location 1125 is 1095
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 2
 102 run: screen-should-contain [
    .          .
    .abcd↩     .
    .ef        .
    .g         .
  ]
 102 run: assume-console [
    press page-down
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"page-down": <>}
9992 load: after rewriting: press page-down
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9991 transform: --- checking type and type_name pointers for recipe string-equal
9991 transform: --- checking type and type_name pointers for recipe new-buffer
9991 transform: --- checking type and type_name pointers for recipe grow-buffer
9991 transform: --- checking type and type_name pointers for recipe buffer-full?
9991 transform: --- checking type and type_name pointers for recipe buffer-append
9991 transform: --- checking type and type_name pointers for recipe integer-to-decimal-string
9991 transform: --- checking type and type_name pointers for recipe buffer-to-array
9991 transform: --- checking type and type_name pointers for recipe string-append
9991 transform: --- checking type and type_name pointers for recipe string-replace
9991 transform: --- checking type and type_name pointers for recipe interpolate
9991 transform: --- checking type and type_name pointers for recipe space?
9991 transform: --- checking type and type_name pointers for recipe trim
9991 transform: --- checking type and type_name pointers for recipe find-next
9991 transform: --- checking type and type_name pointers for recipe find-substring
9991 transform: --- checking type and type_name pointers for recipe match-at
9991 transform: --- checking type and type_name pointers for recipe split
9991 transform: --- checking type and type_name pointers for recipe split-first
9991 transform: --- checking type and type_name pointers for recipe string-copy
9991 transform: --- checking type and type_name pointers for recipe min
9991 transform: --- checking type and type_name pointers for recipe max
9991 transform: --- checking type and type_name pointers for recipe new-channel
9991 transform: --- checking type and type_name pointers for recipe write
9991 transform: --- checking type and type_name pointers for recipe read
9991 transform: --- checking type and type_name pointers for recipe clear-channel
9991 transform: --- checking type and type_name pointers for recipe channel-empty?
9991 transform: --- checking type and type_name pointers for recipe channel-full?
9991 transform: --- checking type and type_name pointers for recipe channel-capacity
9991 transform: --- checking type and type_name pointers for recipe buffer-lines
9991 transform: --- checking type and type_name pointers for recipe new-array
9991 transform: --- checking type and type_name pointers for recipe force-specialization-list-number
9991 transform: --- checking type and type_name pointers for recipe force-specialization-duplex-list-character
9991 transform: --- checking type and type_name pointers for recipe new-stream
9991 transform: --- checking type and type_name pointers for recipe rewind-stream
9991 transform: --- checking type and type_name pointers for recipe read-line
9991 transform: --- checking type and type_name pointers for recipe end-of-stream?
9991 transform: --- checking type and type_name pointers for recipe new-fake-screen
9991 transform: --- checking type and type_name pointers for recipe clear-screen
9991 transform: --- checking type and type_name pointers for recipe sync-screen
9991 transform: --- checking type and type_name pointers for recipe fake-screen-is-empty?
9991 transform: --- checking type and type_name pointers for recipe print-character
9991 transform: --- checking type and type_name pointers for recipe clear-line
9991 transform: --- checking type and type_name pointers for recipe cursor-position
9991 transform: --- checking type and type_name pointers for recipe move-cursor
9991 transform: --- checking type and type_name pointers for recipe cursor-down
9991 transform: --- checking type and type_name pointers for recipe cursor-up
9991 transform: --- checking type and type_name pointers for recipe cursor-right
9991 transform: --- checking type and type_name pointers for recipe cursor-left
9991 transform: --- checking type and type_name pointers for recipe cursor-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe cursor-to-next-line
9991 transform: --- checking type and type_name pointers for recipe screen-width
9991 transform: --- checking type and type_name pointers for recipe screen-height
9991 transform: --- checking type and type_name pointers for recipe hide-cursor
9991 transform: --- checking type and type_name pointers for recipe show-cursor
9991 transform: --- checking type and type_name pointers for recipe hide-screen
9991 transform: --- checking type and type_name pointers for recipe show-screen
9991 transform: --- checking type and type_name pointers for recipe print-string
9991 transform: --- checking type and type_name pointers for recipe print-integer
9991 transform: --- checking type and type_name pointers for recipe new-fake-console
9991 transform: --- checking type and type_name pointers for recipe read-event
9991 transform: --- checking type and type_name pointers for recipe read-key
9991 transform: --- checking type and type_name pointers for recipe send-keys-to-channel
9991 transform: --- checking type and type_name pointers for recipe wait-for-event
9991 transform: --- checking type and type_name pointers for recipe has-more-events?
9991 transform: --- checking type and type_name pointers for recipe push_2
9991 transform: --- checking type and type_name pointers for recipe first_2
9991 transform: --- checking type and type_name pointers for recipe rest_2
9991 transform: --- checking type and type_name pointers for recipe push-duplex_2
9991 transform: --- checking type and type_name pointers for recipe first-duplex_2
9991 transform: --- checking type and type_name pointers for recipe next-duplex_2
9991 transform: --- checking type and type_name pointers for recipe prev-duplex_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex-between_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex-range_2
9991 transform: --- checking type and type_name pointers for recipe append-duplex_2
9991 transform: --- checking type and type_name pointers for recipe last-duplex_2
9991 transform: --- checking type and type_name pointers for recipe sandbox
9991 transform: --- checking type and type_name pointers for recipe main_2
9991 transform: --- checking type and type_name pointers for recipe new-editor
9991 transform: --- checking type and type_name pointers for recipe insert-text
9991 transform: --- checking type and type_name pointers for recipe render
9991 transform: --- checking type and type_name pointers for recipe clear-line-delimited
9991 transform: --- checking type and type_name pointers for recipe clear-screen-from
9991 transform: --- checking type and type_name pointers for recipe clear-rest-of-screen
9991 transform: --- checking type and type_name pointers for recipe get-color
9991 transform: --- checking type and type_name pointers for recipe editor-event-loop
9991 transform: --- checking type and type_name pointers for recipe move-cursor-in-editor
9991 transform: --- checking type and type_name pointers for recipe snap-cursor
9991 transform: --- checking type and type_name pointers for recipe handle-keyboard-event
9991 transform: --- checking type and type_name pointers for recipe insert-at-cursor
9991 transform: --- checking type and type_name pointers for recipe editor-render
9991 transform: --- checking type and type_name pointers for recipe insert-new-line-and-indent
9991 transform: --- checking type and type_name pointers for recipe line-indent
9991 transform: --- checking type and type_name pointers for recipe draw-horizontal
9991 transform: --- checking type and type_name pointers for recipe delete-before-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-left
9991 transform: --- checking type and type_name pointers for recipe previous-line-length
9991 transform: --- checking type and type_name pointers for recipe delete-at-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-right
9991 transform: --- checking type and type_name pointers for recipe move-to-previous-line
9991 transform: --- checking type and type_name pointers for recipe move-to-next-line
9991 transform: --- checking type and type_name pointers for recipe move-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe move-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe before-start-of-next-line
9991 transform: --- checking type and type_name pointers for recipe before-previous-line
9991 transform: --- checking type and type_name pointers for recipe page-down
9991 transform: --- checking type and type_name pointers for recipe page-up
9991 transform: --- checking type and type_name pointers for recipe new-programming-environment
9991 transform: --- checking type and type_name pointers for recipe event-loop
9991 transform: --- checking type and type_name pointers for recipe resize
9991 transform: --- checking type and type_name pointers for recipe render-all
9991 transform: --- checking type and type_name pointers for recipe render-recipes
9991 transform: --- checking type and type_name pointers for recipe render-sandbox-side
9991 transform: --- checking type and type_name pointers for recipe update-cursor
9991 transform: --- checking type and type_name pointers for recipe render-string
9991 transform: --- checking type and type_name pointers for recipe render-code-string
9991 transform: --- checking type and type_name pointers for recipe maximize
9991 transform: --- checking type and type_name pointers for recipe draw-vertical
9991 transform: --- checking type and type_name pointers for recipe run-sandboxes
9991 transform: --- checking type and type_name pointers for recipe update-recipes
9991 transform: --- checking type and type_name pointers for recipe update-sandbox
9991 transform: --- checking type and type_name pointers for recipe update-status
9991 transform: --- checking type and type_name pointers for recipe save-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-sandboxes
9991 transform: --- checking type and type_name pointers for recipe restore-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-screen
9991 transform: --- checking type and type_name pointers for recipe editor-contents
9991 transform: --- checking type and type_name pointers for recipe empty-editor?
9991 transform: --- checking type and type_name pointers for recipe extract-sandbox
9991 transform: --- checking type and type_name pointers for recipe delete-sandbox
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-output
9991 transform: --- checking type and type_name pointers for recipe toggle-expected-response
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-code
9991 transform: --- checking type and type_name pointers for recipe add-operation
9991 transform: --- checking type and type_name pointers for recipe first_3
9991 transform: --- checking type and type_name pointers for recipe rest_3
9991 transform: --- checking type and type_name pointers for recipe push_3
9991 transform: --- checking type and type_name pointers for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- checking type and type_name pointers for recipe run1001
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1264
9999 mem: location 2 is 1095
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1266
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1268
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1264 in location 1269
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1270
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1271
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1272
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1268 is 1009
9999 mem: location 1271 is 1
9999 mem: location 1272 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1268
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1269 is 1264
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1281
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1264 in location 1283
 105 run: jump-unless x, 
9999 mem: location 1283 is 1264
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1264
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1259
9999 mem: location 1283 is 1264
9998 run: address to copy is 1264
9999 mem: storing 1264 in location 1284
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1264
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1259
9999 mem: location 1283 is 1264
9998 run: address to copy is 1265
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1265 is 1259
9999 mem: storing 1259 in location 1285
 105 run: max:number <- length *buf
9999 mem: location 1285 is 1259
9999 mem: storing 1 in location 1286
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1264
9999 mem: location 1264 is 0
9999 mem: location 1286 is 1
9999 mem: storing 0 in location 1287
 105 run: jump-unless done?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1285 is 1259
9999 mem: location 1284 is 1264
9999 mem: location 1264 is 0
9998 run: address to copy is 1260
9998 run: its type is event
9999 mem: location 1260 is 1
9999 mem: location 1261 is 65518
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: storing 1 in location 1289
9999 mem: storing 65518 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
 105 run: *idx <- add *idx, 1
9999 mem: location 1284 is 1264
9999 mem: location 1264 is 0
9999 mem: location 1284 is 1264
9999 mem: storing 1 in location 1264
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1289 is 1
9999 mem: location 1290 is 65518
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1283 is 1264
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1264
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1273
9999 mem: storing 65518 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1264 in location 1269
9999 mem: storing 1 in location 1277
9999 mem: storing 0 in location 1278
 104 run: jump-unless found?, 
9999 mem: location 1277 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1273 is 1
9999 mem: location 1274 is 65518
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: storing 0 in location 1279
 104 run: jump-unless t, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1268 is 1009
9999 mem: location 1270 is 1095
9999 mem: location 1273 is 1
9999 mem: location 1274 is 65518
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1294
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1296
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1297
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1298
9999 mem: storing 65518 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1302
 105 run: jump-if editor, 1:offset
9999 mem: location 1297 is 1095
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1296 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1147
 106 run: jump-unless sc, 
9999 mem: location 1147 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1147 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1148
 106 run: reply width
9999 mem: location 1148 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1303
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1296 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1147
 106 run: jump-unless sc, 
9999 mem: location 1147 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1147 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1148
 106 run: reply height
9999 mem: location 1148 is 4
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1304
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1305
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1306
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1307
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1308
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1309
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1308 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1310
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1309 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1311
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65518
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1312
 105 run: jump-unless c, 
9999 mem: location 1312 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65518
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 1299 in location 1366
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1366 is 1299
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65518
9999 mem: storing 0 in location 1329
 105 run: jump-unless page-up?, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65518
9999 mem: storing 1 in location 1345
 105 run: jump-unless page-down?, 
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: top-of-screen:address:address:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1330
 105 run: old-top:address:duplex-list:character <- copy *top-of-screen
9999 mem: location 1330 is 1096
9999 mem: location 1096 is 1139
9999 mem: storing 1139 in location 1331
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1332
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1333
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1139
9999 mem: storing 1139 in location 1334
 105 run: page-down editor
9999 mem: location 1297 is 1095
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1133
 106 run: bottom-of-screen:address:duplex-list:character <- get *editor, bottom-of-screen:offset
9999 mem: location 1133 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1133 is 1095
9998 run: address to copy is 1097
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1097 is 1173
9999 mem: storing 1173 in location 1134
 106 run: jump-if bottom-of-screen, 1:offset
9999 mem: location 1134 is 1173
9998 run: jumping to instruction 5
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1133 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1139
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1133 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1135
 106 run: *before-cursor <- prev-duplex_2 bottom-of-screen
9999 mem: location 1134 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1147 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1147 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1175
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1175 is 1170
9999 mem: storing 1170 in location 1148
 107 run: reply result
9999 mem: location 1148 is 1170
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: location 1135 is 1098
9999 mem: storing 1170 in location 1098
 106 run: last:character <- get **before-cursor, value:offset
9999 mem: location 1135 is 1098
9999 mem: location 1098 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1135 is 1098
9999 mem: location 1098 is 1170
9998 run: address to copy is 1170
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1136
 106 run: newline?:boolean <- equal last, 10/newline
9999 mem: location 1136 is 10
9999 mem: storing 1 in location 1137
 106 run: jump-unless newline?:boolean, 
9999 mem: location 1137 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- prev-duplex_2 *before-cursor
9999 mem: location 1135 is 1098
9999 mem: location 1098 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1170
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1147 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1147 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1172
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1172 is 1167
9999 mem: storing 1167 in location 1148
 107 run: reply result
9999 mem: location 1148 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: location 1135 is 1098
9999 mem: storing 1167 in location 1098
 106 run: move-to-start-of-line editor
9999 mem: location 1133 is 1095
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1380
 107 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1382
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1382 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1167
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1382 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1383
 107 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1382 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1167
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1382 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1384
 107 run: *cursor-column <- copy left
9999 mem: location 1383 is 0
9999 mem: location 1384 is 1102
9999 mem: storing 0 in location 1102
 107 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1382 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1167
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1382 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1385
 107 run: init:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1382 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1167
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1382 is 1095
9998 run: address to copy is 1095
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1095 is 1139
9999 mem: storing 1139 in location 1386
 107 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1167
9999 mem: location 1386 is 1139
9999 mem: storing 0 in location 1387
 107 run: jump-if at-start-of-text?, 
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1167
9998 run: address to copy is 1167
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1167 is 103
9999 mem: storing 103 in location 1388
 107 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1388 is 103
9999 mem: storing 0 in location 1389
 107 run: jump-if at-start-of-line?, 
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 107 run: *before-cursor <- prev-duplex_2 *before-cursor
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1167
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1147
 108 run: jump-if in, 1:offset
9999 mem: location 1147 is 1167
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1147 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1147 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1169
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1169 is 1164
9999 mem: storing 1164 in location 1148
 108 run: reply result
9999 mem: location 1148 is 1164
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1164
9999 mem: location 1385 is 1098
9999 mem: storing 1164 in location 1098
 107 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1164
 107 run: jump 
9998 run: jumping to instruction 8
 107 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1164
9999 mem: location 1386 is 1139
9999 mem: storing 0 in location 1387
 107 run: jump-if at-start-of-text?, 
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 107 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1385 is 1098
9999 mem: location 1098 is 1164
9998 run: address to copy is 1164
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1164 is 10
9999 mem: storing 10 in location 1388
 107 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1388 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if at-start-of-line?, 
9999 mem: location 1389 is 1
9998 run: jumping to instruction 16
9999 trace: fall-through: exiting move-to-start-of-line; decrementing callstack depth from 6
 106 run: top-of-screen:address:address:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1133 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1139
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1133 is 1095
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1138
 106 run: *top-of-screen <- copy *before-cursor
9999 mem: location 1135 is 1098
9999 mem: location 1098 is 1164
9999 mem: location 1138 is 1096
9999 mem: storing 1164 in location 1096
 106 run: reply editor:address:editor-data
9999 mem: location 1133 is 1095
9999 trace: reply: decrementing callstack depth from 5
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1335
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1336
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1337
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1164
9999 mem: storing 1164 in location 1338
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1335 is 0
9998 run: jumping to instruction 514
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1216 in location 1315
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1332 is 1
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1139
9999 mem: location 1336 is 1
9999 mem: location 1337 is 0
9999 mem: location 1338 is 1164
9999 mem: location 1335 is 0
9999 mem: location 1315 is 1216
9999 mem: location 1315 is 1216
9999 mem: storing 1 in location 1216
9999 mem: storing 1 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 1139 in location 1219
9999 mem: storing 1 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 1164 in location 1222
9999 mem: storing 0 in location 1223
 105 run: editor <- add-operation editor, op
9999 mem: location 1297 is 1095
9999 mem: location 1315 is 1216
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1255
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1216 in location 1256
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1255 is 1095
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1257
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1256 is 1216
9999 mem: location 1257 is 1104
9999 mem: location 1104 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1216 in location 1211
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1212
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1390
9999 mem: storing 1390 in location 1213
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1213 is 1390
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1390 is 0
9999 mem: location 1391 is 0
9999 mem: location 1213 is 1390
9998 run: address to copy is 1390
9999 mem: storing 1390 in location 1214
 107 run: *val <- copy x
9999 mem: location 1211 is 1216
9999 mem: location 1214 is 1390
9999 mem: storing 1216 in location 1390
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1213 is 1390
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1390 is 1216
9999 mem: location 1391 is 0
9999 mem: location 1213 is 1390
9999 type: type deduced to be address$
9998 run: address to copy is 1391
9999 mem: storing 1391 in location 1215
 107 run: *next <- copy in
9999 mem: location 1212 is 0
9999 mem: location 1215 is 1391
9999 mem: storing 0 in location 1391
 107 run: reply result
9999 mem: location 1213 is 1390
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1390
9999 mem: location 1257 is 1104
9999 mem: storing 1390 in location 1104
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1255 is 1095
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1258
 106 run: *redo <- copy 0
9999 mem: location 1258 is 1105
9999 mem: storing 0 in location 1105
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1095
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1297
 105 run: no-movement?:boolean <- equal *top-of-screen, old-top
9999 mem: location 1330 is 1096
9999 mem: location 1096 is 1164
9999 mem: location 1331 is 1139
9999 mem: storing 0 in location 1344
 105 run: go-render? <- not no-movement?
9999 mem: location 1344 is 0
9999 mem: storing 1 in location 1302
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1296 is 1009
9999 mem: location 1297 is 1095
9999 mem: location 1302 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1095
9998 run: result 2 is 1
9999 mem: storing 1009 in location 1268
9999 mem: storing 1095 in location 1270
9999 mem: storing 1 in location 1280
 104 run: jump-unless go-render?, 
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1268 is 1009
9999 mem: location 1270 is 1095
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1133
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1134
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1134 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1134 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1135
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1134 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1134 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1136
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1133 is 1009
9999 mem: location 1134 is 1095
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1184
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1185
 106 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1095
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1186
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1147
 107 run: jump-unless sc, 
9999 mem: location 1147 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1147 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1148
 107 run: reply height
9999 mem: location 1148 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1187
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1188
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1164
9999 mem: storing 1164 in location 1189
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1189 is 1164
9999 mem: storing 1164 in location 1190
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1147 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1189
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1191
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1192
 106 run: column:number <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1194
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1195
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1196
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 1
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1167
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
9990 schedule: render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 0
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1199
 106 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1190 is 1164
9999 mem: location 1196 is 1098
9999 mem: storing 1164 in location 1098
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1189 is 1167
9998 run: address to copy is 1167
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1167 is 103
9999 mem: storing 103 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1392
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1394
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1395
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1394 is 7
9999 mem: storing 1 in location 1396
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1395 is 103
9999 mem: storing 0 in location 1397
 107 run: jump-unless starting-comment?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1398
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1395 is 103
9999 mem: storing 0 in location 1400
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1401
 107 run: jump-unless color-is-red?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1394 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 103
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 103
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 103
  90 print-character: 103 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 103
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 103
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 10
9999 mem: storing 1035 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1248 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 103
9999 mem: location 1249 is 1035
9999 mem: storing 103 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1035
9999 mem: location 1035 is 103
9999 mem: location 1036 is 7
9999 mem: location 1248 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1147 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1170
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1147 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1170
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 106 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1189 is 1170
9998 run: address to copy is 1170
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1394
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1395
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1394 is 7
9999 mem: storing 1 in location 1396
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1395 is 10
9999 mem: storing 0 in location 1397
 107 run: jump-unless starting-comment?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1398
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1395 is 10
9999 mem: storing 0 in location 1400
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1401
 107 run: jump-unless color-is-red?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1394 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1202
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 11
9999 mem: storing 1037 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1248 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1037
9999 mem: storing 32 in location 1037
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1248 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1038
9999 mem: storing 7 in location 1038
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 12
9999 mem: storing 1039 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1248 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1039
9999 mem: storing 32 in location 1039
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1248 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1040
9999 mem: storing 7 in location 1040
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 13
9999 mem: storing 1041 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1041
9999 mem: storing 32 in location 1041
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1042
9999 mem: storing 7 in location 1042
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 14
9999 mem: storing 1043 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1043
9999 mem: location 1043 is 8617
9999 mem: location 1044 is 245
9999 mem: location 1248 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1043
9999 mem: storing 32 in location 1043
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 245
9999 mem: location 1248 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1044
9999 mem: storing 7 in location 1044
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1192 is 1
9999 mem: storing 2 in location 1192
 106 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 2
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1170
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1147 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1147 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1170
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1190
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1173
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1189 is 1173
9998 run: address to copy is 1173
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1173 is 104
9999 mem: storing 104 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1394
 107 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1395
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1394 is 7
9999 mem: storing 1 in location 1396
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1395 is 104
9999 mem: storing 0 in location 1397
 107 run: jump-unless starting-comment?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1398
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1395 is 104
9999 mem: storing 0 in location 1400
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1401
 107 run: jump-unless color-is-red?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1394 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 104
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 104
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 104
  90 print-character: 104 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 104
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 104
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 20
9999 mem: storing 1055 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 101
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1249
9990 schedule: print-character/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 104
9999 mem: location 1249 is 1055
9999 mem: storing 104 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1056
9999 mem: storing 7 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1147 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1170
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1147 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1189 is 1176
9998 run: address to copy is 1176
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1176 is 10
9999 mem: storing 10 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1394
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1395
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1394 is 7
9999 mem: storing 1 in location 1396
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1395 is 10
9999 mem: storing 0 in location 1397
 107 run: jump-unless starting-comment?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1398
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1395 is 10
9999 mem: storing 0 in location 1400
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1401
 107 run: jump-unless color-is-red?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1394 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 21
9999 mem: storing 1057 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 102
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1057
9999 mem: storing 32 in location 1057
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1058
9999 mem: storing 7 in location 1058
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 22
9999 mem: storing 1059 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1059
9999 mem: storing 32 in location 1059
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1060
9999 mem: storing 7 in location 1060
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 23
9999 mem: storing 1061 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1061
9999 mem: storing 32 in location 1061
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1062
9999 mem: storing 7 in location 1062
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 24
9999 mem: storing 1063 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1248 is 1063
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1063
9999 mem: storing 32 in location 1063
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1248 is 1063
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1064
9999 mem: storing 7 in location 1064
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1192 is 2
9999 mem: storing 3 in location 1192
 106 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 3
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 3
9999 mem: location 1214 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1147 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1147 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1190
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1179
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 3
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 105
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1189 is 1179
9998 run: address to copy is 1179
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1179 is 105
9999 mem: storing 105 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1394
 107 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1395
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1394 is 7
9999 mem: storing 1 in location 1396
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1395 is 105
9999 mem: storing 0 in location 1397
 107 run: jump-unless starting-comment?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1398
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1396 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1395 is 105
9999 mem: storing 0 in location 1400
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1400 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1394 is 7
9999 mem: storing 0 in location 1401
 107 run: jump-unless color-is-red?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1394 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 105
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 105
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 105
  90 print-character: 105 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 105
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 105
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 30
9999 mem: storing 1075 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1248 is 1075
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 105
9999 mem: location 1249 is 1075
9999 mem: storing 105 in location 1075
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1248 is 1075
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1076
9999 mem: storing 7 in location 1076
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 105
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1147 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1147
 107 run: jump-if in, 1:offset
9999 mem: location 1147 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1147 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1147 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1148
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1148 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 0
9998 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 1173
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1204
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1189 is 0
9999 mem: location 1204 is 1097
9999 mem: storing 0 in location 1097
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1205
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1198 is 0
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1206
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1207
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1208
 106 run: jump-unless before-cursor?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1192 is 3
9999 mem: location 1193 is 1
9999 mem: location 1184 is 1009
9999 mem: location 1185 is 1095
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 3 in location 1137
9999 mem: storing 1 in location 1138
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1133 is 1009
9999 mem: location 1138 is 1
9999 mem: location 1136 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 106 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1256
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
9990 schedule: print-character/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 31
9999 mem: storing 1077 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1248 is 1077
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1077
9999 mem: storing 32 in location 1077
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1248 is 1077
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1078
9999 mem: storing 7 in location 1078
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 32
9999 mem: storing 1079 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1248 is 1079
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1079
9999 mem: storing 32 in location 1079
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1248 is 1079
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1080
9999 mem: storing 7 in location 1080
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 33
9999 mem: storing 1081 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1248 is 1081
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1081
9999 mem: storing 32 in location 1081
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1248 is 1081
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1082
9999 mem: storing 7 in location 1082
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 34
9999 mem: storing 1083 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1248 is 1083
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1083
9999 mem: storing 32 in location 1083
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1248 is 1083
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1084
9999 mem: storing 7 in location 1084
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1137 is 3
9999 mem: storing 4 in location 1137
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1133 is 1009
9999 mem: location 1137 is 4
9999 mem: location 1135 is 0
9999 mem: location 1136 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1283
 106 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1284
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1285
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1286
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if style-found?, 
9999 mem: location 1288 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 106 run: jump-if color-found?, 
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1289
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
 106 run: jump-if bg-color-found?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1291
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1283 is 1009
9999 mem: location 1284 is 4
9999 mem: location 1285 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 4
9999 mem: location 1214 is 1011
9999 mem: storing 4 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1283
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 0
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 1
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 1
9999 mem: storing 2 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 2
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 2
9999 mem: storing 3 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 3
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 4
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 5
9999 mem: location 1286 is 4
9999 mem: storing 0 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 0
9998 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1137 is 4
9999 mem: storing 5 in location 1137
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1133 is 1009
9999 mem: location 1137 is 5
9999 mem: location 1135 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 106 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1212
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1214
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1215
 106 run: jump-if screen, 
9999 mem: location 1211 is 1009
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1211 is 1009
9999 mem: location 1212 is 5
9999 mem: location 1213 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1403
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1406
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1407
 107 run: jump-unless sc, 
9999 mem: location 1405 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1408
 107 run: *row <- copy new-row
9999 mem: location 1406 is 5
9999 mem: location 1408 is 1011
9999 mem: storing 5 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1409
 107 run: *column <- copy new-column
9999 mem: location 1407 is 0
9999 mem: location 1409 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1405 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1211
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1211 is 1009
9999 mem: location 1213 is 0
9999 mem: location 1215 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 0
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 0
9999 mem: storing 1 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
9990 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1211 is 1009
9999 mem: location 1212 is 5
9999 mem: location 1214 is 0
9999 mem: location 1215 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1410
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1412
 107 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1413
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1414
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1415
 107 run: row <- add row, 1
9999 mem: location 1413 is 5
9999 mem: storing 6 in location 1413
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1412 is 1009
9999 mem: location 1413 is 6
9999 mem: location 1414 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1406
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1407
 108 run: jump-unless sc, 
9999 mem: location 1405 is 1009
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1408
 108 run: *row <- copy new-row
9999 mem: location 1406 is 6
9999 mem: location 1408 is 1011
9999 mem: storing 6 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1409
 108 run: *column <- copy new-column
9999 mem: location 1407 is 0
9999 mem: location 1409 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1405 is 1009
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1412
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1412 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1147
 108 run: jump-unless sc, 
9999 mem: location 1147 is 1009
9998 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1147 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1147 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1148
 108 run: reply height
9999 mem: location 1148 is 4
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1416
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1413 is 6
9999 mem: location 1416 is 4
9999 mem: storing 1 in location 1417
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1417 is 1
9998 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1271
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1272
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1268 is 1009
9999 mem: location 1271 is 1
9999 mem: location 1272 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1268
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1269 is 1264
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1264 in location 1283
 105 run: jump-unless x, 
9999 mem: location 1283 is 1264
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1264
9999 mem: location 1264 is 1
9999 mem: location 1265 is 1259
9999 mem: location 1283 is 1264
9998 run: address to copy is 1264
9999 mem: storing 1264 in location 1284
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1264
9999 mem: location 1264 is 1
9999 mem: location 1265 is 1259
9999 mem: location 1283 is 1264
9998 run: address to copy is 1265
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1265 is 1259
9999 mem: storing 1259 in location 1285
 105 run: max:number <- length *buf
9999 mem: location 1285 is 1259
9999 mem: storing 1 in location 1286
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1264
9999 mem: location 1264 is 1
9999 mem: location 1286 is 1
9999 mem: storing 1 in location 1287
 105 run: jump-unless done?, 
9999 mem: location 1287 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1145 in location 1288
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1288 is 1145
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1283 is 1264
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1264
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1264 in location 1269
9999 mem: storing 1 in location 1277
9999 mem: storing 1 in location 1278
 104 run: jump-unless found?, 
9999 mem: location 1277 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1278 is 1
9998 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .g         .
    .h         .
    .i         .
  ]
 102 run: assume-console [
    press up-arrow
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"up-arrow": <>}
9992 load: after rewriting: press up-arrow
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- perform checks for recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9991 transform: --- checking type and type_name pointers for recipe string-equal
9991 transform: --- checking type and type_name pointers for recipe new-buffer
9991 transform: --- checking type and type_name pointers for recipe grow-buffer
9991 transform: --- checking type and type_name pointers for recipe buffer-full?
9991 transform: --- checking type and type_name pointers for recipe buffer-append
9991 transform: --- checking type and type_name pointers for recipe integer-to-decimal-string
9991 transform: --- checking type and type_name pointers for recipe buffer-to-array
9991 transform: --- checking type and type_name pointers for recipe string-append
9991 transform: --- checking type and type_name pointers for recipe string-replace
9991 transform: --- checking type and type_name pointers for recipe interpolate
9991 transform: --- checking type and type_name pointers for recipe space?
9991 transform: --- checking type and type_name pointers for recipe trim
9991 transform: --- checking type and type_name pointers for recipe find-next
9991 transform: --- checking type and type_name pointers for recipe find-substring
9991 transform: --- checking type and type_name pointers for recipe match-at
9991 transform: --- checking type and type_name pointers for recipe split
9991 transform: --- checking type and type_name pointers for recipe split-first
9991 transform: --- checking type and type_name pointers for recipe string-copy
9991 transform: --- checking type and type_name pointers for recipe min
9991 transform: --- checking type and type_name pointers for recipe max
9991 transform: --- checking type and type_name pointers for recipe new-channel
9991 transform: --- checking type and type_name pointers for recipe write
9991 transform: --- checking type and type_name pointers for recipe read
9991 transform: --- checking type and type_name pointers for recipe clear-channel
9991 transform: --- checking type and type_name pointers for recipe channel-empty?
9991 transform: --- checking type and type_name pointers for recipe channel-full?
9991 transform: --- checking type and type_name pointers for recipe channel-capacity
9991 transform: --- checking type and type_name pointers for recipe buffer-lines
9991 transform: --- checking type and type_name pointers for recipe new-array
9991 transform: --- checking type and type_name pointers for recipe force-specialization-list-number
9991 transform: --- checking type and type_name pointers for recipe force-specialization-duplex-list-character
9991 transform: --- checking type and type_name pointers for recipe new-stream
9991 transform: --- checking type and type_name pointers for recipe rewind-stream
9991 transform: --- checking type and type_name pointers for recipe read-line
9991 transform: --- checking type and type_name pointers for recipe end-of-stream?
9991 transform: --- checking type and type_name pointers for recipe new-fake-screen
9991 transform: --- checking type and type_name pointers for recipe clear-screen
9991 transform: --- checking type and type_name pointers for recipe sync-screen
9991 transform: --- checking type and type_name pointers for recipe fake-screen-is-empty?
9991 transform: --- checking type and type_name pointers for recipe print-character
9991 transform: --- checking type and type_name pointers for recipe clear-line
9991 transform: --- checking type and type_name pointers for recipe cursor-position
9991 transform: --- checking type and type_name pointers for recipe move-cursor
9991 transform: --- checking type and type_name pointers for recipe cursor-down
9991 transform: --- checking type and type_name pointers for recipe cursor-up
9991 transform: --- checking type and type_name pointers for recipe cursor-right
9991 transform: --- checking type and type_name pointers for recipe cursor-left
9991 transform: --- checking type and type_name pointers for recipe cursor-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe cursor-to-next-line
9991 transform: --- checking type and type_name pointers for recipe screen-width
9991 transform: --- checking type and type_name pointers for recipe screen-height
9991 transform: --- checking type and type_name pointers for recipe hide-cursor
9991 transform: --- checking type and type_name pointers for recipe show-cursor
9991 transform: --- checking type and type_name pointers for recipe hide-screen
9991 transform: --- checking type and type_name pointers for recipe show-screen
9991 transform: --- checking type and type_name pointers for recipe print-string
9991 transform: --- checking type and type_name pointers for recipe print-integer
9991 transform: --- checking type and type_name pointers for recipe new-fake-console
9991 transform: --- checking type and type_name pointers for recipe read-event
9991 transform: --- checking type and type_name pointers for recipe read-key
9991 transform: --- checking type and type_name pointers for recipe send-keys-to-channel
9991 transform: --- checking type and type_name pointers for recipe wait-for-event
9991 transform: --- checking type and type_name pointers for recipe has-more-events?
9991 transform: --- checking type and type_name pointers for recipe push_2
9991 transform: --- checking type and type_name pointers for recipe first_2
9991 transform: --- checking type and type_name pointers for recipe rest_2
9991 transform: --- checking type and type_name pointers for recipe push-duplex_2
9991 transform: --- checking type and type_name pointers for recipe first-duplex_2
9991 transform: --- checking type and type_name pointers for recipe next-duplex_2
9991 transform: --- checking type and type_name pointers for recipe prev-duplex_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex_2
9991 transform: --- checking type and type_name pointers for recipe remove-duplex-between_2
9991 transform: --- checking type and type_name pointers for recipe insert-duplex-range_2
9991 transform: --- checking type and type_name pointers for recipe append-duplex_2
9991 transform: --- checking type and type_name pointers for recipe last-duplex_2
9991 transform: --- checking type and type_name pointers for recipe sandbox
9991 transform: --- checking type and type_name pointers for recipe main_2
9991 transform: --- checking type and type_name pointers for recipe new-editor
9991 transform: --- checking type and type_name pointers for recipe insert-text
9991 transform: --- checking type and type_name pointers for recipe render
9991 transform: --- checking type and type_name pointers for recipe clear-line-delimited
9991 transform: --- checking type and type_name pointers for recipe clear-screen-from
9991 transform: --- checking type and type_name pointers for recipe clear-rest-of-screen
9991 transform: --- checking type and type_name pointers for recipe get-color
9991 transform: --- checking type and type_name pointers for recipe editor-event-loop
9991 transform: --- checking type and type_name pointers for recipe move-cursor-in-editor
9991 transform: --- checking type and type_name pointers for recipe snap-cursor
9991 transform: --- checking type and type_name pointers for recipe handle-keyboard-event
9991 transform: --- checking type and type_name pointers for recipe insert-at-cursor
9991 transform: --- checking type and type_name pointers for recipe editor-render
9991 transform: --- checking type and type_name pointers for recipe insert-new-line-and-indent
9991 transform: --- checking type and type_name pointers for recipe line-indent
9991 transform: --- checking type and type_name pointers for recipe draw-horizontal
9991 transform: --- checking type and type_name pointers for recipe delete-before-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-left
9991 transform: --- checking type and type_name pointers for recipe previous-line-length
9991 transform: --- checking type and type_name pointers for recipe delete-at-cursor
9991 transform: --- checking type and type_name pointers for recipe move-cursor-coordinates-right
9991 transform: --- checking type and type_name pointers for recipe move-to-previous-line
9991 transform: --- checking type and type_name pointers for recipe move-to-next-line
9991 transform: --- checking type and type_name pointers for recipe move-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe move-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-start-of-line
9991 transform: --- checking type and type_name pointers for recipe delete-to-end-of-line
9991 transform: --- checking type and type_name pointers for recipe before-start-of-next-line
9991 transform: --- checking type and type_name pointers for recipe before-previous-line
9991 transform: --- checking type and type_name pointers for recipe page-down
9991 transform: --- checking type and type_name pointers for recipe page-up
9991 transform: --- checking type and type_name pointers for recipe new-programming-environment
9991 transform: --- checking type and type_name pointers for recipe event-loop
9991 transform: --- checking type and type_name pointers for recipe resize
9991 transform: --- checking type and type_name pointers for recipe render-all
9991 transform: --- checking type and type_name pointers for recipe render-recipes
9991 transform: --- checking type and type_name pointers for recipe render-sandbox-side
9991 transform: --- checking type and type_name pointers for recipe update-cursor
9991 transform: --- checking type and type_name pointers for recipe render-string
9991 transform: --- checking type and type_name pointers for recipe render-code-string
9991 transform: --- checking type and type_name pointers for recipe maximize
9991 transform: --- checking type and type_name pointers for recipe draw-vertical
9991 transform: --- checking type and type_name pointers for recipe run-sandboxes
9991 transform: --- checking type and type_name pointers for recipe update-recipes
9991 transform: --- checking type and type_name pointers for recipe update-sandbox
9991 transform: --- checking type and type_name pointers for recipe update-status
9991 transform: --- checking type and type_name pointers for recipe save-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-sandboxes
9991 transform: --- checking type and type_name pointers for recipe restore-sandboxes
9991 transform: --- checking type and type_name pointers for recipe render-screen
9991 transform: --- checking type and type_name pointers for recipe editor-contents
9991 transform: --- checking type and type_name pointers for recipe empty-editor?
9991 transform: --- checking type and type_name pointers for recipe extract-sandbox
9991 transform: --- checking type and type_name pointers for recipe delete-sandbox
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-output
9991 transform: --- checking type and type_name pointers for recipe toggle-expected-response
9991 transform: --- checking type and type_name pointers for recipe find-click-in-sandbox-code
9991 transform: --- checking type and type_name pointers for recipe add-operation
9991 transform: --- checking type and type_name pointers for recipe first_3
9991 transform: --- checking type and type_name pointers for recipe rest_3
9991 transform: --- checking type and type_name pointers for recipe push_3
9991 transform: --- checking type and type_name pointers for recipe scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
9991 transform: --- checking type and type_name pointers for recipe run1001
9991 transform: --- checking type and type_name pointers for recipe run1002
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1423
9999 mem: location 2 is 1095
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1268
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1423 in location 1269
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1270
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1271
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1272
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1268 is 1009
9999 mem: location 1271 is 1
9999 mem: location 1272 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1268
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1269 is 1423
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1423 in location 1283
 105 run: jump-unless x, 
9999 mem: location 1283 is 1423
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1418
9999 mem: location 1283 is 1423
9998 run: address to copy is 1423
9999 mem: storing 1423 in location 1284
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1424 is 1418
9999 mem: location 1283 is 1423
9998 run: address to copy is 1424
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1424 is 1418
9999 mem: storing 1418 in location 1285
 105 run: max:number <- length *buf
9999 mem: location 1285 is 1418
9999 mem: storing 1 in location 1286
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1286 is 1
9999 mem: storing 0 in location 1287
 105 run: jump-unless done?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1285 is 1418
9999 mem: location 1284 is 1423
9999 mem: location 1423 is 0
9998 run: address to copy is 1419
9998 run: its type is event
9999 mem: location 1419 is 1
9999 mem: location 1420 is 65517
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: storing 1 in location 1289
9999 mem: storing 65517 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
 105 run: *idx <- add *idx, 1
9999 mem: location 1284 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1284 is 1423
9999 mem: storing 1 in location 1423
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1289 is 1
9999 mem: location 1290 is 65517
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1283 is 1423
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1423
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1273
9999 mem: storing 65517 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1423 in location 1269
9999 mem: storing 1 in location 1277
9999 mem: storing 0 in location 1278
 104 run: jump-unless found?, 
9999 mem: location 1277 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1273 is 1
9999 mem: location 1274 is 65517
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: storing 0 in location 1279
 104 run: jump-unless t, 
9999 mem: location 1279 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1279 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1268 is 1009
9999 mem: location 1270 is 1095
9999 mem: location 1273 is 1
9999 mem: location 1274 is 65517
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1296
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1297
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1298
9999 mem: storing 65517 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1302
 105 run: jump-if editor, 1:offset
9999 mem: location 1297 is 1095
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1296 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1425
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1427
 106 run: jump-unless sc, 
9999 mem: location 1427 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1427 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1427 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1428
 106 run: reply width
9999 mem: location 1428 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1303
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1296 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1427
 106 run: jump-unless sc, 
9999 mem: location 1427 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1427 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1427 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1428
 106 run: reply height
9999 mem: location 1428 is 4
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1304
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1305
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1306
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1307
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1308
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1309
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1308 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1310
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1309 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1311
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65517
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1312
 105 run: jump-unless c, 
9999 mem: location 1312 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65517
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 1299 in location 1366
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1366 is 1299
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65517
9999 mem: storing 0 in location 1329
 105 run: jump-unless page-up?, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65517
9999 mem: storing 0 in location 1345
 105 run: jump-unless page-down?, 
9999 mem: location 1345 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65517
9999 mem: storing 0 in location 1352
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65517
9999 mem: storing 0 in location 1353
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65517
9999 mem: storing 0 in location 1367
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1366 is 1299
9999 mem: location 1299 is 65517
9999 mem: storing 1 in location 1368
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1332
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1333
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1164
9999 mem: storing 1164 in location 1334
 105 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1297 is 1095
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: new alloc: 1429
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1431
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1431 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1431 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1432
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1431 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1431 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1433
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1431 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1431 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1434
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1431 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1431 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1435
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1431 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1431 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1436
 106 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1432 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1437
 106 run: jump-if already-at-top?, 
9999 mem: location 1437 is 1
9998 run: jumping to instruction 48
 106 run: jump-unless already-at-top?, 
9999 mem: location 1437 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [scroll up]
  10 app: scroll up 
 106 run: top-of-screen:address:address:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1431 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1431 is 1095
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1447
 106 run: old-top:address:duplex-list:character <- copy *top-of-screen
9999 mem: location 1447 is 1096
9999 mem: location 1096 is 1164
9999 mem: storing 1164 in location 1448
 106 run: *top-of-screen <- before-previous-line *top-of-screen, editor
9999 mem: location 1447 is 1096
9999 mem: location 1096 is 1164
9999 mem: location 1431 is 1095
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1450
 107 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1164 in location 1452
 107 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1453
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1452 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1452 is 1164
9998 run: address to copy is 1164
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1164 is 10
9999 mem: storing 10 in location 1454
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1453 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1453 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1455
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1453 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1453 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1456
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1456 is 4
9999 mem: location 1455 is 0
9999 mem: storing 4 in location 1457
 107 run: sentinel:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1453 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1164
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1453 is 1095
9998 run: address to copy is 1095
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1095 is 1139
9999 mem: storing 1139 in location 1458
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1452 is 1164
9999 mem: location 1458 is 1139
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 108 run: curr:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1164 in location 1133
 108 run: start:address:duplex-list:character <- next-ingredient 
9999 mem: storing 1139 in location 1134
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1135
 108 run: jump-if curr, 1:offset
9999 mem: location 1133 is 1164
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1164
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1136 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1164
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1164
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1427 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1166
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1166 is 1161
9999 mem: storing 1161 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1161
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1161
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1161
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1133 is 1161
9998 run: address to copy is 1161
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1161 is 102
9999 mem: storing 102 in location 1137
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1137 is 102
9999 mem: storing 0 in location 1138
 108 run: jump-if at-newline?, 
9999 mem: location 1138 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1135
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1161
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1161
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1427 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1158
9999 mem: storing 1158 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1158
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1158
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1158
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1133 is 1158
9998 run: address to copy is 1158
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1158 is 101
9999 mem: storing 101 in location 1137
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1137 is 101
9999 mem: storing 0 in location 1138
 108 run: jump-if at-newline?, 
9999 mem: location 1138 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1135 is 1
9999 mem: storing 2 in location 1135
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1158
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1158
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1427 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1160 is 1155
9999 mem: storing 1155 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1155
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1155
9999 mem: storing 1155 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1155
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1155
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1133 is 1155
9998 run: address to copy is 1155
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1155 is 100
9999 mem: storing 100 in location 1137
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1137 is 100
9999 mem: storing 0 in location 1138
 108 run: jump-if at-newline?, 
9999 mem: location 1138 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1135 is 2
9999 mem: storing 3 in location 1135
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1155
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1155
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1427 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1157
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1157 is 1152
9999 mem: storing 1152 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1152
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1152
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1152
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1149
9999 mem: location 1133 is 1152
9998 run: address to copy is 1152
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1152 is 99
9999 mem: storing 99 in location 1137
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1137 is 99
9999 mem: storing 0 in location 1138
 108 run: jump-if at-newline?, 
9999 mem: location 1138 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1135 is 3
9999 mem: storing 4 in location 1135
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1152
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1152 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1152
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1152
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1149
9999 mem: location 1427 is 1152
9999 type: type deduced to be character$
9998 run: address to copy is 1154
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1154 is 1149
9999 mem: storing 1149 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1149
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1149
9999 mem: storing 1149 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1149
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1149
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 1152
9999 mem: location 1151 is 1142
9999 mem: location 1133 is 1149
9998 run: address to copy is 1149
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1149 is 98
9999 mem: storing 98 in location 1137
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1137 is 98
9999 mem: storing 0 in location 1138
 108 run: jump-if at-newline?, 
9999 mem: location 1138 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1135 is 4
9999 mem: storing 5 in location 1135
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1149
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1149 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1149
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1149 is 98
9999 mem: location 1150 is 1152
9999 mem: location 1151 is 1142
9999 mem: location 1427 is 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1151 is 1142
9999 mem: storing 1142 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1142
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1142
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1142
9999 mem: location 1134 is 1139
9999 mem: storing 0 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1133 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 1149
9999 mem: location 1144 is 1139
9999 mem: location 1133 is 1142
9998 run: address to copy is 1142
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1142 is 97
9999 mem: storing 97 in location 1137
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1137 is 97
9999 mem: storing 0 in location 1138
 108 run: jump-if at-newline?, 
9999 mem: location 1138 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1135 is 5
9999 mem: storing 6 in location 1135
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev-duplex_2 curr
9999 mem: location 1133 is 1142
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 109 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1142 in location 1427
 109 run: jump-if in, 1:offset
9999 mem: location 1427 is 1142
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 97
9999 mem: location 1143 is 1149
9999 mem: location 1144 is 1139
9999 mem: location 1427 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1144
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1144 is 1139
9999 mem: storing 1139 in location 1428
 109 run: reply result
9999 mem: location 1428 is 1139
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1133
 108 run: jump-unless curr, 
9999 mem: location 1133 is 1139
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1133 is 1139
9999 mem: location 1134 is 1139
9999 mem: storing 1 in location 1136
 108 run: jump-if at-start?, 
9999 mem: location 1136 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1135 is 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 6
9999 mem: storing 6 in location 1459
 107 run: jump-if len, 
9999 mem: location 1459 is 6
9998 run: jumping to instruction 15
 107 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1459 is 6
9999 mem: location 1457 is 4
9999 mem: storing 2 in location 1461
 107 run: jump-if max, 
9999 mem: location 1461 is 2
9998 run: jumping to instruction 20
 107 run: max <- add max, 1
9999 mem: location 1461 is 2
9999 mem: storing 3 in location 1461
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1462
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1462 is 0
9999 mem: location 1461 is 3
9999 mem: storing 0 in location 1463
 107 run: jump-if done?, 
9999 mem: location 1463 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1452 is 1164
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1427
 108 run: jump-if in, 1:offset
9999 mem: location 1427 is 1164
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1427 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1166
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1166 is 1161
9999 mem: storing 1161 in location 1428
 108 run: reply result
9999 mem: location 1428 is 1161
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1460
 107 run: jump-unless prev, 
9999 mem: location 1460 is 1161
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1460 is 1161
9999 mem: storing 1161 in location 1452
 107 run: count <- add count, 1
9999 mem: location 1462 is 0
9999 mem: storing 1 in location 1462
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1462 is 1
9999 mem: location 1461 is 3
9999 mem: storing 0 in location 1463
 107 run: jump-if done?, 
9999 mem: location 1463 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1452 is 1161
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1427
 108 run: jump-if in, 1:offset
9999 mem: location 1427 is 1161
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1427 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1158
9999 mem: storing 1158 in location 1428
 108 run: reply result
9999 mem: location 1428 is 1158
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1460
 107 run: jump-unless prev, 
9999 mem: location 1460 is 1158
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1460 is 1158
9999 mem: storing 1158 in location 1452
 107 run: count <- add count, 1
9999 mem: location 1462 is 1
9999 mem: storing 2 in location 1462
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1462 is 2
9999 mem: location 1461 is 3
9999 mem: storing 0 in location 1463
 107 run: jump-if done?, 
9999 mem: location 1463 is 0
9998 run: jump-if fell through
 107 run: prev:address:duplex-list:character <- prev-duplex_2 curr
9999 mem: location 1452 is 1158
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1427
 108 run: jump-if in, 1:offset
9999 mem: location 1427 is 1158
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1427 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1427 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1160 is 1155
9999 mem: storing 1155 in location 1428
 108 run: reply result
9999 mem: location 1428 is 1155
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1155
9999 mem: storing 1155 in location 1460
 107 run: jump-unless prev, 
9999 mem: location 1460 is 1155
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1460 is 1155
9999 mem: storing 1155 in location 1452
 107 run: count <- add count, 1
9999 mem: location 1462 is 2
9999 mem: storing 3 in location 1462
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1462 is 3
9999 mem: location 1461 is 3
9999 mem: storing 1 in location 1463
 107 run: jump-if done?, 
9999 mem: location 1463 is 1
9998 run: jumping to instruction 31
 107 run: reply curr
9999 mem: location 1452 is 1155
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1155
9999 mem: location 1447 is 1096
9999 mem: storing 1155 in location 1096
 106 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1448 is 1164
9999 mem: location 1447 is 1096
9999 mem: location 1096 is 1155
9999 mem: storing 0 in location 1449
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1443
 106 run: jump-unless no-movement?, 1:offset
9999 mem: location 1449 is 0
9998 run: jumping to instruction 60
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1443
 106 run: reply editor:address:editor-data, go-render?:boolean
9999 mem: location 1431 is 1095
9999 mem: location 1443 is 1
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1095
9998 run: result 1 is 1
9999 mem: storing 1095 in location 1297
9999 mem: storing 1 in location 1302
 105 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1335
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1336
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1337
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1155
9999 mem: storing 1155 in location 1338
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1335 is 3
9998 run: jump-unless fell through
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1297 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1297 is 1095
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1316
 105 run: jump-unless *undo, 
9999 mem: location 1316 is 1104
9999 mem: location 1104 is 1390
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1316 is 1104
9999 mem: location 1104 is 1390
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1390 in location 1427
 106 run: result <- get *in, value:offset
9999 mem: location 1427 is 1390
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1390 is 1216
9999 mem: location 1391 is 0
9999 mem: location 1427 is 1390
9998 run: address to copy is 1390
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: <address : <operation : <>>>
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1390 is 1216
9999 mem: storing 1216 in location 1428
 106 run: reply result:_elem
9999 mem: location 1428 is 1216
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1216
9999 mem: storing 1216 in location 1315
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1315 is 1216
9999 mem: location 1216 is 1
9999 mem: location 1217 is 1
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1139
9999 mem: location 1220 is 1
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1164
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1315 is 1216
9999 mem: storing 1217 in location 1321
 105 run: jump-unless move, 
9999 mem: location 1321 is 1217
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1321 is 1217
9999 mem: location 1217 is 1
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1139
9999 mem: location 1220 is 1
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1164
9999 mem: location 1223 is 0
9999 mem: location 1321 is 1217
9998 run: address to copy is 1223
9998 run: its type is number
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1339
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1335 is 3
9999 mem: location 1339 is 0
9999 mem: storing 0 in location 1340
 105 run: jump-unless coalesce?, 
9999 mem: location 1340 is 0
9998 run: jumping to instruction 666
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1392 in location 1315
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1332 is 1
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1164
9999 mem: location 1336 is 1
9999 mem: location 1337 is 0
9999 mem: location 1338 is 1155
9999 mem: location 1335 is 3
9999 mem: location 1315 is 1392
9999 mem: location 1315 is 1392
9999 mem: storing 1 in location 1392
9999 mem: storing 1 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 1164 in location 1395
9999 mem: storing 1 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 1155 in location 1398
9999 mem: storing 3 in location 1399
 105 run: editor <- add-operation editor, op
9999 mem: location 1297 is 1095
9999 mem: location 1315 is 1392
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1255
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1392 in location 1256
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1390
9999 mem: location 1105 is 0
9999 mem: location 1255 is 1095
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1257
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1256 is 1392
9999 mem: location 1257 is 1104
9999 mem: location 1104 is 1390
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1392 in location 1211
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1390 in location 1212
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1464
9999 mem: storing 1464 in location 1213
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1213 is 1464
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1464 is 0
9999 mem: location 1465 is 0
9999 mem: location 1213 is 1464
9998 run: address to copy is 1464
9999 mem: storing 1464 in location 1214
 107 run: *val <- copy x
9999 mem: location 1211 is 1392
9999 mem: location 1214 is 1464
9999 mem: storing 1392 in location 1464
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1213 is 1464
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1464 is 1392
9999 mem: location 1465 is 0
9999 mem: location 1213 is 1464
9999 type: type deduced to be address$
9998 run: address to copy is 1465
9999 mem: storing 1465 in location 1215
 107 run: *next <- copy in
9999 mem: location 1212 is 1390
9999 mem: location 1215 is 1465
9999 mem: storing 1390 in location 1465
 107 run: reply result
9999 mem: location 1213 is 1464
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1464
9999 mem: location 1257 is 1104
9999 mem: storing 1464 in location 1104
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1255 is 1095
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1258
 106 run: *redo <- copy 0
9999 mem: location 1258 is 1105
9999 mem: storing 0 in location 1105
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1095
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1095
9999 mem: storing 1095 in location 1297
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1296 is 1009
9999 mem: location 1297 is 1095
9999 mem: location 1302 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1095
9998 run: result 2 is 1
9999 mem: storing 1009 in location 1268
9999 mem: storing 1095 in location 1270
9999 mem: storing 1 in location 1280
 104 run: jump-unless go-render?, 
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1268 is 1009
9999 mem: location 1270 is 1095
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1133
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1134
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1134 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1134 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1135
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1134 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1134 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1136
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1133 is 1009
9999 mem: location 1134 is 1095
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1184
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1095 in location 1185
 106 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1095
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1099
9998 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1186
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1427
 107 run: jump-unless sc, 
9999 mem: location 1427 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1427 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1427 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1428
 107 run: reply height
9999 mem: location 1428 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1187
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1100
9998 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1188
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1096
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1096 is 1155
9999 mem: storing 1155 in location 1189
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1189 is 1155
9999 mem: storing 1155 in location 1190
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1155
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1155
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1427 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1158
9999 mem: storing 1158 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1158
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1189
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1191
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1192
 106 run: column:number <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1194
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1195
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1164
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1196
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 1
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1158
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 0
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1199
 106 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 1
9998 run: jump-unless fell through
9990 schedule: render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 106 run: *before-cursor <- copy prev
9999 mem: location 1190 is 1155
9999 mem: location 1196 is 1098
9999 mem: storing 1155 in location 1098
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1189 is 1158
9998 run: address to copy is 1158
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1158 is 101
9999 mem: storing 101 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1466
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 101
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 101
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 101
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 101
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 101
  90 print-character: 101 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 101
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 10
9999 mem: storing 1035 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1035
9999 mem: location 1035 is 103
9999 mem: location 1036 is 7
9999 mem: location 1248 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 101
9999 mem: location 1249 is 1035
9999 mem: storing 101 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1035
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1248 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1158
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1158
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1427 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1161
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1155
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1155 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1155
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1155
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1155 is 100
9999 mem: location 1156 is 1158
9999 mem: location 1157 is 1152
9999 mem: location 1427 is 1155
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1156 is 1158
9999 mem: storing 1158 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1158
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1161
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 106 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1189 is 1161
9998 run: address to copy is 1161
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1161 is 102
9999 mem: storing 102 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 102
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 102
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 102
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 102
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 102
  90 print-character: 102 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 102
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 11
9999 mem: storing 1037 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1248 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 102
9999 mem: location 1249 is 1037
9999 mem: storing 102 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1037
9999 mem: location 1037 is 102
9999 mem: location 1038 is 7
9999 mem: location 1248 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1427 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1164
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1158
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1158 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1158
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1158
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 101
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1155
9999 mem: location 1427 is 1158
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1161
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: storing 1161 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1164
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 1
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1199
 106 run: jump-unless at-cursor?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1189 is 1164
9998 run: address to copy is 1164
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1164 is 10
9999 mem: storing 10 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 10
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1202
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1202 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 2
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 2 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 12
9999 mem: storing 1039 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1248 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1039
9999 mem: storing 32 in location 1039
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1248 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1040
9999 mem: storing 7 in location 1040
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 13
9999 mem: storing 1041 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1041
9999 mem: storing 32 in location 1041
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1042
9999 mem: storing 7 in location 1042
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 14
9999 mem: storing 1043 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1248 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1043
9999 mem: storing 32 in location 1043
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1248 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1044
9999 mem: storing 7 in location 1044
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1192 is 1
9999 mem: storing 2 in location 1192
 106 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 2
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1427 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1161 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1161 is 102
9999 mem: location 1162 is 1164
9999 mem: location 1163 is 1158
9999 mem: location 1427 is 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1162 is 1164
9999 mem: storing 1164 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1164
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1164
9999 mem: storing 1164 in location 1190
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1167
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1189 is 1167
9998 run: address to copy is 1167
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1167 is 103
9999 mem: storing 103 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 103
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 103
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
9990 schedule: get-color/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 103
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 103
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 103
  90 print-character: 103 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 103
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 103
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 20
9999 mem: storing 1055 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 104
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 103
9999 mem: location 1249 is 1055
9999 mem: storing 103 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1055
9999 mem: location 1055 is 103
9999 mem: location 1056 is 7
9999 mem: location 1248 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1056
9999 mem: storing 7 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1427 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1170
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1164
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1164 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1164
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1164
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1164 is 10
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1161
9999 mem: location 1427 is 1164
9999 type: type deduced to be character$
9998 run: address to copy is 1165
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1167
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1170
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 2
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1189 is 1170
9998 run: address to copy is 1170
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 10
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 21
9999 mem: storing 1057 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1057
9999 mem: storing 32 in location 1057
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1057
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1248 is 1057
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1058
9999 mem: storing 7 in location 1058
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 22
9999 mem: storing 1059 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1059
9999 mem: storing 32 in location 1059
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1059
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1248 is 1059
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1060
9999 mem: storing 7 in location 1060
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 23
9999 mem: storing 1061 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1061
9999 mem: storing 32 in location 1061
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1248 is 1061
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1062
9999 mem: storing 7 in location 1062
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1235 is 10
9999 mem: storing 20 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 20
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 24
9999 mem: storing 1063 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1248 is 1063
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1063
9999 mem: storing 32 in location 1063
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1248 is 1063
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1064
9999 mem: storing 7 in location 1064
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1192 is 2
9999 mem: storing 3 in location 1192
 106 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 3
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 3
9999 mem: location 1214 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1170
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1427 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1167 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1167 is 103
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1427 is 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1170
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: storing 1170 in location 1190
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1173
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 3
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1189 is 1173
9998 run: address to copy is 1173
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1173 is 104
9999 mem: storing 104 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 104
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 104
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 104
9999 mem: storing 0 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1193 is 0
9999 mem: location 1188 is 4
9999 mem: storing 0 in location 1203
 106 run: jump-unless at-right?, 
9999 mem: location 1203 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1184 is 1009
9999 mem: location 1200 is 104
9999 mem: location 1191 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 104
  90 print-character: 104 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 104
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1243
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 104
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 30
9999 mem: storing 1075 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1075
9999 mem: location 1075 is 105
9999 mem: location 1076 is 7
9999 mem: location 1248 is 1075
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 104
9999 mem: location 1249 is 1075
9999 mem: storing 104 in location 1075
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1075
9999 mem: location 1075 is 104
9999 mem: location 1076 is 7
9999 mem: location 1248 is 1075
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1076
9999 mem: storing 7 in location 1076
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1239 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1427 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1170 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1170
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1170
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1427 is 1170
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1190
 106 run: column <- add column, 1
9999 mem: location 1193 is 0
9999 mem: storing 1 in location 1193
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 3
9999 mem: location 1187 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1189 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1189 is 1176
9998 run: address to copy is 1176
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1176 is 10
9999 mem: storing 10 in location 1200
 106 run: color <- get-color color, c
9999 mem: location 1191 is 7
9999 mem: location 1200 is 10
9999 trace: incrementing callstack depth to 6
9990 schedule: get-color/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1468
 107 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1469
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1468 is 7
9999 mem: storing 1 in location 1470
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1469 is 10
9999 mem: storing 0 in location 1471
 107 run: jump-unless starting-comment?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1472
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1469 is 10
9999 mem: storing 0 in location 1474
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1474 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1468 is 7
9999 mem: storing 0 in location 1475
 107 run: jump-unless color-is-red?, 
9999 mem: location 1475 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1468 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1191
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1200 is 10
9999 mem: storing 1 in location 1201
 106 run: jump-unless newline?, 
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1198 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1184 is 1009
9999 mem: location 1193 is 1
9999 mem: location 1188 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 31
9999 mem: storing 1077 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1248 is 1077
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1077
9999 mem: storing 32 in location 1077
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1077
9999 mem: location 1077 is 32
9999 mem: location 1078 is 7
9999 mem: location 1248 is 1077
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1078
9999 mem: storing 7 in location 1078
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1239 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 32
9999 mem: storing 1079 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1248 is 1079
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1079
9999 mem: storing 32 in location 1079
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1079
9999 mem: location 1079 is 32
9999 mem: location 1080 is 7
9999 mem: location 1248 is 1079
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1080
9999 mem: storing 7 in location 1080
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1239 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 33
9999 mem: storing 1081 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1248 is 1081
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1081
9999 mem: storing 32 in location 1081
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1248 is 1081
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1082
9999 mem: storing 7 in location 1082
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1240
 108 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1235 is 10
9999 mem: storing 30 in location 1243
 108 run: index <- add index, *column
9999 mem: location 1243 is 30
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1243
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 108 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 40 in location 1245
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 34
9999 mem: storing 1083 in location 1248
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1248 is 1083
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1249
 108 run: *cursor-contents <- copy c
9999 mem: location 1230 is 32
9999 mem: location 1249 is 1083
9999 mem: storing 32 in location 1083
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1248 is 1083
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1250
 108 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1084
9999 mem: storing 7 in location 1084
 108 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 108 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1239 is 1012
9999 mem: storing 5 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1192 is 3
9999 mem: storing 4 in location 1192
 106 run: column <- copy left
9999 mem: location 1186 is 0
9999 mem: storing 0 in location 1193
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1184 is 1009
9999 mem: location 1192 is 4
9999 mem: location 1193 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 4
9999 mem: location 1214 is 1011
9999 mem: storing 4 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1184
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1189 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 10
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1427 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1189
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1190 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1427
 107 run: jump-if in, 1:offset
9999 mem: location 1427 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1427 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 104
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1427 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1428
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1428 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1190
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1189 is 1179
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1192 is 4
9999 mem: location 1187 is 4
9999 mem: storing 1 in location 1197
 106 run: jump-if off-screen?, 
9999 mem: location 1197 is 1
9998 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1185 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1155
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1185 is 1095
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1204
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1189 is 1179
9999 mem: location 1204 is 1097
9999 mem: storing 1179 in location 1097
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1192 is 4
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1198
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1193 is 0
9999 mem: location 1195 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1205
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1198 is 0
9999 mem: location 1205 is 1
9999 mem: storing 0 in location 1206
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1192 is 4
9999 mem: location 1194 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1207
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1208
 106 run: jump-unless before-cursor?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1192 is 4
9999 mem: location 1193 is 0
9999 mem: location 1184 is 1009
9999 mem: location 1185 is 1095
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1137
9999 mem: storing 0 in location 1138
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1133 is 1009
9999 mem: location 1138 is 0
9999 mem: location 1136 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1256
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 0
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 0
9999 mem: storing 1 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 106 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1137 is 4
9999 mem: storing 5 in location 1137
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1133 is 1009
9999 mem: location 1137 is 5
9999 mem: location 1135 is 0
9999 mem: location 1136 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1283
 106 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1284
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1285
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1286
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1287
9999 mem: storing 1 in location 1288
 106 run: jump-if style-found?, 
9999 mem: location 1288 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 106 run: jump-if color-found?, 
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1289
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
 106 run: jump-if bg-color-found?, 
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1291
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1283 is 1009
9999 mem: location 1284 is 5
9999 mem: location 1285 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1212
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 107 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 107 run: *row <- copy new-row
9999 mem: location 1212 is 5
9999 mem: location 1214 is 1011
9999 mem: storing 5 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 107 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1283
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 0
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 1
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 1
9999 mem: storing 2 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 2
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 2
9999 mem: storing 3 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 3
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 4
9999 mem: location 1286 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1283 is 1009
9999 mem: location 1287 is 9480
9999 mem: location 1289 is 245
9999 mem: location 1291 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1231
9999 mem: storing 1 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 1 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 107 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1285 is 5
9999 mem: location 1286 is 4
9999 mem: storing 0 in location 1293
 106 run: jump-unless continue?, 
9999 mem: location 1293 is 0
9998 run: jumping to instruction 27
9999 trace: fall-through: exiting draw-horizontal; decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1137 is 5
9999 mem: storing 6 in location 1137
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1133 is 1009
9999 mem: location 1137 is 6
9999 mem: location 1135 is 0
9999 mem: location 1135 is 0
9999 mem: location 1136 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 106 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1212
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1214
 106 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1215
 106 run: jump-if screen, 
9999 mem: location 1211 is 1009
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1211 is 1009
9999 mem: location 1212 is 6
9999 mem: location 1213 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1406
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1407
 107 run: jump-unless sc, 
9999 mem: location 1405 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1408
 107 run: *row <- copy new-row
9999 mem: location 1406 is 6
9999 mem: location 1408 is 1011
9999 mem: storing 6 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1409
 107 run: *column <- copy new-column
9999 mem: location 1407 is 0
9999 mem: location 1409 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1405 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1211
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1211 is 1009
9999 mem: location 1213 is 0
9999 mem: location 1215 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1255
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1256
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1257
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 0
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 0
9999 mem: storing 1 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 1
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 4
9999 mem: location 1257 is 4
9999 mem: storing 0 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1255 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1230
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 108 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 108 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 108 run: trace 90, [print-character], c
9999 mem: location 1230 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1229 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1236
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1238
 108 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 108 run: reply sc
9999 mem: location 1229 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1256 is 4
9999 mem: storing 5 in location 1256
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1256 is 5
9999 mem: location 1257 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if done?, 
9999 mem: location 1258 is 1
9998 run: jumping to instruction 10
9999 trace: fall-through: exiting clear-line-delimited; decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1211 is 1009
9999 mem: location 1212 is 6
9999 mem: location 1214 is 0
9999 mem: location 1215 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1412
 107 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1413
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1414
 107 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1415
 107 run: row <- add row, 1
9999 mem: location 1413 is 6
9999 mem: storing 7 in location 1413
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1412 is 1009
9999 mem: location 1413 is 7
9999 mem: location 1414 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1405
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 7 in location 1406
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1407
 108 run: jump-unless sc, 
9999 mem: location 1405 is 1009
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1408
 108 run: *row <- copy new-row
9999 mem: location 1406 is 7
9999 mem: location 1408 is 1011
9999 mem: storing 7 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1405 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1405 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1409
 108 run: *column <- copy new-column
9999 mem: location 1407 is 0
9999 mem: location 1409 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1405 is 1009
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1412
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1412 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1427
 108 run: jump-unless sc, 
9999 mem: location 1427 is 1009
9998 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1427 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1427 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1428
 108 run: reply height
9999 mem: location 1428 is 4
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1416
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1413 is 7
9999 mem: location 1416 is 4
9999 mem: storing 1 in location 1417
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1417 is 1
9998 run: jumping to instruction 15
9999 trace: fall-through: exiting clear-rest-of-screen; decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 5
9999 trace: fall-through: exiting editor-render; decrementing callstack depth from 4
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 1179
9999 mem: location 1098 is 1155
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1271
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1270 is 1095
9999 mem: location 1095 is 1139
9999 mem: location 1096 is 1155
9999 mem: location 1097 is 1179
9999 mem: location 1098 is 1155
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1103 is 1
9999 mem: location 1104 is 1464
9999 mem: location 1105 is 0
9999 mem: location 1270 is 1095
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1272
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1268 is 1009
9999 mem: location 1271 is 1
9999 mem: location 1272 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1213
 105 run: jump-unless sc, 
9999 mem: location 1211 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 105 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 105 run: *column <- copy new-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1268
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1269 is 1423
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1423 in location 1283
 105 run: jump-unless x, 
9999 mem: location 1283 is 1423
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1423
9999 mem: location 1423 is 1
9999 mem: location 1424 is 1418
9999 mem: location 1283 is 1423
9998 run: address to copy is 1423
9999 mem: storing 1423 in location 1284
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1423
9999 mem: location 1423 is 1
9999 mem: location 1424 is 1418
9999 mem: location 1283 is 1423
9998 run: address to copy is 1424
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1424 is 1418
9999 mem: storing 1418 in location 1285
 105 run: max:number <- length *buf
9999 mem: location 1285 is 1418
9999 mem: storing 1 in location 1286
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1423
9999 mem: location 1423 is 1
9999 mem: location 1286 is 1
9999 mem: storing 1 in location 1287
 105 run: jump-unless done?, 
9999 mem: location 1287 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1425 in location 1288
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1288 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: location 1427 is 0
9999 mem: location 1428 is 0
9999 mem: location 1283 is 1423
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1423
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1423 in location 1269
9999 mem: storing 1 in location 1277
9999 mem: storing 1 in location 1278
 104 run: jump-unless found?, 
9999 mem: location 1277 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1278 is 1
9998 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1002; decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .ef        .
    .g         .
    .h         .
  ]
9999 trace: fall-through: exiting scenario-editor-scrolls-up-past-wrapped-line-using-arrow-keys; decrementing callstack depth from 1
