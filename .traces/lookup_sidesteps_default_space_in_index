9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   product: {"12": "number"}
9992 load: after rewriting: 12:number <- copy 2
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   product: {"13": "number"}
9992 load: after rewriting: 13:number <- copy 34
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"35": "literal"}
9993 parse:   product: {"14": "number"}
9992 load: after rewriting: 14:number <- copy 35
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"5": "literal"}
9993 parse:   product: {"1000": "number"}
9992 load: after rewriting: 1000:number <- copy 5
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1000": "literal", "unsafe": <>}
9993 parse:   product: {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 load: after rewriting: default-space:address:array:location <- copy 1000/unsafe
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"12": "literal", "unsafe": <>}
9993 parse:   product: {"1": <"address" : <"array" : <"number" : <>>>>}
9992 load: after rewriting: 1:address:array:number <- copy 12/unsafe
9993 parse: instruction: index
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": <"address" : <"array" : <"number" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"9": "number", "raw": <>}
9992 load: after rewriting: 9:number/raw <- index *1:address:array:number, 1
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: default-space => <address : <array : <number : <>>>>
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: index ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 12:number <- copy 2
9999 mem: storing 2 in location 12
 102 run: 13:number <- copy 34
9999 mem: storing 34 in location 13
 102 run: 14:number <- copy 35
9999 mem: storing 35 in location 14
 102 run: 1000:number <- copy 5
9999 mem: storing 5 in location 1000
 102 run: default-space:address:array:location <- copy 1000/unsafe
 102 run: 1:address:array:number <- copy 12/unsafe
9999 mem: storing 12 in location 1002
 102 run: 9:number/raw <- index *1:address:array:number, 1
9999 mem: location 1002 is 12
9998 run: address to copy is 14
9998 run: its type is number
9999 mem: location 14 is 35
9999 mem: storing 35 in location 9
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
