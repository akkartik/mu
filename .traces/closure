parse: instruction: new
parse:   ingredient: {name: "location", value: 0, type: 0, properties: ["location": "type"]}
parse:   ingredient: {name: "30", value: 0, type: 0, properties: ["30": "literal"]}
parse:   product: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]}
parse: instruction: init-counter
parse:   product: {name: "1", value: 0, type: 2-5-1, properties: ["1": "address":"array":"location", "names": "init-counter"]}
parse: instruction: increment-counter
parse:   ingredient: {name: "1", value: 0, type: 2-5-1, properties: ["1": "address":"array":"location", "names": "init-counter"]}
parse:   product: {name: "2", value: 0, type: 1, properties: ["2": "number", "raw": ]}
parse: instruction: increment-counter
parse:   ingredient: {name: "1", value: 0, type: 2-5-1, properties: ["1": "address":"array":"location", "names": "init-counter"]}
parse:   product: {name: "3", value: 0, type: 1, properties: ["3": "number", "raw": ]}
parse: instruction: new
parse:   ingredient: {name: "location", value: 0, type: 0, properties: ["location": "type"]}
parse:   ingredient: {name: "30", value: 0, type: 0, properties: ["30": "literal"]}
parse:   product: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]}
parse: instruction: copy
parse:   ingredient: {name: "23", value: 0, type: 0, properties: ["23": "literal"]}
parse:   product: {name: "x", value: 0, type: 1, properties: ["x": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "3", value: 0, type: 0, properties: ["3": "literal"]}
parse:   product: {name: "y", value: 0, type: 1, properties: ["y": "number"]}
parse: instruction: reply
parse:   ingredient: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]}
parse: instruction: new
parse:   ingredient: {name: "space", value: 0, type: 0, properties: ["space": "literal"]}
parse:   ingredient: {name: "30", value: 0, type: 0, properties: ["30": "literal"]}
parse:   product: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]}
parse: instruction: next-ingredient
parse:   product: {name: "0", value: 0, type: 2-5-1, properties: ["0": "address":"array":"location", "names": "init-counter"]}
parse: instruction: add
parse:   ingredient: {name: "y", value: 0, type: 1, properties: ["y": "number", "space": "1"]}
parse:   ingredient: {name: "1", value: 0, type: 0, properties: ["1": "literal"]}
parse:   product: {name: "y", value: 0, type: 1, properties: ["y": "number", "space": "1"]}
parse: instruction: copy
parse:   ingredient: {name: "234", value: 0, type: 0, properties: ["234": "literal"]}
parse:   product: {name: "y", value: 0, type: 1, properties: ["y": "number"]}
parse: instruction: reply
parse:   ingredient: {name: "y", value: 0, type: 1, properties: ["y": "number", "space": "1"]}
name: recipe increment-counter is surrounded by init-counter
new: location -> 1
new: location -> 1
name: assign x 1
name: assign y 2
new: space -> 0
name: assign y 1
after-brace: recipe main
after-brace: new ...
after-brace: init-counter ...
after-brace: increment-counter ...
after-brace: increment-counter ...
after-brace: recipe init-counter
after-brace: new ...
after-brace: copy ...
after-brace: copy ...
after-brace: reply ...
after-brace: recipe increment-counter
after-brace: new ...
after-brace: next-ingredient ...
after-brace: add ...
after-brace: copy ...
after-brace: reply ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1000
run: product 0 is default-space
run: instruction main/1
run: {name: "1", value: 1, type: 2-5-1, properties: ["1": "address":"array":"location", "names": "init-counter"]} <- init-counter/1001 
run: instruction init-counter/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is location
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1031
run: product 0 is default-space
run: instruction init-counter/1
run: {name: "x", value: 1, type: 1, properties: ["x": "number"]} <- copy/1 {name: "23", value: 23, type: 0, properties: ["23": "literal"]}
run: ingredient 0 is 23
run: product 0 is x
mem: storing 23 in location 1033
run: instruction init-counter/2
run: {name: "y", value: 2, type: 1, properties: ["y": "number"]} <- copy/1 {name: "3", value: 3, type: 0, properties: ["3": "literal"]}
run: ingredient 0 is 3
run: product 0 is y
mem: storing 3 in location 1034
run: instruction init-counter/3
run: reply/37 {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]}
run: ingredient 0 is default-space
run: result 0 is 1031
run: product 0 is 1
mem: storing 1031 in location 1002
run: instruction main/2
run: {name: "2", value: 2, type: 1, properties: ["2": "number", "raw": ]} <- increment-counter/1002 {name: "1", value: 1, type: 2-5-1, properties: ["1": "address":"array":"location", "names": "init-counter"]}
run: ingredient 0 is 1
mem: location 1002 is 1031
run: instruction increment-counter/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "space", value: 0, type: 0, properties: ["space": "literal"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is space
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1062
run: product 0 is default-space
run: instruction increment-counter/1
run: {name: "0", value: 0, type: 2-5-1, properties: ["0": "address":"array":"location", "names": "init-counter"]} <- next-ingredient/34 
run: product 0 is 0
mem: storing 1031 in location 1063
run: instruction increment-counter/2
run: {name: "y", value: 2, type: 1, properties: ["y": "number", "space": "1"]} <- add/2 {name: "y", value: 2, type: 1, properties: ["y": "number", "space": "1"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is y
mem: location 1034 is 3
run: ingredient 1 is 1
run: product 0 is y
mem: storing 4 in location 1034
run: instruction increment-counter/3
run: {name: "y", value: 1, type: 1, properties: ["y": "number"]} <- copy/1 {name: "234", value: 234, type: 0, properties: ["234": "literal"]}
run: ingredient 0 is 234
run: product 0 is y
mem: storing 234 in location 1064
run: instruction increment-counter/4
run: reply/37 {name: "y", value: 2, type: 1, properties: ["y": "number", "space": "1"]}
run: ingredient 0 is y
mem: location 1034 is 4
run: result 0 is 4
run: product 0 is 2
mem: storing 4 in location 2
run: instruction main/3
run: {name: "3", value: 3, type: 1, properties: ["3": "number", "raw": ]} <- increment-counter/1002 {name: "1", value: 1, type: 2-5-1, properties: ["1": "address":"array":"location", "names": "init-counter"]}
run: ingredient 0 is 1
mem: location 1002 is 1031
run: instruction increment-counter/0
run: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/52 {name: "space", value: 0, type: 0, properties: ["space": "literal"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run: ingredient 0 is space
run: ingredient 1 is 30
mem: array size is 30
mem: new alloc: 1093
run: product 0 is default-space
run: instruction increment-counter/1
run: {name: "0", value: 0, type: 2-5-1, properties: ["0": "address":"array":"location", "names": "init-counter"]} <- next-ingredient/34 
run: product 0 is 0
mem: storing 1031 in location 1094
run: instruction increment-counter/2
run: {name: "y", value: 2, type: 1, properties: ["y": "number", "space": "1"]} <- add/2 {name: "y", value: 2, type: 1, properties: ["y": "number", "space": "1"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run: ingredient 0 is y
mem: location 1034 is 4
run: ingredient 1 is 1
run: product 0 is y
mem: storing 5 in location 1034
run: instruction increment-counter/3
run: {name: "y", value: 1, type: 1, properties: ["y": "number"]} <- copy/1 {name: "234", value: 234, type: 0, properties: ["234": "literal"]}
run: ingredient 0 is 234
run: product 0 is y
mem: storing 234 in location 1095
run: instruction increment-counter/4
run: reply/37 {name: "y", value: 2, type: 1, properties: ["y": "number", "space": "1"]}
run: ingredient 0 is y
mem: location 1034 is 5
run: result 0 is 5
run: product 0 is 3
mem: storing 5 in location 3
