9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"location": "type"}
9993 parse:   ingredient: {"30": "literal"}
9993 parse:   product: {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 load: after rewriting: default-space:address:array:location <- new location:type, 30
9993 parse: instruction: new-counter
9993 parse:   number of ingredients: 0
9993 parse:   product: {"1": <"address" : <"array" : <"location" : <>>>>, "names": "new-counter"}
9992 load: after rewriting: 1:address:array:location/names:new-counter <- new-counter 
9993 parse: instruction: increment-counter
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": <"address" : <"array" : <"location" : <>>>>, "names": "new-counter"}
9993 parse:   product: {"2": "number", "raw": <>}
9992 load: after rewriting: 2:number/raw <- increment-counter 1:address:array:location/names:new-counter
9993 parse: instruction: increment-counter
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": <"address" : <"array" : <"location" : <>>>>, "names": "new-counter"}
9993 parse:   product: {"3": "number", "raw": <>}
9992 load: after rewriting: 3:number/raw <- increment-counter 1:address:array:location/names:new-counter
9999 parse: recipe main has a header
9991 parse: --- defining new-counter
9993 parse: instruction: new
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"location": "type"}
9993 parse:   ingredient: {"30": "literal"}
9993 parse:   product: {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 load: after rewriting: default-space:address:array:location <- new location:type, 30
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"23": "literal"}
9993 parse:   product: {"x": "number"}
9992 load: after rewriting: x:number <- copy 23
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   product: {"y": "number"}
9992 load: after rewriting: y:number <- copy 3
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 load: after rewriting: reply default-space:address:array:location
9991 parse: --- defining increment-counter
9993 parse: instruction: new
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"location": "type"}
9993 parse:   ingredient: {"30": "literal"}
9993 parse:   product: {"default-space": <"address" : <"array" : <"location" : <>>>>}
9992 load: after rewriting: default-space:address:array:location <- new location:type, 30
9993 parse: instruction: next-ingredient
9993 parse:   number of ingredients: 0
9993 parse:   product: {"0": <"address" : <"array" : <"location" : <>>>>, "names": "new-counter"}
9992 load: after rewriting: 0:address:array:location/names:new-counter <- next-ingredient 
9993 parse: instruction: add
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"y": "number", "space": "1"}
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"y": "number", "space": "1"}
9992 load: after rewriting: y:number/space:1 <- add y:number/space:1, 1
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"234": "literal"}
9993 parse:   product: {"y": "number"}
9992 load: after rewriting: y:number <- copy 234
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"y": "number", "space": "1"}
9992 load: after rewriting: reply y:number/space:1
9990 transform: === transform_all()
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- resolve ambiguous calls for recipe new-counter
9991 transform: --- resolve ambiguous calls for recipe increment-counter
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- collect surrounding spaces for recipe new-counter
9991 transform: --- collect surrounding spaces for recipe increment-counter
9993 name: lexically surrounding space for recipe increment-counter comes from new-counter
9991 transform: --- transform names for recipe main
9999 new: location -> location
9991 transform: --- transform names for recipe new-counter
9999 new: location -> location
9993 name: assign x 1
9993 name: assign y 2
9991 transform: --- transform names for recipe increment-counter
9999 new: location -> location
9993 name: assign y 1
9991 transform: --- transform braces for recipe main
9991 transform: new ...
9991 transform: new-counter ...
9991 transform: increment-counter ...
9991 transform: increment-counter ...
9991 transform: --- transform braces for recipe new-counter
9991 transform: new ...
9991 transform: copy ...
9991 transform: copy ...
9991 transform: reply ...
9991 transform: --- transform braces for recipe increment-counter
9991 transform: new ...
9991 transform: next-ingredient ...
9991 transform: add ...
9991 transform: copy ...
9991 transform: reply ...
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- compute instruction operations for recipe new-counter
9991 transform: --- compute instruction operations for recipe increment-counter
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: default-space:address:array:location <- new location:type, 30
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: 1:address:array:location/names:new-counter <- new-counter 
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, 30
9999 mem: array size is 30
9999 mem: new alloc: 1031
 103 run: x:number <- copy 23
9999 mem: storing 23 in location 1033
 103 run: y:number <- copy 3
9999 mem: storing 3 in location 1034
 103 run: reply default-space:address:array:location
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1031
9999 mem: storing 1031 in location 1002
 102 run: 2:number/raw <- increment-counter 1:address:array:location/names:new-counter
9999 mem: location 1002 is 1031
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, 30
9999 mem: array size is 30
9999 mem: new alloc: 1062
 103 run: 0:address:array:location/names:new-counter <- next-ingredient 
9999 mem: storing 1031 in location 1063
 103 run: y:number/space:1 <- add y:number/space:1, 1
9999 mem: location 1034 is 3
9999 mem: storing 4 in location 1034
 103 run: y:number <- copy 234
9999 mem: storing 234 in location 1064
 103 run: reply y:number/space:1
9999 mem: location 1034 is 4
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 4
9999 mem: storing 4 in location 2
 102 run: 3:number/raw <- increment-counter 1:address:array:location/names:new-counter
9999 mem: location 1002 is 1031
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, 30
9999 mem: array size is 30
9999 mem: new alloc: 1093
 103 run: 0:address:array:location/names:new-counter <- next-ingredient 
9999 mem: storing 1031 in location 1094
 103 run: y:number/space:1 <- add y:number/space:1, 1
9999 mem: location 1034 is 4
9999 mem: storing 5 in location 1034
 103 run: y:number <- copy 234
9999 mem: storing 234 in location 1095
 103 run: reply y:number/space:1
9999 mem: location 1034 is 5
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 5
9999 mem: storing 5 in location 3
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
