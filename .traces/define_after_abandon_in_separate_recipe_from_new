9991 parse: --- defining test
9993 parse: instruction: test-new
9993 parse:   number of ingredients: 0
9993 parse:   product: {"x": <"address" : <"number" : <>>>}
9992 load: after rewriting: x:address:number <- test-new 
9993 parse: instruction: test-abandon
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9992 load: after rewriting: test-abandon x
9993 parse: instruction: test-new
9993 parse:   number of ingredients: 0
9993 parse:   product: {"x": <>}
9992 load: after rewriting: x <- test-new 
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9992 load: after rewriting: reply x
9999 parse: recipe has a header; parsing
9999 parse: header product: result:address:number
9991 parse: --- defining test-new
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"number": "type"}
9993 parse:   product: {"result": <>}
9992 load: after rewriting: result <- new number:type
9999 parse: recipe test-new has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:address:number
9991 parse: --- defining test-abandon
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: abandon
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"x": <>}
9992 load: after rewriting: abandon x
9999 parse: recipe test-abandon has a header
9990 transform: === transform_all()
9991 transform: --- checking reply instructions against header for test-new
9991 transform: --- fill in reply ingredients from header for recipe test-new
9991 transform: --- fill in reply ingredients from header for recipe test-abandon
9991 transform: --- deduce types for recipe test
9992 transform: x => <address : <number : <>>>
9992 transform: x <= <address : <number : <>>>
9992 transform: x <= <address : <number : <>>>
9992 transform: x <= <address : <number : <>>>
9991 transform: --- deduce types for recipe test-new
9992 transform: result => <address : <number : <>>>
9991 transform: --- deduce types for recipe test-abandon
9992 transform: x => <address : <number : <>>>
9992 transform: x <= <address : <number : <>>>
9991 transform: --- deduce types from header for test-new
9993 transform: type of result is <address : <number : <>>>
9992 transform: instruction: result <- new number:type
9993 transform:   product: result: NULLNULLNULL -- {"result": <>}
9993 transform: type of result is <address : <number : <>>>
9992 transform: instruction: reply result:address:number
9991 transform: --- collect surrounding spaces for recipe test
9991 transform: --- collect surrounding spaces for recipe test-new
9991 transform: --- collect surrounding spaces for recipe test-abandon
9991 transform: --- transform names for recipe test
9993 name: assign x 1
9991 transform: --- transform names for recipe test-new
9993 name: assign result 1
9991 transform: --- transform names for recipe test-abandon
9993 name: assign x 1
9991 transform: --- resolve ambiguous calls for recipe test
9992 transform: instruction test-new
9993 transform: strict match: product 0
9992 transform: score for base: 1000
9992 transform: score for variant 0: -1
9993 transform: strict match: product 0
9992 transform: score for variant 1: 1000
9992 transform: instruction test-abandon
9993 transform: strict match: ingredient 0
9992 transform: score for base: 1000
9992 transform: score for variant 0: -1
9993 transform: strict match: ingredient 0
9992 transform: score for variant 1: 1000
9992 transform: instruction test-new
9993 transform: strict match: product 0
9992 transform: score for base: 1000
9992 transform: score for variant 0: -1
9993 transform: strict match: product 0
9992 transform: score for variant 1: 1000
9991 transform: --- resolve ambiguous calls for recipe test-new
9991 transform: --- resolve ambiguous calls for recipe test-abandon
9991 transform: --- compute instruction operations for recipe test
9991 transform: --- compute instruction operations for recipe test-new
9991 transform: --- compute instruction operations for recipe test-abandon
9991 transform: --- transform braces for recipe test
9992 transform: test-new ...
9992 transform: test-abandon ...
9992 transform: test-new ...
9992 transform: reply ...
9991 transform: --- transform braces for recipe test-new
9992 transform: new ...
9992 transform:  ...
9991 transform: --- transform braces for recipe test-abandon
9992 transform:  ...
9992 transform: abandon ...
9992 transform:  ...
9991 transform: --- perform checks for recipe test
9991 transform: --- perform checks for recipe test-new
9991 transform: --- perform checks for recipe test-abandon
9991 transform: --- convert 'new' to 'allocate' for recipe test
9991 transform: --- convert 'new' to 'allocate' for recipe test-new
9992 new: size of "number" is 1
9991 transform: --- convert 'new' to 'allocate' for recipe test-abandon
9991 transform: --- checking reply instructions against header for test-new
9991 transform: --- parsing any uninitialized reagents as integers
