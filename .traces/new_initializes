parse: instruction: new
parse:   ingredient: {name: "number", value: 0, type: 0, properties: ["number": "type"]}
parse:   product: {name: "1", value: 0, type: 2-1, properties: ["1": "address":"number"]}
parse: instruction: copy
parse:   ingredient: {name: "1", value: 0, type: 2-1, properties: ["1": "address":"number", "deref": ]}
parse:   product: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
new: number -> 1
after-brace: recipe main
after-brace: new ...
after-brace: copy ...
new: routine allocated memory from 10 to 100010
schedule: main
run: instruction main/0
run: {name: "1", value: 1, type: 2-1, properties: ["1": "address":"number"]} <- new/52 {name: "number", value: 1, type: 0, properties: ["number": "type"]}
run: ingredient 0 is number
mem: new alloc: 10
run: product 0 is 1
mem: storing 10 in location 1
run: instruction main/1
run: {name: "2", value: 2, type: 1, properties: ["2": "number"]} <- copy/1 {name: "1", value: 1, type: 2-1, properties: ["1": "address":"number", "deref": ]}
run: ingredient 0 is 1
mem: location 1 is 10
mem: location 10 is 0
run: product 0 is 2
mem: storing 0 in location 2
