9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"number": "type"}
9993 parse:   product: {"1": <"address" : <"number" : <>>>}
9992 load: after rewriting: 1:address:number <- new number:type
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"*1": <"address" : <"number" : <>>>, "lookup": <>}
9993 parse:   product: {"2": "number"}
9992 load: after rewriting: 2:number <- copy *1:address:number
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9999 new: number -> number
9991 transform: --- transform braces for recipe main
9992 transform: new ...
9992 transform: copy ...
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 10 to 100010
9990 schedule: main
 102 run: 1:address:number <- new number:type
9999 mem: new alloc: 10
9999 mem: storing 10 in location 1
 102 run: 2:number <- copy *1:address:number
9999 mem: location 1 is 10
9999 mem: location 10 is 0
9999 mem: storing 0 in location 2
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
