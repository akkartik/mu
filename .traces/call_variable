9999 parse: instruction: copy
9999 parse:   ingredient: {"f": "recipe"}
9999 parse:   product: {"1": "recipe-ordinal"}
9999 parse: instruction: call
9999 parse:   ingredient: {"1": "recipe-ordinal"}
9999 parse:   ingredient: {"34": "literal"}
9999 parse:   product: {"2": "number"}
9999 parse: instruction: next-ingredient
9999 parse:   product: {"3": "number"}
9999 parse: instruction: reply
9999 parse:   ingredient: {"3": "number"}
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: call ...
9999 after-brace: recipe f
9999 after-brace: next-ingredient ...
9999 after-brace: reply ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 1:recipe-ordinal <- copy f:recipe
9999 mem: storing 1000 in location 1
 102 run: 2:number <- call 1:recipe-ordinal, 34
9999 mem: location 1 is 1000
9999 trace: indirect 'call': incrementing callstack depth to 2
 103 run: 3:number <- next-ingredient 
9999 mem: storing 34 in location 3
 103 run: reply 3:number
9999 mem: location 3 is 34
9999 trace: reply: decrementing callstack depth from 2
9999 run: result 0 is 34
9999 mem: storing 34 in location 2
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
