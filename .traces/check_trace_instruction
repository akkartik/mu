9991 load: --- defining scenario-check_trace_instruction
9993 parse: instruction: run
9993 parse:   ingredient: {"\n    trace 1, [foo], [aaa]\n  ": "literal-string"}
9992 load: after rewriting: run [
    trace 1, [foo], [aaa]
  ]
9993 parse: instruction: trace-should-contain
9993 parse:   ingredient: {"\n    foo: aaa\n  ": "literal-string"}
9992 load: after rewriting: trace-should-contain [
    foo: aaa
  ]
9990 transform: === transform_all()
9991 transform: --- transform names for recipe scenario-check_trace_instruction
9991 transform: --- transform braces for recipe scenario-check_trace_instruction
9991 transform: run ...
9991 transform: trace-should-contain ...
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-check_trace_instruction
 102 run: run [
    trace 1, [foo], [aaa]
  ]
9991 load: --- defining run1001
9993 parse: instruction: trace
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"foo": "literal-string"}
9993 parse:   ingredient: {"aaa": "literal-string"}
9992 load: after rewriting: trace 1, [foo], [aaa]
9990 transform: === transform_all()
9991 transform: --- transform names for recipe run1001
9991 transform: --- transform braces for recipe run1001
9991 transform: trace ...
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: run: incrementing callstack depth to 2
 103 run: trace 1, [foo], [aaa]
   1 foo: aaa 
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: trace-should-contain [
    foo: aaa
  ]
9999 trace: fall-through: exiting scenario-check_trace_instruction; decrementing callstack depth from 1
