9991 parse: --- defining scenario-check_trace_instruction
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    trace 1, [foo], [aaa]\n  ": "literal-string"}
9992 load: after rewriting: run [
    trace 1, [foo], [aaa]
  ]
9993 parse: instruction: trace-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    foo: aaa\n  ": "literal-string"}
9992 load: after rewriting: trace-should-contain [
    foo: aaa
  ]
9999 parse: recipe scenario-check_trace_instruction has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-check_trace_instruction
9991 transform: --- deduce types for recipe scenario-check_trace_instruction
9991 transform: --- collect surrounding spaces for recipe scenario-check_trace_instruction
9991 transform: --- transform names for recipe scenario-check_trace_instruction
9991 transform: --- resolve ambiguous calls for recipe scenario-check_trace_instruction
9991 transform: --- compute instruction operations for recipe scenario-check_trace_instruction
9991 transform: --- transform braces for recipe scenario-check_trace_instruction
9992 transform: run ...
9992 transform: trace-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario-check_trace_instruction
9991 transform: --- type-check calls inside recipe scenario-check_trace_instruction
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-check_trace_instruction
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-check_trace_instruction
 102 run: run [
    trace 1, [foo], [aaa]
  ]
9991 parse: --- defining run1001
9993 parse: instruction: trace
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"foo": "literal-string"}
9993 parse:   ingredient: {"aaa": "literal-string"}
9992 load: after rewriting: trace 1, [foo], [aaa]
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: trace ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: trace 1, [foo], [aaa]
   1 foo: aaa 
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: trace-should-contain [
    foo: aaa
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
