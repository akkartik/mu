9991 parse: --- defining scenario_trim-left-right
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    1:address:shared:array:character <- new [  abc   ]\n    2:address:shared:array:character <- trim 1:address:shared:array:character\n    3:array:character <- copy *2:address:shared:array:character\n  ": "literal-string"}
9992 load: after rewriting: run [
    1:address:shared:array:character <- new [  abc   ]
    2:address:shared:array:character <- trim 1:address:shared:array:character
    3:array:character <- copy *2:address:shared:array:character
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3:array:character <- [abc]\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3:array:character <- [abc]
  ]
9999 parse: recipe scenario_trim-left-right has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_trim-left-right
9991 transform: --- deduce types for recipe scenario_trim-left-right
9991 transform: --- collect surrounding spaces for recipe scenario_trim-left-right
9991 transform: --- transform names for recipe scenario_trim-left-right
9991 transform: --- resolve ambiguous calls for recipe scenario_trim-left-right
9991 transform: --- compute instruction operations for recipe scenario_trim-left-right
9991 transform: --- transform braces for recipe scenario_trim-left-right
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_trim-left-right
9991 transform: --- type-check 'call' instructions inside recipe scenario_trim-left-right
9991 transform: --- type-check calls inside recipe scenario_trim-left-right
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_trim-left-right
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_trim-left-right
 102 run: run [
    1:address:shared:array:character <- new [  abc   ]
    2:address:shared:array:character <- trim 1:address:shared:array:character
    3:array:character <- copy *2:address:shared:array:character
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"  abc   ": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [  abc   ]
9993 parse: instruction: trim
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   product: {"2": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 2:address:shared:array:character <- trim 1:address:shared:array:character
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"array" : <"character" : <>>>>>, "lookup": <>}
9993 parse:   product: {"3": <"array" : <"character" : <>>>}
9992 load: after rewriting: 3:array:character <- copy *2:address:shared:array:character
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction trim
9993 transform: strict match: ingredient 0
9993 transform: strict match: product 0
9992 transform: score for base: 100
9993 transform: strict match: ingredient 0
9993 transform: strict match: product 0
9992 transform: score for variant 0: 100
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: new ...
9992 transform: trim ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: 1:address:shared:array:character <- new [  abc   ]
9999 mem: storing 1000 in location 1
9999 mem: incrementing refcount of 1000: 0 -> 1
 103 run: 2:address:shared:array:character <- trim 1:address:shared:array:character
9999 mem: location 1 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 16
9999 mem: allocating size 18
9999 mem: new alloc: 1010
9999 mem: storing 16 in location 1011
 104 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1013
9999 mem: incrementing refcount of 1000: 1 -> 2
 104 run: len:number <- length *s
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 8 in location 1014
 104 run: start:number <- copy 0
9999 mem: storing 0 in location 1015
 104 run: at-end?:boolean <- greater-or-equal start, len
9999 mem: location 1015 is 0
9999 mem: location 1014 is 8
9999 mem: storing 0 in location 1016
 104 run: jump-unless at-end?, 
9999 mem: location 1016 is 0
9998 run: jumping to instruction 10
 104 run: curr:character <- index *s, start
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1015 is 0
9998 run: address to copy is 1002
9998 run: its type is character
9999 mem: location 1002 is 32
9999 mem: storing 32 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1028
9999 mem: storing 3 in location 1029
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 32
9999 mem: storing 1 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 1
9998 run: jump-unless fell through
 105 run: reply result:boolean
9999 mem: location 1032 is 1
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 1
9998 run: jump-unless fell through
 104 run: start <- add start, 1
9999 mem: location 1015 is 0
9999 mem: storing 1 in location 1015
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: at-end?:boolean <- greater-or-equal start, len
9999 mem: location 1015 is 1
9999 mem: location 1014 is 8
9999 mem: storing 0 in location 1016
 104 run: jump-unless at-end?, 
9999 mem: location 1016 is 0
9998 run: jumping to instruction 10
 104 run: curr:character <- index *s, start
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1015 is 1
9998 run: address to copy is 1003
9998 run: its type is character
9999 mem: location 1003 is 32
9999 mem: storing 32 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 32
9999 mem: storing 1 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 1
9998 run: jump-unless fell through
 105 run: reply result:boolean
9999 mem: location 1032 is 1
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 1
9998 run: jump-unless fell through
 104 run: start <- add start, 1
9999 mem: location 1015 is 1
9999 mem: storing 2 in location 1015
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: at-end?:boolean <- greater-or-equal start, len
9999 mem: location 1015 is 2
9999 mem: location 1014 is 8
9999 mem: storing 0 in location 1016
 104 run: jump-unless at-end?, 
9999 mem: location 1016 is 0
9998 run: jumping to instruction 10
 104 run: curr:character <- index *s, start
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1015 is 2
9998 run: address to copy is 1004
9998 run: its type is character
9999 mem: location 1004 is 97
9999 mem: storing 97 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 5
 105 run: result <- equal c, 10/newline
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 8
 105 run: result <- equal c, 9/tab
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 11
 105 run: result <- equal c, 13/carriage-return
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 14
 105 run: result <- equal c, 11/ctrl-k
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 17
 105 run: result <- equal c, 12/ctrl-l
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 20
 105 run: result <- equal c, 133/ctrl-0085
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 23
 105 run: result <- equal c, 160/no-break-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 26
 105 run: result <- equal c, 5760/ogham-space-mark
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 29
 105 run: result <- equal c, 8192/en-quad
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 32
 105 run: result <- equal c, 8193/em-quad
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 35
 105 run: result <- equal c, 8194/en-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 38
 105 run: result <- equal c, 8195/em-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 41
 105 run: result <- equal c, 8196/three-per-em-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 44
 105 run: result <- equal c, 8197/four-per-em-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 47
 105 run: result <- equal c, 8198/six-per-em-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 50
 105 run: result <- equal c, 8199/figure-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 53
 105 run: result <- equal c, 8200/punctuation-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 56
 105 run: result <- equal c, 8201/thin-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 59
 105 run: result <- equal c, 8202/hair-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 62
 105 run: result <- equal c, 8206/left-to-right
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 65
 105 run: result <- equal c, 8207/right-to-left
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 68
 105 run: result <- equal c, 8232/line-separator
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 71
 105 run: result <- equal c, 8233/paragraph-separator
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 74
 105 run: result <- equal c, 8239/narrow-no-break-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 77
 105 run: result <- equal c, 8287/medium-mathematical-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 80
 105 run: result <- equal c, 12288/ideographic-space
9999 mem: location 1031 is 97
9999 mem: storing 0 in location 1032
 105 run: reply result:boolean
9999 mem: location 1032 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 0
9998 run: jumping to instruction 16
 104 run: end:number <- subtract len, 1
9999 mem: location 1014 is 8
9999 mem: storing 7 in location 1020
 104 run: not-at-start?:boolean <- greater-than end, start
9999 mem: location 1020 is 7
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1021
 104 run: assert not-at-start?, [end ran up against start]
9999 mem: location 1021 is 1
 104 run: curr:character <- index *s, end
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1020 is 7
9998 run: address to copy is 1009
9998 run: its type is character
9999 mem: location 1009 is 32
9999 mem: storing 32 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 32
9999 mem: storing 1 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 1
9998 run: jump-unless fell through
 105 run: reply result:boolean
9999 mem: location 1032 is 1
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 1
9998 run: jump-unless fell through
 104 run: end <- subtract end, 1
9999 mem: location 1020 is 7
9999 mem: storing 6 in location 1020
 104 run: jump 
9998 run: jumping to instruction 19
 104 run: not-at-start?:boolean <- greater-than end, start
9999 mem: location 1020 is 6
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1021
 104 run: assert not-at-start?, [end ran up against start]
9999 mem: location 1021 is 1
 104 run: curr:character <- index *s, end
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1020 is 6
9998 run: address to copy is 1008
9998 run: its type is character
9999 mem: location 1008 is 32
9999 mem: storing 32 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 32
9999 mem: storing 1 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 1
9998 run: jump-unless fell through
 105 run: reply result:boolean
9999 mem: location 1032 is 1
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 1
9998 run: jump-unless fell through
 104 run: end <- subtract end, 1
9999 mem: location 1020 is 6
9999 mem: storing 5 in location 1020
 104 run: jump 
9998 run: jumping to instruction 19
 104 run: not-at-start?:boolean <- greater-than end, start
9999 mem: location 1020 is 5
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1021
 104 run: assert not-at-start?, [end ran up against start]
9999 mem: location 1021 is 1
 104 run: curr:character <- index *s, end
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1020 is 5
9998 run: address to copy is 1007
9998 run: its type is character
9999 mem: location 1007 is 32
9999 mem: storing 32 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 32
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 32
9999 mem: storing 1 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 1
9998 run: jump-unless fell through
 105 run: reply result:boolean
9999 mem: location 1032 is 1
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9999 mem: storing 1 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 1
9998 run: jump-unless fell through
 104 run: end <- subtract end, 1
9999 mem: location 1020 is 5
9999 mem: storing 4 in location 1020
 104 run: jump 
9998 run: jumping to instruction 19
 104 run: not-at-start?:boolean <- greater-than end, start
9999 mem: location 1020 is 4
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1021
 104 run: assert not-at-start?, [end ran up against start]
9999 mem: location 1021 is 1
 104 run: curr:character <- index *s, end
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1020 is 4
9998 run: address to copy is 1006
9998 run: its type is character
9999 mem: location 1006 is 99
9999 mem: storing 99 in location 1018
 104 run: whitespace?:boolean <- space? curr
9999 mem: location 1018 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1031
 105 run: result <- equal c, 32/space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 5
 105 run: result <- equal c, 10/newline
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 8
 105 run: result <- equal c, 9/tab
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 11
 105 run: result <- equal c, 13/carriage-return
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 14
 105 run: result <- equal c, 11/ctrl-k
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 17
 105 run: result <- equal c, 12/ctrl-l
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 20
 105 run: result <- equal c, 133/ctrl-0085
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 23
 105 run: result <- equal c, 160/no-break-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 26
 105 run: result <- equal c, 5760/ogham-space-mark
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 29
 105 run: result <- equal c, 8192/en-quad
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 32
 105 run: result <- equal c, 8193/em-quad
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 35
 105 run: result <- equal c, 8194/en-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 38
 105 run: result <- equal c, 8195/em-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 41
 105 run: result <- equal c, 8196/three-per-em-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 44
 105 run: result <- equal c, 8197/four-per-em-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 47
 105 run: result <- equal c, 8198/six-per-em-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 50
 105 run: result <- equal c, 8199/figure-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 53
 105 run: result <- equal c, 8200/punctuation-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 56
 105 run: result <- equal c, 8201/thin-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 59
 105 run: result <- equal c, 8202/hair-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 62
 105 run: result <- equal c, 8206/left-to-right
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 65
 105 run: result <- equal c, 8207/right-to-left
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 68
 105 run: result <- equal c, 8232/line-separator
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 71
 105 run: result <- equal c, 8233/paragraph-separator
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 74
 105 run: result <- equal c, 8239/narrow-no-break-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 77
 105 run: result <- equal c, 8287/medium-mathematical-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: jump-unless result, 1:offset
9999 mem: location 1032 is 0
9998 run: jumping to instruction 80
 105 run: result <- equal c, 12288/ideographic-space
9999 mem: location 1031 is 99
9999 mem: storing 0 in location 1032
 105 run: reply result:boolean
9999 mem: location 1032 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1019
 104 run: jump-unless whitespace?, 
9999 mem: location 1019 is 0
9998 run: jumping to instruction 26
 104 run: new-len:number <- subtract end, start, -1
9999 mem: location 1020 is 4
9999 mem: location 1015 is 2
9999 mem: storing 3 in location 1022
 104 run: result:address:shared:array:character <- new character:type, new-len
9999 mem: location 1022 is 3
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1028 in location 1017
9999 mem: incrementing refcount of 1028: 0 -> 1
 104 run: i:number <- copy start
9999 mem: location 1015 is 2
9999 mem: storing 2 in location 1023
 104 run: j:number <- copy 0
9999 mem: storing 0 in location 1024
 104 run: done?:boolean <- greater-than i, end
9999 mem: location 1023 is 2
9999 mem: location 1020 is 4
9999 mem: storing 0 in location 1025
 104 run: jump-if done?, 
9999 mem: location 1025 is 0
9998 run: jump-if fell through
 104 run: src:character <- index *s, i
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1023 is 2
9998 run: address to copy is 1004
9998 run: its type is character
9999 mem: location 1004 is 97
9999 mem: storing 97 in location 1026
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1017 is 1028
9999 mem: skipping refcount at 1028
9999 mem: location 1024 is 0
9999 mem: storing 1030 in location 1027
 104 run: *dest <- copy src
9999 mem: location 1026 is 97
9999 mem: location 1027 is 1030
9999 mem: storing 97 in location 1030
 104 run: i <- add i, 1
9999 mem: location 1023 is 2
9999 mem: storing 3 in location 1023
 104 run: j <- add j, 1
9999 mem: location 1024 is 0
9999 mem: storing 1 in location 1024
 104 run: jump 
9998 run: jumping to instruction 32
 104 run: done?:boolean <- greater-than i, end
9999 mem: location 1023 is 3
9999 mem: location 1020 is 4
9999 mem: storing 0 in location 1025
 104 run: jump-if done?, 
9999 mem: location 1025 is 0
9998 run: jump-if fell through
 104 run: src:character <- index *s, i
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1023 is 3
9998 run: address to copy is 1005
9998 run: its type is character
9999 mem: location 1005 is 98
9999 mem: storing 98 in location 1026
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1017 is 1028
9999 mem: skipping refcount at 1028
9999 mem: location 1024 is 1
9999 mem: storing 1031 in location 1027
 104 run: *dest <- copy src
9999 mem: location 1026 is 98
9999 mem: location 1027 is 1031
9999 mem: storing 98 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1023 is 3
9999 mem: storing 4 in location 1023
 104 run: j <- add j, 1
9999 mem: location 1024 is 1
9999 mem: storing 2 in location 1024
 104 run: jump 
9998 run: jumping to instruction 32
 104 run: done?:boolean <- greater-than i, end
9999 mem: location 1023 is 4
9999 mem: location 1020 is 4
9999 mem: storing 0 in location 1025
 104 run: jump-if done?, 
9999 mem: location 1025 is 0
9998 run: jump-if fell through
 104 run: src:character <- index *s, i
9999 mem: location 1013 is 1000
9999 mem: skipping refcount at 1000
9998 run: base address is 1001
9999 mem: location 1023 is 4
9998 run: address to copy is 1006
9998 run: its type is character
9999 mem: location 1006 is 99
9999 mem: storing 99 in location 1026
 104 run: dest:address:character <- index-address *result, j
9999 mem: location 1017 is 1028
9999 mem: skipping refcount at 1028
9999 mem: location 1024 is 2
9999 mem: storing 1032 in location 1027
 104 run: *dest <- copy src
9999 mem: location 1026 is 99
9999 mem: location 1027 is 1032
9999 mem: storing 99 in location 1032
 104 run: i <- add i, 1
9999 mem: location 1023 is 4
9999 mem: storing 5 in location 1023
 104 run: j <- add j, 1
9999 mem: location 1024 is 2
9999 mem: storing 3 in location 1024
 104 run: jump 
9998 run: jumping to instruction 32
 104 run: done?:boolean <- greater-than i, end
9999 mem: location 1023 is 5
9999 mem: location 1020 is 4
9999 mem: storing 1 in location 1025
 104 run: jump-if done?, 
9999 mem: location 1025 is 1
9998 run: jumping to instruction 40
 104 run: reply result:address:shared:array:character
9999 mem: location 1017 is 1028
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1028
9999 mem: storing 1028 in location 2
9999 mem: incrementing refcount of 1028: 1 -> 2
 103 run: 3:array:character <- copy *2:address:shared:array:character
9999 mem: location 2 is 1028
9999 mem: skipping refcount at 1028
9999 mem: location 1029 is 3
9999 mem: location 1030 is 97
9999 mem: location 1031 is 98
9999 mem: location 1032 is 99
9999 mem: storing 3 in location 3
9999 mem: storing 97 in location 4
9999 mem: storing 98 in location 5
9999 mem: storing 99 in location 6
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3:array:character <- [abc]
  ]
9999 run: checking string length at 3
9999 run: checking location 4
9999 run: checking location 5
9999 run: checking location 6
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
