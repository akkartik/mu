c{0: 0 (((1 integer)) <- ((copy)) ((34 literal))) -- nil
c{0: 1 (((2 boolean)) <- ((copy)) ((nil literal))) -- nil
c{0: 2 (((4 boolean)) <- ((copy)) ((t literal))) -- nil
c{0: 3 (((3 integer-boolean-pair)) <- ((copy)) ((1 integer-boolean-pair))) -- nil
c{1: 0 ✓ (((1 integer)) <- ((copy)) ((34 literal)))
c{1: 1 ✓ (((2 boolean)) <- ((copy)) ((nil literal)))
c{1: 2 ✓ (((4 boolean)) <- ((copy)) ((t literal)))
c{1: 3 ✓ (((3 integer-boolean-pair)) <- ((copy)) ((1 integer-boolean-pair)))
cn0: convert-names in main
cn0: (((1 integer)) <- ((copy)) ((34 literal))) nil nil
cn0: checking arg ((34 literal))
cn0: checking oarg ((1 integer))
maybe-add: ((1 integer))
cn0: (((2 boolean)) <- ((copy)) ((nil literal))) nil nil
cn0: checking arg ((nil literal))
cn0: checking oarg ((2 boolean))
maybe-add: ((2 boolean))
cn0: (((4 boolean)) <- ((copy)) ((t literal))) nil nil
cn0: checking arg ((t literal))
cn0: checking oarg ((4 boolean))
maybe-add: ((4 boolean))
cn0: (((3 integer-boolean-pair)) <- ((copy)) ((1 integer-boolean-pair))) nil nil
cn0: checking arg ((1 integer-boolean-pair))
maybe-add: ((1 integer-boolean-pair))
cn0: checking oarg ((3 integer-boolean-pair))
maybe-add: ((3 integer-boolean-pair))
cn1: (((1 integer)) <- ((copy)) ((34 literal)))
cn1: (((2 boolean)) <- ((copy)) ((nil literal)))
cn1: (((4 boolean)) <- ((copy)) ((t literal)))
cn1: (((3 integer-boolean-pair)) <- ((copy)) ((1 integer-boolean-pair)))
schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((34 literal)))
run: main 0: 34 => ((1 integer))
mem: ((1 integer)): 1 <= 34
run: main 1: (((2 boolean)) <- ((copy)) ((nil literal)))
run: main 1: nil => ((2 boolean))
mem: ((2 boolean)): 2 <= nil
run: main 2: (((4 boolean)) <- ((copy)) ((t literal)))
run: main 2: t => ((4 boolean))
mem: ((4 boolean)): 4 <= t
run: main 3: (((3 integer-boolean-pair)) <- ((copy)) ((1 integer-boolean-pair)))
mem: ((1 integer-boolean-pair)) => #(tagged record (34 nil . nil))
run: main 3: #(tagged record (34 nil . nil)) => ((3 integer-boolean-pair))
mem: ((3 integer-boolean-pair)): 3 <= 34
mem: ((3 integer-boolean-pair)): 4 <= nil
schedule: done with routine nil
