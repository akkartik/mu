parse: instruction: copy
parse:   ingredient: {name: "3", value: 0, type: 0, properties: ["3": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "14", value: 0, type: 0, properties: ["14": "literal"]}
parse:   product: {name: "2", value: 0, type: 1, properties: ["2": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "15", value: 0, type: 0, properties: ["15": "literal"]}
parse:   product: {name: "3", value: 0, type: 1, properties: ["3": "number"]}
parse: instruction: copy
parse:   ingredient: {name: "16", value: 0, type: 0, properties: ["16": "literal"]}
parse:   product: {name: "4", value: 0, type: 1, properties: ["4": "number"]}
parse: instruction: index-address
parse:   ingredient: {name: "1", value: 0, type: 5-1, properties: ["1": "array":"number"]}
parse:   ingredient: {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
parse:   product: {name: "5", value: 0, type: 1, properties: ["5": "number"]}
after-brace: recipe main
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: copy ...
after-brace: index-address ...
new: routine allocated memory from 1000 to 101000
schedule: main
run: instruction main/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- copy/1 {name: "3", value: 3, type: 0, properties: ["3": "literal"]}
run: ingredient 0 is 3
run: product 0 is 1
mem: storing 3 in location 1
run: instruction main/1
run: {name: "2", value: 2, type: 1, properties: ["2": "number"]} <- copy/1 {name: "14", value: 14, type: 0, properties: ["14": "literal"]}
run: ingredient 0 is 14
run: product 0 is 2
mem: storing 14 in location 2
run: instruction main/2
run: {name: "3", value: 3, type: 1, properties: ["3": "number"]} <- copy/1 {name: "15", value: 15, type: 0, properties: ["15": "literal"]}
run: ingredient 0 is 15
run: product 0 is 3
mem: storing 15 in location 3
run: instruction main/3
run: {name: "4", value: 4, type: 1, properties: ["4": "number"]} <- copy/1 {name: "16", value: 16, type: 0, properties: ["16": "literal"]}
run: ingredient 0 is 16
run: product 0 is 4
mem: storing 16 in location 4
run: instruction main/4
run: {name: "5", value: 5, type: 1, properties: ["5": "number"]} <- index-address/31 {name: "1", value: 1, type: 5-1, properties: ["1": "array":"number"]}, {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run: ingredient 0 is 1
mem: location 1 is 3
mem: location 2 is 14
mem: location 3 is 15
mem: location 4 is 16
run: ingredient 1 is 0
run: product 0 is 5
mem: storing 2 in location 5
