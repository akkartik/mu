9999 parse: instruction: start-running
9999 parse:   ingredient: {name: "f2", properties: ["f2": "recipe"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "0", properties: ["0": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number"]}
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "0", properties: ["0": "literal"]}
9999 parse:   product: {name: "2", properties: ["2": "number"]}
9999 parse: instruction: divide-with-remainder
9999 parse:   ingredient: {name: "4", properties: ["4": "literal"]}
9999 parse:   ingredient: {name: "0", properties: ["0": "literal"]}
9999 parse:   product: {name: "3", properties: ["3": "number"]}
9999 parse: instruction: divide-with-remainder
9999 parse:   ingredient: {name: "4", properties: ["4": "literal"]}
9999 parse:   ingredient: {name: "0", properties: ["0": "literal"]}
9999 parse:   product: {name: "4", properties: ["4": "number"]}
9999 after-brace: recipe f1
9999 after-brace: start-running ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: recipe f2
9999 after-brace: divide-with-remainder ...
9999 after-brace: divide-with-remainder ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: f1
 102 run: start-running f2:recipe
9999 trace: new routine; incrementing callstack depth to 2
9999 new: routine allocated memory from 101000 to 201000
 103 run: 1:number <- copy 0
9999 mem: storing 0 in location 1
9999 schedule: f2
 103 run: 3:number <- divide-with-remainder 4, 0
   0 error: f2: divide by zero in '3:number <- divide-with-remainder 4, 0'

   0 error: f2: size mismatch in storing to 3:number (1 vs 0) at '3:number <- divide-with-remainder 4, 0'

9999 schedule: f1
 103 run: 2:number <- copy 0
9999 mem: storing 0 in location 2
9999 trace: fall-through: exiting f1; decrementing callstack depth from 2
