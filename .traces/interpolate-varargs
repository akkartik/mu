schedule: main
run: 1 main 0: (((1 string-address)) <- ((new)) hello, _, _, and _!)
run: 1000 => ((1 string-address))
setm: ((1 string-address)) <= 1000
setm: size of ((1 string-address)) is 1
setm: ((1 string-address)): setting 1 to 1000
run: 2 main 1: (((2 string-address)) <- ((new)) abc)
run: 1020 => ((2 string-address))
setm: ((2 string-address)) <= 1020
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 2 to 1020
run: 3 main 2: (((3 string-address)) <- ((new)) def)
run: 1024 => ((3 string-address))
setm: ((3 string-address)) <= 1024
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 3 to 1024
run: 4 main 3: (((4 string-address)) <- ((new)) ghi)
run: 1028 => ((4 string-address))
setm: ((4 string-address)) <= 1028
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 4 to 1028
run: 5 main 4: (((5 string-address)) <- ((interpolate)) ((1 string-address)) ((2 string-address)) ((3 string-address)) ((4 string-address)))
m: ((1 string-address))
sizeof: ((1 string-address))
m: ((2 string-address))
sizeof: ((2 string-address))
m: ((3 string-address))
sizeof: ((3 string-address))
m: ((4 string-address))
sizeof: ((4 string-address))
run: 6 interpolate 0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((60 literal)))
sizeof: ((_ location))
run: 1032 => ((default-scope scope-address))
sizeof: ((default-scope scope-address))
run: 7 interpolate 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1000 1020 1024 1028)
run: 1000 => ((1 string-address))
setm: ((1 string-address)) <= 1000
setm: size of ((1 string-address)) is 1
setm: ((1 string-address)): setting 1034 to 1000
run: 8 interpolate 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
run: 19 => ((2 integer))
setm: ((2 integer)) <= 19
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 1035 to 19
run: 9 interpolate 3: (((3 integer)) <- ((copy)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 19 => ((3 integer))
setm: ((3 integer)) <= 19
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 19
run: 10 interpolate 4: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 1 (1000 1020 1024 1028)
run: 1020 => ((4 string-address))
setm: ((4 string-address)) <= 1020
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to 1020
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to t
run: 11 interpolate 5: (((jump-unless)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that t is not t
run: 12 interpolate 6: (((6 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
m: ((1020 integer) (raw))
sizeof: ((1020 integer) (raw))
run: 3 => ((6 integer))
setm: ((6 integer)) <= 3
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 1039 to 3
run: 13 interpolate 7: (((3 integer)) <- ((add)) ((3 integer)) ((6 integer)))
m: ((3 integer))
sizeof: ((3 integer))
m: ((6 integer))
sizeof: ((6 integer))
add: 19 3
m: ((3 integer))
sizeof: ((3 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: 22 => ((3 integer))
setm: ((3 integer)) <= 22
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 22
run: 14 interpolate 8: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 21 => ((3 integer))
setm: ((3 integer)) <= 21
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 21
run: 15 interpolate 9: (((jump)) ((-6 offset)))
jump: jumping to 4
run: 16 interpolate 4: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 2 (1000 1020 1024 1028)
run: 1024 => ((4 string-address))
setm: ((4 string-address)) <= 1024
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to 1024
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to t
run: 17 interpolate 5: (((jump-unless)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that t is not t
run: 18 interpolate 6: (((6 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
m: ((1024 integer) (raw))
sizeof: ((1024 integer) (raw))
run: 3 => ((6 integer))
setm: ((6 integer)) <= 3
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 1039 to 3
run: 19 interpolate 7: (((3 integer)) <- ((add)) ((3 integer)) ((6 integer)))
m: ((3 integer))
sizeof: ((3 integer))
m: ((6 integer))
sizeof: ((6 integer))
add: 21 3
m: ((3 integer))
sizeof: ((3 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: 24 => ((3 integer))
setm: ((3 integer)) <= 24
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 24
run: 20 interpolate 8: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 23 => ((3 integer))
setm: ((3 integer)) <= 23
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 23
run: 21 interpolate 9: (((jump)) ((-6 offset)))
jump: jumping to 4
run: 22 interpolate 4: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 3 (1000 1020 1024 1028)
run: 1028 => ((4 string-address))
setm: ((4 string-address)) <= 1028
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to 1028
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to t
run: 23 interpolate 5: (((jump-unless)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that t is not t
run: 24 interpolate 6: (((6 integer)) <- ((length)) ((4 string-address) (deref)))
array-len: ((4 string-address) (deref))
m: ((1028 integer) (raw))
sizeof: ((1028 integer) (raw))
run: 3 => ((6 integer))
setm: ((6 integer)) <= 3
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 1039 to 3
run: 25 interpolate 7: (((3 integer)) <- ((add)) ((3 integer)) ((6 integer)))
m: ((3 integer))
sizeof: ((3 integer))
m: ((6 integer))
sizeof: ((6 integer))
add: 23 3
m: ((3 integer))
sizeof: ((3 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: 26 => ((3 integer))
setm: ((3 integer)) <= 26
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 26
run: 26 interpolate 8: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 25 => ((3 integer))
setm: ((3 integer)) <= 25
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1036 to 25
run: 27 interpolate 9: (((jump)) ((-6 offset)))
jump: jumping to 4
run: 28 interpolate 4: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 4 (1000 1020 1024 1028)
run: nil => ((4 string-address))
setm: ((4 string-address)) <= nil
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to nil
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to nil
run: 29 interpolate 5: (((jump-unless)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that nil is not t
jump: jumping to 10
run: 30 interpolate 10: (_ <- ((input)) ((0 literal)))
arg: (((0 literal))) 0 (1000 1020 1024 1028)
run: 31 interpolate 11: (((7 string-address)) <- ((new)) ((string literal)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
sizeof: ((_ byte))
run: 1093 => ((7 string-address))
setm: ((7 string-address)) <= 1093
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 1040 to 1093
run: 32 interpolate 12: (((8 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((8 integer))
setm: ((8 integer)) <= 0
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 0
run: 33 interpolate 13: (((9 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((9 integer))
setm: ((9 integer)) <= 0
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 0
run: 34 interpolate 14: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 1 (1000 1020 1024 1028)
run: 1020 => ((4 string-address))
setm: ((4 string-address)) <= 1020
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to 1020
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to t
run: 35 interpolate 15: (((jump-unless)) ((5 boolean)) ((21 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that t is not t
run: 36 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 37 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 38 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1001 byte) (raw))
sizeof: ((1001 byte) (raw))
run: h => ((11 byte))
setm: ((11 byte)) <= h
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to h
run: 39 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 40 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 41 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1094 => ((13 byte-address))
setm: ((13 byte-address)) <= 1094
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1094
run: 42 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: h => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= h
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1094 to h
run: 43 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 0 1
m: ((9 integer))
sizeof: ((9 integer))
run: 1 => ((9 integer))
setm: ((9 integer)) <= 1
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 1
run: 44 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 0 1
m: ((8 integer))
sizeof: ((8 integer))
run: 1 => ((8 integer))
setm: ((8 integer)) <= 1
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 1
run: 45 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 46 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 47 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 48 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1002 byte) (raw))
sizeof: ((1002 byte) (raw))
run: e => ((11 byte))
setm: ((11 byte)) <= e
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to e
run: 49 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 50 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 51 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1095 => ((13 byte-address))
setm: ((13 byte-address)) <= 1095
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1095
run: 52 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: e => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= e
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1095 to e
run: 53 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 1 1
m: ((9 integer))
sizeof: ((9 integer))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 2
run: 54 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 1 1
m: ((8 integer))
sizeof: ((8 integer))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 2
run: 55 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 56 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 57 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 58 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1003 byte) (raw))
sizeof: ((1003 byte) (raw))
run: l => ((11 byte))
setm: ((11 byte)) <= l
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to l
run: 59 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 60 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 61 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1096 => ((13 byte-address))
setm: ((13 byte-address)) <= 1096
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1096
run: 62 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: l => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= l
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1096 to l
run: 63 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 2 1
m: ((9 integer))
sizeof: ((9 integer))
run: 3 => ((9 integer))
setm: ((9 integer)) <= 3
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 3
run: 64 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 2 1
m: ((8 integer))
sizeof: ((8 integer))
run: 3 => ((8 integer))
setm: ((8 integer)) <= 3
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 3
run: 65 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 66 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 67 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 68 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1004 byte) (raw))
sizeof: ((1004 byte) (raw))
run: l => ((11 byte))
setm: ((11 byte)) <= l
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to l
run: 69 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 70 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 71 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1097 => ((13 byte-address))
setm: ((13 byte-address)) <= 1097
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1097
run: 72 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: l => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= l
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1097 to l
run: 73 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 3 1
m: ((9 integer))
sizeof: ((9 integer))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 4
run: 74 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 3 1
m: ((8 integer))
sizeof: ((8 integer))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 4
run: 75 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 76 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 77 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 78 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1005 byte) (raw))
sizeof: ((1005 byte) (raw))
run: o => ((11 byte))
setm: ((11 byte)) <= o
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to o
run: 79 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 80 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 81 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1098 => ((13 byte-address))
setm: ((13 byte-address)) <= 1098
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1098
run: 82 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: o => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= o
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1098 to o
run: 83 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 4 1
m: ((9 integer))
sizeof: ((9 integer))
run: 5 => ((9 integer))
setm: ((9 integer)) <= 5
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 5
run: 84 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 4 1
m: ((8 integer))
sizeof: ((8 integer))
run: 5 => ((8 integer))
setm: ((8 integer)) <= 5
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 5
run: 85 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 86 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 87 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 88 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1006 byte) (raw))
sizeof: ((1006 byte) (raw))
run: , => ((11 byte))
setm: ((11 byte)) <= ,
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to ,
run: 89 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 90 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 91 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1099 => ((13 byte-address))
setm: ((13 byte-address)) <= 1099
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1099
run: 92 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: , => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= ,
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1099 to ,
run: 93 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 5 1
m: ((9 integer))
sizeof: ((9 integer))
run: 6 => ((9 integer))
setm: ((9 integer)) <= 6
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 6
run: 94 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 5 1
m: ((8 integer))
sizeof: ((8 integer))
run: 6 => ((8 integer))
setm: ((8 integer)) <= 6
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 6
run: 95 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 96 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 97 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 98 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1007 byte) (raw))
sizeof: ((1007 byte) (raw))
run:   => ((11 byte))
setm: ((11 byte)) <=  
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to  
run: 99 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 100 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 101 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1100 => ((13 byte-address))
setm: ((13 byte-address)) <= 1100
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1100
run: 102 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run:   => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <=  
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1100 to  
run: 103 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 6 1
m: ((9 integer))
sizeof: ((9 integer))
run: 7 => ((9 integer))
setm: ((9 integer)) <= 7
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 7
run: 104 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 6 1
m: ((8 integer))
sizeof: ((8 integer))
run: 7 => ((8 integer))
setm: ((8 integer)) <= 7
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 7
run: 105 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 106 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 107 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 108 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1008 byte) (raw))
sizeof: ((1008 byte) (raw))
run: _ => ((11 byte))
setm: ((11 byte)) <= _
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to _
run: 109 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: t => ((12 boolean))
setm: ((12 boolean)) <= t
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to t
run: 110 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that t is t
jump: jumping to 26
run: 111 interpolate 26: (((14 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((14 integer))
setm: ((14 integer)) <= 0
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 0
run: 112 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 113 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 114 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1020 string) (raw))
m: ((1020 integer) (raw))
sizeof: ((1020 integer) (raw))
sizeof: ((_ byte))
m: ((1021 byte) (raw))
sizeof: ((1021 byte) (raw))
run: a => ((11 byte))
setm: ((11 byte)) <= a
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to a
run: 115 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1101 => ((13 byte-address))
setm: ((13 byte-address)) <= 1101
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1101
run: 116 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: a => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= a
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1101 to a
run: 117 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 0 1
m: ((14 integer))
sizeof: ((14 integer))
run: 1 => ((14 integer))
setm: ((14 integer)) <= 1
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 1
run: 118 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 7 1
m: ((8 integer))
sizeof: ((8 integer))
run: 8 => ((8 integer))
setm: ((8 integer)) <= 8
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 8
run: 119 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 120 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 121 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 122 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1020 string) (raw))
m: ((1020 integer) (raw))
sizeof: ((1020 integer) (raw))
sizeof: ((_ byte))
m: ((1022 byte) (raw))
sizeof: ((1022 byte) (raw))
run: b => ((11 byte))
setm: ((11 byte)) <= b
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to b
run: 123 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1102 => ((13 byte-address))
setm: ((13 byte-address)) <= 1102
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1102
run: 124 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: b => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= b
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1102 to b
run: 125 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 1 1
m: ((14 integer))
sizeof: ((14 integer))
run: 2 => ((14 integer))
setm: ((14 integer)) <= 2
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 2
run: 126 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 8 1
m: ((8 integer))
sizeof: ((8 integer))
run: 9 => ((8 integer))
setm: ((8 integer)) <= 9
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 9
run: 127 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 128 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 129 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 130 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1020 string) (raw))
m: ((1020 integer) (raw))
sizeof: ((1020 integer) (raw))
sizeof: ((_ byte))
m: ((1023 byte) (raw))
sizeof: ((1023 byte) (raw))
run: c => ((11 byte))
setm: ((11 byte)) <= c
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to c
run: 131 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1103 => ((13 byte-address))
setm: ((13 byte-address)) <= 1103
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1103
run: 132 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: c => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= c
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1103 to c
run: 133 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 2 1
m: ((14 integer))
sizeof: ((14 integer))
run: 3 => ((14 integer))
setm: ((14 integer)) <= 3
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 3
run: 134 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 9 1
m: ((8 integer))
sizeof: ((8 integer))
run: 10 => ((8 integer))
setm: ((8 integer)) <= 10
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 10
run: 135 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 136 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: nil => ((15 boolean))
setm: ((15 boolean)) <= nil
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to nil
run: 137 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that nil is not t
jump: jumping to 35
run: 138 interpolate 35: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 7 1
m: ((9 integer))
sizeof: ((9 integer))
run: 8 => ((9 integer))
setm: ((9 integer)) <= 8
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 8
run: 139 interpolate 36: (((jump)) ((-23 offset)))
jump: jumping to 14
run: 140 interpolate 14: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 2 (1000 1020 1024 1028)
run: 1024 => ((4 string-address))
setm: ((4 string-address)) <= 1024
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to 1024
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to t
run: 141 interpolate 15: (((jump-unless)) ((5 boolean)) ((21 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that t is not t
run: 142 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 143 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 144 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1009 byte) (raw))
sizeof: ((1009 byte) (raw))
run: , => ((11 byte))
setm: ((11 byte)) <= ,
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to ,
run: 145 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 146 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 147 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1104 => ((13 byte-address))
setm: ((13 byte-address)) <= 1104
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1104
run: 148 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: , => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= ,
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1104 to ,
run: 149 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 8 1
m: ((9 integer))
sizeof: ((9 integer))
run: 9 => ((9 integer))
setm: ((9 integer)) <= 9
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 9
run: 150 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 10 1
m: ((8 integer))
sizeof: ((8 integer))
run: 11 => ((8 integer))
setm: ((8 integer)) <= 11
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 11
run: 151 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 152 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 153 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 154 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1010 byte) (raw))
sizeof: ((1010 byte) (raw))
run:   => ((11 byte))
setm: ((11 byte)) <=  
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to  
run: 155 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 156 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 157 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1105 => ((13 byte-address))
setm: ((13 byte-address)) <= 1105
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1105
run: 158 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run:   => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <=  
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1105 to  
run: 159 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 9 1
m: ((9 integer))
sizeof: ((9 integer))
run: 10 => ((9 integer))
setm: ((9 integer)) <= 10
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 10
run: 160 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 11 1
m: ((8 integer))
sizeof: ((8 integer))
run: 12 => ((8 integer))
setm: ((8 integer)) <= 12
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 12
run: 161 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 162 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 163 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 164 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1011 byte) (raw))
sizeof: ((1011 byte) (raw))
run: _ => ((11 byte))
setm: ((11 byte)) <= _
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to _
run: 165 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: t => ((12 boolean))
setm: ((12 boolean)) <= t
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to t
run: 166 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that t is t
jump: jumping to 26
run: 167 interpolate 26: (((14 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((14 integer))
setm: ((14 integer)) <= 0
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 0
run: 168 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 169 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 170 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1024 string) (raw))
m: ((1024 integer) (raw))
sizeof: ((1024 integer) (raw))
sizeof: ((_ byte))
m: ((1025 byte) (raw))
sizeof: ((1025 byte) (raw))
run: d => ((11 byte))
setm: ((11 byte)) <= d
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to d
run: 171 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1106 => ((13 byte-address))
setm: ((13 byte-address)) <= 1106
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1106
run: 172 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: d => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= d
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1106 to d
run: 173 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 0 1
m: ((14 integer))
sizeof: ((14 integer))
run: 1 => ((14 integer))
setm: ((14 integer)) <= 1
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 1
run: 174 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 12 1
m: ((8 integer))
sizeof: ((8 integer))
run: 13 => ((8 integer))
setm: ((8 integer)) <= 13
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 13
run: 175 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 176 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 177 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 178 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1024 string) (raw))
m: ((1024 integer) (raw))
sizeof: ((1024 integer) (raw))
sizeof: ((_ byte))
m: ((1026 byte) (raw))
sizeof: ((1026 byte) (raw))
run: e => ((11 byte))
setm: ((11 byte)) <= e
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to e
run: 179 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1107 => ((13 byte-address))
setm: ((13 byte-address)) <= 1107
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1107
run: 180 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: e => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= e
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1107 to e
run: 181 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 1 1
m: ((14 integer))
sizeof: ((14 integer))
run: 2 => ((14 integer))
setm: ((14 integer)) <= 2
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 2
run: 182 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 13 1
m: ((8 integer))
sizeof: ((8 integer))
run: 14 => ((8 integer))
setm: ((8 integer)) <= 14
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 14
run: 183 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 184 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 185 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 186 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1024 string) (raw))
m: ((1024 integer) (raw))
sizeof: ((1024 integer) (raw))
sizeof: ((_ byte))
m: ((1027 byte) (raw))
sizeof: ((1027 byte) (raw))
run: f => ((11 byte))
setm: ((11 byte)) <= f
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to f
run: 187 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1108 => ((13 byte-address))
setm: ((13 byte-address)) <= 1108
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1108
run: 188 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: f => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= f
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1108 to f
run: 189 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 2 1
m: ((14 integer))
sizeof: ((14 integer))
run: 3 => ((14 integer))
setm: ((14 integer)) <= 3
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 3
run: 190 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 14 1
m: ((8 integer))
sizeof: ((8 integer))
run: 15 => ((8 integer))
setm: ((8 integer)) <= 15
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 15
run: 191 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 192 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: nil => ((15 boolean))
setm: ((15 boolean)) <= nil
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to nil
run: 193 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that nil is not t
jump: jumping to 35
run: 194 interpolate 35: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 10 1
m: ((9 integer))
sizeof: ((9 integer))
run: 11 => ((9 integer))
setm: ((9 integer)) <= 11
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 11
run: 195 interpolate 36: (((jump)) ((-23 offset)))
jump: jumping to 14
run: 196 interpolate 14: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 3 (1000 1020 1024 1028)
run: 1028 => ((4 string-address))
setm: ((4 string-address)) <= 1028
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to 1028
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to t
run: 197 interpolate 15: (((jump-unless)) ((5 boolean)) ((21 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that t is not t
run: 198 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 199 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 200 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1012 byte) (raw))
sizeof: ((1012 byte) (raw))
run: , => ((11 byte))
setm: ((11 byte)) <= ,
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to ,
run: 201 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 202 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 203 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1109 => ((13 byte-address))
setm: ((13 byte-address)) <= 1109
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1109
run: 204 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: , => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= ,
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1109 to ,
run: 205 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 11 1
m: ((9 integer))
sizeof: ((9 integer))
run: 12 => ((9 integer))
setm: ((9 integer)) <= 12
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 12
run: 206 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 15 1
m: ((8 integer))
sizeof: ((8 integer))
run: 16 => ((8 integer))
setm: ((8 integer)) <= 16
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 16
run: 207 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 208 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 209 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 210 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1013 byte) (raw))
sizeof: ((1013 byte) (raw))
run:   => ((11 byte))
setm: ((11 byte)) <=  
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to  
run: 211 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 212 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 213 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1110 => ((13 byte-address))
setm: ((13 byte-address)) <= 1110
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1110
run: 214 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run:   => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <=  
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1110 to  
run: 215 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 12 1
m: ((9 integer))
sizeof: ((9 integer))
run: 13 => ((9 integer))
setm: ((9 integer)) <= 13
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 13
run: 216 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 16 1
m: ((8 integer))
sizeof: ((8 integer))
run: 17 => ((8 integer))
setm: ((8 integer)) <= 17
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 17
run: 217 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 218 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 219 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 220 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1014 byte) (raw))
sizeof: ((1014 byte) (raw))
run: a => ((11 byte))
setm: ((11 byte)) <= a
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to a
run: 221 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 222 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 223 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1111 => ((13 byte-address))
setm: ((13 byte-address)) <= 1111
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1111
run: 224 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: a => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= a
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1111 to a
run: 225 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 13 1
m: ((9 integer))
sizeof: ((9 integer))
run: 14 => ((9 integer))
setm: ((9 integer)) <= 14
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 14
run: 226 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 17 1
m: ((8 integer))
sizeof: ((8 integer))
run: 18 => ((8 integer))
setm: ((8 integer)) <= 18
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 18
run: 227 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 228 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 229 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 230 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1015 byte) (raw))
sizeof: ((1015 byte) (raw))
run: n => ((11 byte))
setm: ((11 byte)) <= n
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to n
run: 231 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 232 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 233 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1112 => ((13 byte-address))
setm: ((13 byte-address)) <= 1112
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1112
run: 234 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: n => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= n
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1112 to n
run: 235 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 14 1
m: ((9 integer))
sizeof: ((9 integer))
run: 15 => ((9 integer))
setm: ((9 integer)) <= 15
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 15
run: 236 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 18 1
m: ((8 integer))
sizeof: ((8 integer))
run: 19 => ((8 integer))
setm: ((8 integer)) <= 19
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 19
run: 237 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 238 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 239 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 240 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1016 byte) (raw))
sizeof: ((1016 byte) (raw))
run: d => ((11 byte))
setm: ((11 byte)) <= d
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to d
run: 241 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 242 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 243 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1113 => ((13 byte-address))
setm: ((13 byte-address)) <= 1113
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1113
run: 244 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: d => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= d
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1113 to d
run: 245 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 15 1
m: ((9 integer))
sizeof: ((9 integer))
run: 16 => ((9 integer))
setm: ((9 integer)) <= 16
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 16
run: 246 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 19 1
m: ((8 integer))
sizeof: ((8 integer))
run: 20 => ((8 integer))
setm: ((8 integer)) <= 20
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 20
run: 247 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 248 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 249 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 250 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1017 byte) (raw))
sizeof: ((1017 byte) (raw))
run:   => ((11 byte))
setm: ((11 byte)) <=  
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to  
run: 251 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to nil
run: 252 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that nil is t
run: 253 interpolate 21: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1114 => ((13 byte-address))
setm: ((13 byte-address)) <= 1114
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1114
run: 254 interpolate 22: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run:   => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <=  
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1114 to  
run: 255 interpolate 23: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 16 1
m: ((9 integer))
sizeof: ((9 integer))
run: 17 => ((9 integer))
setm: ((9 integer)) <= 17
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 17
run: 256 interpolate 24: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 20 1
m: ((8 integer))
sizeof: ((8 integer))
run: 21 => ((8 integer))
setm: ((8 integer)) <= 21
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 21
run: 257 interpolate 25: (((jump)) ((-10 offset)))
jump: jumping to 16
run: 258 interpolate 16: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 259 interpolate 17: (((jump-unless)) ((10 boolean)) ((19 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 260 interpolate 18: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1018 byte) (raw))
sizeof: ((1018 byte) (raw))
run: _ => ((11 byte))
setm: ((11 byte)) <= _
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to _
run: 261 interpolate 19: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal)))
m: ((11 byte))
sizeof: ((11 byte))
run: t => ((12 boolean))
setm: ((12 boolean)) <= t
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1045 to t
run: 262 interpolate 20: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
jump: checking that t is t
jump: jumping to 26
run: 263 interpolate 26: (((14 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((14 integer))
setm: ((14 integer)) <= 0
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 0
run: 264 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 265 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 266 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1028 string) (raw))
m: ((1028 integer) (raw))
sizeof: ((1028 integer) (raw))
sizeof: ((_ byte))
m: ((1029 byte) (raw))
sizeof: ((1029 byte) (raw))
run: g => ((11 byte))
setm: ((11 byte)) <= g
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to g
run: 267 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1115 => ((13 byte-address))
setm: ((13 byte-address)) <= 1115
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1115
run: 268 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: g => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= g
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1115 to g
run: 269 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 0 1
m: ((14 integer))
sizeof: ((14 integer))
run: 1 => ((14 integer))
setm: ((14 integer)) <= 1
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 1
run: 270 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 21 1
m: ((8 integer))
sizeof: ((8 integer))
run: 22 => ((8 integer))
setm: ((8 integer)) <= 22
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 22
run: 271 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 272 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 273 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 274 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1028 string) (raw))
m: ((1028 integer) (raw))
sizeof: ((1028 integer) (raw))
sizeof: ((_ byte))
m: ((1030 byte) (raw))
sizeof: ((1030 byte) (raw))
run: h => ((11 byte))
setm: ((11 byte)) <= h
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to h
run: 275 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1116 => ((13 byte-address))
setm: ((13 byte-address)) <= 1116
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1116
run: 276 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: h => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= h
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1116 to h
run: 277 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 1 1
m: ((14 integer))
sizeof: ((14 integer))
run: 2 => ((14 integer))
setm: ((14 integer)) <= 2
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 2
run: 278 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 22 1
m: ((8 integer))
sizeof: ((8 integer))
run: 23 => ((8 integer))
setm: ((8 integer)) <= 23
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 23
run: 279 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 280 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: t => ((15 boolean))
setm: ((15 boolean)) <= t
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to t
run: 281 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that t is not t
run: 282 interpolate 29: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer)))
m: ((14 integer))
sizeof: ((14 integer))
array-len: ((1028 string) (raw))
m: ((1028 integer) (raw))
sizeof: ((1028 integer) (raw))
sizeof: ((_ byte))
m: ((1031 byte) (raw))
sizeof: ((1031 byte) (raw))
run: i => ((11 byte))
setm: ((11 byte)) <= i
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to i
run: 283 interpolate 30: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1117 => ((13 byte-address))
setm: ((13 byte-address)) <= 1117
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1117
run: 284 interpolate 31: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: i => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= i
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1117 to i
run: 285 interpolate 32: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal)))
m: ((14 integer))
sizeof: ((14 integer))
add: 2 1
m: ((14 integer))
sizeof: ((14 integer))
run: 3 => ((14 integer))
setm: ((14 integer)) <= 3
setm: size of ((14 integer)) is 1
setm: ((14 integer)): setting 1047 to 3
run: 286 interpolate 33: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 23 1
m: ((8 integer))
sizeof: ((8 integer))
run: 24 => ((8 integer))
setm: ((8 integer)) <= 24
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 24
run: 287 interpolate 34: (((jump)) ((-8 offset)))
jump: jumping to 27
run: 288 interpolate 27: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer)))
m: ((14 integer))
sizeof: ((14 integer))
m: ((6 integer))
sizeof: ((6 integer))
run: nil => ((15 boolean))
setm: ((15 boolean)) <= nil
setm: size of ((15 boolean)) is 1
setm: ((15 boolean)): setting 1048 to nil
run: 289 interpolate 28: (((jump-unless)) ((15 boolean)) ((6 offset)))
m: ((15 boolean))
sizeof: ((15 boolean))
jump: checking that nil is not t
jump: jumping to 35
run: 290 interpolate 35: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 17 1
m: ((9 integer))
sizeof: ((9 integer))
run: 18 => ((9 integer))
setm: ((9 integer)) <= 18
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 18
run: 291 interpolate 36: (((jump)) ((-23 offset)))
jump: jumping to 14
run: 292 interpolate 14: (((4 string-address)) ((5 boolean)) <- ((next-input)))
arg: nil 4 (1000 1020 1024 1028)
run: nil => ((4 string-address))
setm: ((4 string-address)) <= nil
setm: size of ((4 string-address)) is 1
setm: ((4 string-address)): setting 1037 to nil
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1038 to nil
run: 293 interpolate 15: (((jump-unless)) ((5 boolean)) ((21 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
jump: checking that nil is not t
jump: jumping to 37
run: 294 interpolate 37: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to t
run: 295 interpolate 38: (((jump-unless)) ((10 boolean)) ((6 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that t is not t
run: 296 interpolate 39: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer)))
m: ((9 integer))
sizeof: ((9 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1019 byte) (raw))
sizeof: ((1019 byte) (raw))
run: ! => ((11 byte))
setm: ((11 byte)) <= !
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1044 to !
run: 297 interpolate 40: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1093 string) (raw))
m: ((1093 integer) (raw))
sizeof: ((1093 integer) (raw))
sizeof: ((_ byte))
run: 1118 => ((13 byte-address))
setm: ((13 byte-address)) <= 1118
setm: size of ((13 byte-address)) is 1
setm: ((13 byte-address)): setting 1046 to 1118
run: 298 interpolate 41: (((13 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: ! => ((13 byte-address) (deref))
setm: ((13 byte-address) (deref)) <= !
setm: size of ((13 byte-address) (deref)) is 1
setm: ((13 byte-address) (deref)): setting 1118 to !
run: 299 interpolate 42: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
m: ((9 integer))
sizeof: ((9 integer))
add: 18 1
m: ((9 integer))
sizeof: ((9 integer))
run: 19 => ((9 integer))
setm: ((9 integer)) <= 19
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1042 to 19
run: 300 interpolate 43: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
add: 24 1
m: ((8 integer))
sizeof: ((8 integer))
run: 25 => ((8 integer))
setm: ((8 integer)) <= 25
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1041 to 25
run: 301 interpolate 44: (((jump)) ((-8 offset)))
jump: jumping to 37
run: 302 interpolate 37: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer)))
m: ((9 integer))
sizeof: ((9 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1043 to nil
run: 303 interpolate 38: (((jump-unless)) ((10 boolean)) ((6 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
jump: checking that nil is not t
jump: jumping to 45
run: 304 interpolate 45: (((reply)) ((7 string-address)))
m: ((7 string-address))
sizeof: ((7 string-address))
reply: (((7 string-address))) (((5 string-address)))
reply: 1093 => ((5 string-address))
setm: ((5 string-address)) <= 1093
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 5 to 1093
schedule: done with routine
