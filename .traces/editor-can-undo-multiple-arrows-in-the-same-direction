parse: instruction: assume-screen
parse:   ingredient: {name: "10", properties: ["10": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "abc\ndef\nghi", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "10", properties: ["10": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: editor-render
parse:   ingredient: {name: "screen", properties: ["screen": ]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    left-click 2, 1\n    press right-arrow\n    press right-arrow\n    press up-arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    3 <- 1\n    4 <- 3\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press ctrl-z\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    3 <- 2\n    4 <- 3\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press ctrl-z\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    3 <- 2\n    4 <- 1\n  ", properties: [_: "literal-string"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe scenario-editor-can-undo-multiple-arrows-in-the-same-direction
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: editor-render ...
after-brace: assume-console ...
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
after-brace: memory-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: memory-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 101 run: screen:address <- new-fake-screen 10/width, 5/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 10 in location 1010
 102 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 10
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 50 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 50
9999 mem: array size is 50
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1115
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1117
 103 run: break-unless sc, 
9999 mem: location 1117 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1118
 103 run: max:number <- length *buf
9999 mem: location 1118 is 1014
9999 mem: storing 50 in location 1119
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1120
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 0
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 0
9999 mem: storing 1015 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1015
9999 mem: location 1123 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1122 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 7 in location 1016
 103 run: i <- add i, 1
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 1
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 1
9999 mem: storing 1017 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1017
9999 mem: location 1123 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1122 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 7 in location 1018
 103 run: i <- add i, 1
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 2
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 2
9999 mem: storing 1019 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1019
9999 mem: location 1123 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1122 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 7 in location 1020
 103 run: i <- add i, 1
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 3
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 3
9999 mem: storing 1021 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1021
9999 mem: location 1123 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1122 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 7 in location 1022
 103 run: i <- add i, 1
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 4
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 4
9999 mem: storing 1023 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1023
9999 mem: location 1123 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1122 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 7 in location 1024
 103 run: i <- add i, 1
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 5
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 5
9999 mem: storing 1025 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1025
9999 mem: location 1123 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1122 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 7 in location 1026
 103 run: i <- add i, 1
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 6
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 6
9999 mem: storing 1027 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1027
9999 mem: location 1123 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1122 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 7 in location 1028
 103 run: i <- add i, 1
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 7
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 7
9999 mem: storing 1029 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1029
9999 mem: location 1123 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1122 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 7 in location 1030
 103 run: i <- add i, 1
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 8
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 8
9999 mem: storing 1031 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1031
9999 mem: location 1123 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1122 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 7 in location 1032
 103 run: i <- add i, 1
9999 mem: location 1120 is 8
9999 mem: storing 9 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 9
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 9
9999 mem: storing 1033 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1033
9999 mem: location 1123 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1122 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 7 in location 1034
 103 run: i <- add i, 1
9999 mem: location 1120 is 9
9999 mem: storing 10 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 10
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 10
9999 mem: storing 1035 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1035
9999 mem: location 1123 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1122 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 7 in location 1036
 103 run: i <- add i, 1
9999 mem: location 1120 is 10
9999 mem: storing 11 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 11
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 11
9999 mem: storing 1037 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1037
9999 mem: location 1123 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1122 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 7 in location 1038
 103 run: i <- add i, 1
9999 mem: location 1120 is 11
9999 mem: storing 12 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 12
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 12
9999 mem: storing 1039 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1039
9999 mem: location 1123 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1122 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 7 in location 1040
 103 run: i <- add i, 1
9999 mem: location 1120 is 12
9999 mem: storing 13 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 13
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 13
9999 mem: storing 1041 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1041
9999 mem: location 1123 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1122 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 7 in location 1042
 103 run: i <- add i, 1
9999 mem: location 1120 is 13
9999 mem: storing 14 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 14
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 14
9999 mem: storing 1043 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1043
9999 mem: location 1123 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1122 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 7 in location 1044
 103 run: i <- add i, 1
9999 mem: location 1120 is 14
9999 mem: storing 15 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 15
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 15
9999 mem: storing 1045 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1045
9999 mem: location 1123 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1122 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 7 in location 1046
 103 run: i <- add i, 1
9999 mem: location 1120 is 15
9999 mem: storing 16 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 16
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 16
9999 mem: storing 1047 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1047
9999 mem: location 1123 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1122 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 7 in location 1048
 103 run: i <- add i, 1
9999 mem: location 1120 is 16
9999 mem: storing 17 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 17
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 17
9999 mem: storing 1049 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1049
9999 mem: location 1123 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1122 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 7 in location 1050
 103 run: i <- add i, 1
9999 mem: location 1120 is 17
9999 mem: storing 18 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 18
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 18
9999 mem: storing 1051 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1051
9999 mem: location 1123 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1122 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 7 in location 1052
 103 run: i <- add i, 1
9999 mem: location 1120 is 18
9999 mem: storing 19 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 19
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 19
9999 mem: storing 1053 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1053
9999 mem: location 1123 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1122 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 7 in location 1054
 103 run: i <- add i, 1
9999 mem: location 1120 is 19
9999 mem: storing 20 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 20
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 20
9999 mem: storing 1055 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1055
9999 mem: location 1123 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1122 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 7 in location 1056
 103 run: i <- add i, 1
9999 mem: location 1120 is 20
9999 mem: storing 21 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 21
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 21
9999 mem: storing 1057 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1057
9999 mem: location 1123 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1122 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 7 in location 1058
 103 run: i <- add i, 1
9999 mem: location 1120 is 21
9999 mem: storing 22 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 22
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 22
9999 mem: storing 1059 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1059
9999 mem: location 1123 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1122 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 7 in location 1060
 103 run: i <- add i, 1
9999 mem: location 1120 is 22
9999 mem: storing 23 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 23
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 23
9999 mem: storing 1061 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1061
9999 mem: location 1123 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1122 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 7 in location 1062
 103 run: i <- add i, 1
9999 mem: location 1120 is 23
9999 mem: storing 24 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 24
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 24
9999 mem: storing 1063 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1063
9999 mem: location 1123 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1122 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 7 in location 1064
 103 run: i <- add i, 1
9999 mem: location 1120 is 24
9999 mem: storing 25 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 25
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 25
9999 mem: storing 1065 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1065
9999 mem: location 1123 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1122 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 7 in location 1066
 103 run: i <- add i, 1
9999 mem: location 1120 is 25
9999 mem: storing 26 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 26
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 26
9999 mem: storing 1067 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1067
9999 mem: location 1123 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1122 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 7 in location 1068
 103 run: i <- add i, 1
9999 mem: location 1120 is 26
9999 mem: storing 27 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 27
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 27
9999 mem: storing 1069 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1069
9999 mem: location 1123 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1122 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 7 in location 1070
 103 run: i <- add i, 1
9999 mem: location 1120 is 27
9999 mem: storing 28 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 28
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 28
9999 mem: storing 1071 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1071
9999 mem: location 1123 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1122 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 7 in location 1072
 103 run: i <- add i, 1
9999 mem: location 1120 is 28
9999 mem: storing 29 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 29
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 29
9999 mem: storing 1073 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1073
9999 mem: location 1123 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1122 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 7 in location 1074
 103 run: i <- add i, 1
9999 mem: location 1120 is 29
9999 mem: storing 30 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 30
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 30
9999 mem: storing 1075 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1075
9999 mem: location 1123 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1122 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 7 in location 1076
 103 run: i <- add i, 1
9999 mem: location 1120 is 30
9999 mem: storing 31 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 31
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 31
9999 mem: storing 1077 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1077
9999 mem: location 1123 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1122 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 7 in location 1078
 103 run: i <- add i, 1
9999 mem: location 1120 is 31
9999 mem: storing 32 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 32
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 32
9999 mem: storing 1079 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1079
9999 mem: location 1123 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1122 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 7 in location 1080
 103 run: i <- add i, 1
9999 mem: location 1120 is 32
9999 mem: storing 33 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 33
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 33
9999 mem: storing 1081 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1081
9999 mem: location 1123 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1122 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 7 in location 1082
 103 run: i <- add i, 1
9999 mem: location 1120 is 33
9999 mem: storing 34 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 34
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 34
9999 mem: storing 1083 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1083
9999 mem: location 1123 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1122 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 7 in location 1084
 103 run: i <- add i, 1
9999 mem: location 1120 is 34
9999 mem: storing 35 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 35
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 35
9999 mem: storing 1085 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1085
9999 mem: location 1123 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1122 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 7 in location 1086
 103 run: i <- add i, 1
9999 mem: location 1120 is 35
9999 mem: storing 36 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 36
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 36
9999 mem: storing 1087 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1087
9999 mem: location 1123 is 1087
9999 mem: storing 0 in location 1087
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 0
9999 mem: location 1122 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 7 in location 1088
 103 run: i <- add i, 1
9999 mem: location 1120 is 36
9999 mem: storing 37 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 37
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 37
9999 mem: storing 1089 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1089
9999 mem: location 1123 is 1089
9999 mem: storing 0 in location 1089
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 0
9999 mem: location 1122 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 7 in location 1090
 103 run: i <- add i, 1
9999 mem: location 1120 is 37
9999 mem: storing 38 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 38
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 38
9999 mem: storing 1091 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1091
9999 mem: location 1123 is 1091
9999 mem: storing 0 in location 1091
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1122 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 7 in location 1092
 103 run: i <- add i, 1
9999 mem: location 1120 is 38
9999 mem: storing 39 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 39
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 39
9999 mem: storing 1093 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1093
9999 mem: location 1123 is 1093
9999 mem: storing 0 in location 1093
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1122 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 7 in location 1094
 103 run: i <- add i, 1
9999 mem: location 1120 is 39
9999 mem: storing 40 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 40
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 40
9999 mem: storing 1095 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1095
9999 mem: location 1123 is 1095
9999 mem: storing 0 in location 1095
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1122 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 7 in location 1096
 103 run: i <- add i, 1
9999 mem: location 1120 is 40
9999 mem: storing 41 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 41
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 41
9999 mem: storing 1097 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1097
9999 mem: location 1123 is 1097
9999 mem: storing 0 in location 1097
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1122 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 7 in location 1098
 103 run: i <- add i, 1
9999 mem: location 1120 is 41
9999 mem: storing 42 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 42
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 42
9999 mem: storing 1099 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1099
9999 mem: location 1123 is 1099
9999 mem: storing 0 in location 1099
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1122 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 7 in location 1100
 103 run: i <- add i, 1
9999 mem: location 1120 is 42
9999 mem: storing 43 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 43
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 43
9999 mem: storing 1101 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1101
9999 mem: location 1123 is 1101
9999 mem: storing 0 in location 1101
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1122 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 7 in location 1102
 103 run: i <- add i, 1
9999 mem: location 1120 is 43
9999 mem: storing 44 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 44
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 44
9999 mem: storing 1103 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1103
9999 mem: location 1123 is 1103
9999 mem: storing 0 in location 1103
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1122 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 7 in location 1104
 103 run: i <- add i, 1
9999 mem: location 1120 is 44
9999 mem: storing 45 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 45
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 45
9999 mem: storing 1105 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1105
9999 mem: location 1123 is 1105
9999 mem: storing 0 in location 1105
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1122 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 7 in location 1106
 103 run: i <- add i, 1
9999 mem: location 1120 is 45
9999 mem: storing 46 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 46
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 46
9999 mem: storing 1107 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1107
9999 mem: location 1123 is 1107
9999 mem: storing 0 in location 1107
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1122 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 7 in location 1108
 103 run: i <- add i, 1
9999 mem: location 1120 is 46
9999 mem: storing 47 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 47
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 47
9999 mem: storing 1109 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1109
9999 mem: location 1123 is 1109
9999 mem: storing 0 in location 1109
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1122 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 7 in location 1110
 103 run: i <- add i, 1
9999 mem: location 1120 is 47
9999 mem: storing 48 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 48
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 48
9999 mem: storing 1111 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1111
9999 mem: location 1123 is 1111
9999 mem: storing 0 in location 1111
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1122 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 7 in location 1112
 103 run: i <- add i, 1
9999 mem: location 1120 is 48
9999 mem: storing 49 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 49
9999 mem: location 1119 is 50
9999 mem: storing 0 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1118 is 1014
9999 mem: location 1120 is 49
9999 mem: storing 1113 in location 1122
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1123
 103 run: *curr-content <- copy [ ]
9999 mem: location 1123 is 1113
9999 mem: location 1123 is 1113
9999 mem: storing 0 in location 1113
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1122 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1122 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1124
 103 run: *curr-color <- copy 7/white
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 7 in location 1114
 103 run: i <- add i, 1
9999 mem: location 1120 is 49
9999 mem: storing 50 in location 1120
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1120 is 50
9999 mem: location 1119 is 50
9999 mem: storing 1 in location 1121
 103 run: break-if done?, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 17
 103 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1125
 103 run: *x <- copy 0
9999 mem: location 1125 is 1011
9999 mem: location 1125 is 1011
9999 mem: storing 0 in location 1011
 103 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1117 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1117 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1125
 103 run: *x <- copy 0
9999 mem: location 1125 is 1012
9999 mem: location 1125 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1117 is 1009
 102 run: reply result
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [abc
def
ghi]
9999 mem: storing 1126 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0/left, 10/right
9999 mem: location 1 is 1126
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1138
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1140
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1142
 102 run: right:number <- next-ingredient 
9999 mem: storing 10 in location 1143
 102 run: right <- subtract right, 1
9999 mem: location 1143 is 10
9999 mem: storing 9 in location 1143
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: storing 1115 in location 1144
 102 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1145
 102 run: *x <- copy left
9999 mem: location 1142 is 0
9999 mem: location 1145 is 1119
9999 mem: location 1145 is 1119
9999 mem: storing 0 in location 1119
 102 run: x <- get-address *result, right:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1145
 102 run: *x <- copy right
9999 mem: location 1143 is 9
9999 mem: location 1145 is 1120
9999 mem: location 1145 is 1120
9999 mem: storing 9 in location 1120
 102 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1145
 102 run: *x <- copy 1/top
9999 mem: location 1145 is 1121
9999 mem: location 1145 is 1121
9999 mem: storing 1 in location 1121
 102 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1145
 102 run: *x <- copy left
9999 mem: location 1142 is 0
9999 mem: location 1145 is 1122
9999 mem: location 1145 is 1122
9999 mem: storing 0 in location 1122
 102 run: init:address:address:duplex-list <- get-address *result, data:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1146
schedule: new-editor/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 102 run: *init <- push-duplex 167/§, 0/tail
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1150
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1152
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1153
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1158
9999 mem: storing 1158 in location 1154
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1154 is 1158
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1154 is 1158
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1155
 103 run: *val <- copy x
9999 mem: location 1152 is 167
9999 mem: location 1155 is 1158
9999 mem: location 1155 is 1158
9999 mem: storing 167 in location 1158
 103 run: next:address:address:duplex-list <- get-address *result, next:offset
9999 mem: location 1154 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1154 is 1158
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1156
 103 run: *next <- copy in
9999 mem: location 1153 is 0
9999 mem: location 1156 is 1159
9999 mem: location 1156 is 1159
9999 mem: storing 0 in location 1159
 103 run: jump-if in, 1:offset
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 103 run: reply result
9999 mem: location 1154 is 1158
9999 run: result 0 is 1158
9999 mem: location 1146 is 1115
9999 mem: storing 1158 in location 1115
 102 run: top-of-screen:address:address:duplex-list <- get-address *result, top-of-screen:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1147
 102 run: *top-of-screen <- copy *init
9999 mem: location 1146 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1146 is 1115
9999 mem: location 1147 is 1116
9999 mem: location 1146 is 1115
9999 mem: location 1147 is 1116
9999 mem: storing 1158 in location 1116
 102 run: y:address:address:duplex-list <- get-address *result, before-cursor:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1148
 102 run: *y <- copy *init
9999 mem: location 1146 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1146 is 1115
9999 mem: location 1148 is 1118
9999 mem: location 1146 is 1115
9999 mem: location 1148 is 1118
9999 mem: storing 1158 in location 1118
 102 run: result <- insert-text result, s
9999 mem: location 1144 is 1115
9999 mem: location 1140 is 1126
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1002
 103 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1126 in location 1003
 103 run: jump-if text, 1:offset
9999 mem: location 1003 is 1126
9999 run: jumping to instruction 5
 103 run: len:number <- length *text
9999 mem: location 1003 is 1126
9999 mem: storing 11 in location 1004
 103 run: jump-if len, 1:offset
9999 mem: location 1004 is 11
9999 run: jumping to instruction 8
 103 run: idx:number <- copy 0
9999 mem: storing 0 in location 1005
 103 run: curr:address:duplex-list <- get *editor, data:offset
9999 mem: location 1002 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1002 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1158
9999 mem: storing 1158 in location 1006
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 0
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 0
9999 run: address to copy is 1127
9999 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 97
9999 mem: location 1006 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1161
9999 mem: storing 1161 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1154 is 1161
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 97
9999 mem: location 1155 is 1161
9999 mem: location 1155 is 1161
9999 mem: storing 97 in location 1161
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1153 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1153 is 1158
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1161
9999 mem: location 1157 is 1159
9999 mem: location 1157 is 1159
9999 mem: storing 1161 in location 1159
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1154 is 1161
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1158
9999 mem: location 1157 is 1163
9999 mem: location 1157 is 1163
9999 mem: storing 1158 in location 1163
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1158
9999 mem: location 1154 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1162
9999 mem: location 1157 is 1162
9999 mem: storing 0 in location 1162
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1161
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1164
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 0
9999 mem: storing 1 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 1
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 1
9999 run: address to copy is 1128
9999 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 98
9999 mem: location 1006 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1168
9999 mem: storing 1168 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1168
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1154 is 1168
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 98
9999 mem: location 1155 is 1168
9999 mem: location 1155 is 1168
9999 mem: storing 98 in location 1168
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1158
9999 mem: location 1153 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1158
9999 mem: location 1153 is 1161
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1168
9999 mem: location 1157 is 1162
9999 mem: location 1157 is 1162
9999 mem: storing 1168 in location 1162
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1154 is 1168
9999 run: address to copy is 1170
9999 mem: storing 1170 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1161
9999 mem: location 1157 is 1170
9999 mem: location 1157 is 1170
9999 mem: storing 1161 in location 1170
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1161
9999 mem: location 1154 is 1168
9999 run: address to copy is 1169
9999 mem: storing 1169 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1169
9999 mem: location 1157 is 1169
9999 mem: storing 0 in location 1169
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1168
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 1
9999 mem: storing 2 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 2
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 2
9999 run: address to copy is 1129
9999 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 99
9999 mem: location 1006 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1171
9999 mem: storing 1171 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1171
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1154 is 1171
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 99
9999 mem: location 1155 is 1171
9999 mem: location 1155 is 1171
9999 mem: storing 99 in location 1171
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1161
9999 mem: location 1153 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1161
9999 mem: location 1153 is 1168
9999 run: address to copy is 1169
9999 mem: storing 1169 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1171
9999 mem: location 1157 is 1169
9999 mem: location 1157 is 1169
9999 mem: storing 1171 in location 1169
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1154 is 1171
9999 run: address to copy is 1173
9999 mem: storing 1173 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1168
9999 mem: location 1157 is 1173
9999 mem: location 1157 is 1173
9999 mem: storing 1168 in location 1173
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1168
9999 mem: location 1154 is 1171
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1172
9999 mem: location 1157 is 1172
9999 mem: storing 0 in location 1172
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1171
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 2
9999 mem: storing 3 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 3
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 3
9999 run: address to copy is 1130
9999 run: its type is character
9999 mem: location 1130 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1174
9999 mem: storing 1174 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1174
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1154 is 1174
9999 run: address to copy is 1174
9999 mem: storing 1174 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 10
9999 mem: location 1155 is 1174
9999 mem: location 1155 is 1174
9999 mem: storing 10 in location 1174
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1168
9999 mem: location 1153 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1168
9999 mem: location 1153 is 1171
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1174
9999 mem: location 1157 is 1172
9999 mem: location 1157 is 1172
9999 mem: storing 1174 in location 1172
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1154 is 1174
9999 run: address to copy is 1176
9999 mem: storing 1176 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1171
9999 mem: location 1157 is 1176
9999 mem: location 1157 is 1176
9999 mem: storing 1171 in location 1176
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1171
9999 mem: location 1154 is 1174
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1157 is 1175
9999 mem: storing 0 in location 1175
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1174
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 3
9999 mem: storing 4 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 4
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 4
9999 run: address to copy is 1131
9999 run: its type is character
9999 mem: location 1131 is 100
9999 mem: storing 100 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 100
9999 mem: location 1006 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1177
9999 mem: storing 1177 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1177
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1154 is 1177
9999 run: address to copy is 1177
9999 mem: storing 1177 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 100
9999 mem: location 1155 is 1177
9999 mem: location 1155 is 1177
9999 mem: storing 100 in location 1177
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1171
9999 mem: location 1153 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 0
9999 mem: location 1176 is 1171
9999 mem: location 1153 is 1174
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1177
9999 mem: location 1157 is 1175
9999 mem: location 1157 is 1175
9999 mem: storing 1177 in location 1175
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1154 is 1177
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1174
9999 mem: location 1157 is 1179
9999 mem: location 1157 is 1179
9999 mem: storing 1174 in location 1179
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1174
9999 mem: location 1154 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1178
9999 mem: location 1157 is 1178
9999 mem: storing 0 in location 1178
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1177
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 4
9999 mem: storing 5 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 5
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 5
9999 run: address to copy is 1132
9999 run: its type is character
9999 mem: location 1132 is 101
9999 mem: storing 101 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 101
9999 mem: location 1006 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1180
9999 mem: storing 1180 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1154 is 1180
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 101
9999 mem: location 1155 is 1180
9999 mem: location 1155 is 1180
9999 mem: storing 101 in location 1180
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1174
9999 mem: location 1153 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1174
9999 mem: location 1153 is 1177
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1180
9999 mem: location 1157 is 1178
9999 mem: location 1157 is 1178
9999 mem: storing 1180 in location 1178
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1154 is 1180
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1177
9999 mem: location 1157 is 1182
9999 mem: location 1157 is 1182
9999 mem: storing 1177 in location 1182
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1177
9999 mem: location 1154 is 1180
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1181
9999 mem: location 1157 is 1181
9999 mem: storing 0 in location 1181
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1180
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 5
9999 mem: storing 6 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 6
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 6
9999 run: address to copy is 1133
9999 run: its type is character
9999 mem: location 1133 is 102
9999 mem: storing 102 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 102
9999 mem: location 1006 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1183
9999 mem: storing 1183 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1183
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1154 is 1183
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 102
9999 mem: location 1155 is 1183
9999 mem: location 1155 is 1183
9999 mem: storing 102 in location 1183
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1177
9999 mem: location 1153 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1177
9999 mem: location 1153 is 1180
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1183
9999 mem: location 1157 is 1181
9999 mem: location 1157 is 1181
9999 mem: storing 1183 in location 1181
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1154 is 1183
9999 run: address to copy is 1185
9999 mem: storing 1185 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1180
9999 mem: location 1157 is 1185
9999 mem: location 1157 is 1185
9999 mem: storing 1180 in location 1185
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 0
9999 mem: location 1185 is 1180
9999 mem: location 1154 is 1183
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1184
9999 mem: location 1157 is 1184
9999 mem: storing 0 in location 1184
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1183
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 6
9999 mem: storing 7 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 7
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 7
9999 run: address to copy is 1134
9999 run: its type is character
9999 mem: location 1134 is 10
9999 mem: storing 10 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 10
9999 mem: location 1006 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1186
9999 mem: storing 1186 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1186
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1154 is 1186
9999 run: address to copy is 1186
9999 mem: storing 1186 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 10
9999 mem: location 1155 is 1186
9999 mem: location 1155 is 1186
9999 mem: storing 10 in location 1186
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 0
9999 mem: location 1185 is 1180
9999 mem: location 1153 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 0
9999 mem: location 1185 is 1180
9999 mem: location 1153 is 1183
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1186
9999 mem: location 1157 is 1184
9999 mem: location 1157 is 1184
9999 mem: storing 1186 in location 1184
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1154 is 1186
9999 run: address to copy is 1188
9999 mem: storing 1188 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1183
9999 mem: location 1157 is 1188
9999 mem: location 1157 is 1188
9999 mem: storing 1183 in location 1188
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1183
9999 mem: location 1154 is 1186
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1187
9999 mem: location 1157 is 1187
9999 mem: storing 0 in location 1187
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1186
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 7
9999 mem: storing 8 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 8
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 8
9999 run: address to copy is 1135
9999 run: its type is character
9999 mem: location 1135 is 103
9999 mem: storing 103 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 103
9999 mem: location 1006 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 103 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1189
9999 mem: storing 1189 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1189
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1154 is 1189
9999 run: address to copy is 1189
9999 mem: storing 1189 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 103
9999 mem: location 1155 is 1189
9999 mem: location 1155 is 1189
9999 mem: storing 103 in location 1189
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1183
9999 mem: location 1153 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 0
9999 mem: location 1188 is 1183
9999 mem: location 1153 is 1186
9999 run: address to copy is 1187
9999 mem: storing 1187 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1189
9999 mem: location 1157 is 1187
9999 mem: location 1157 is 1187
9999 mem: storing 1189 in location 1187
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1154 is 1189
9999 run: address to copy is 1191
9999 mem: storing 1191 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1186
9999 mem: location 1157 is 1191
9999 mem: location 1157 is 1191
9999 mem: storing 1186 in location 1191
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 0
9999 mem: location 1191 is 1186
9999 mem: location 1154 is 1189
9999 run: address to copy is 1190
9999 mem: storing 1190 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1190
9999 mem: location 1157 is 1190
9999 mem: storing 0 in location 1190
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1189
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 8
9999 mem: storing 9 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 9
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 9
9999 run: address to copy is 1136
9999 run: its type is character
9999 mem: location 1136 is 104
9999 mem: storing 104 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 104
9999 mem: location 1006 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 104 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1192
9999 mem: storing 1192 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1192
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1154 is 1192
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 104
9999 mem: location 1155 is 1192
9999 mem: location 1155 is 1192
9999 mem: storing 104 in location 1192
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 0
9999 mem: location 1191 is 1186
9999 mem: location 1153 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 0
9999 mem: location 1191 is 1186
9999 mem: location 1153 is 1189
9999 run: address to copy is 1190
9999 mem: storing 1190 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1192
9999 mem: location 1157 is 1190
9999 mem: location 1157 is 1190
9999 mem: storing 1192 in location 1190
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1154 is 1192
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1189
9999 mem: location 1157 is 1194
9999 mem: location 1157 is 1194
9999 mem: storing 1189 in location 1194
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1189
9999 mem: location 1154 is 1192
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1193
9999 mem: location 1157 is 1193
9999 mem: storing 0 in location 1193
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1192
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 9
9999 mem: storing 10 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 10
9999 mem: location 1004 is 11
9999 mem: storing 0 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1003 is 1126
9999 mem: location 1005 is 10
9999 run: address to copy is 1137
9999 run: its type is character
9999 mem: location 1137 is 105
9999 mem: storing 105 in location 1008
 103 run: insert-duplex c, curr
9999 mem: location 1008 is 105
9999 mem: location 1006 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 105 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1195
9999 mem: storing 1195 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1195
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1154 is 1195
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 105
9999 mem: location 1155 is 1195
9999 mem: location 1155 is 1195
9999 mem: storing 105 in location 1195
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1189
9999 mem: location 1153 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 0
9999 mem: storing 0 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 0
9999 mem: location 1194 is 1189
9999 mem: location 1153 is 1192
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1195
9999 mem: location 1157 is 1193
9999 mem: location 1157 is 1193
9999 mem: storing 1195 in location 1193
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1154 is 1195
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1192
9999 mem: location 1157 is 1197
9999 mem: location 1157 is 1197
9999 mem: storing 1192 in location 1197
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1154 is 1195
9999 run: address to copy is 1196
9999 mem: storing 1196 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1196
9999 mem: location 1157 is 1196
9999 mem: storing 0 in location 1196
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1154 is 1195
 103 run: curr <- next-duplex curr
9999 mem: location 1006 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1006
 103 run: idx <- add idx, 1
9999 mem: location 1005 is 10
9999 mem: storing 11 in location 1005
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1005 is 11
9999 mem: location 1004 is 11
9999 mem: storing 1 in location 1007
 103 run: break-if done?, 
9999 mem: location 1007 is 1
9999 run: jumping to instruction 18
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1002 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1144
 102 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1148
 102 run: *y <- copy *init
9999 mem: location 1146 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1146 is 1115
9999 mem: location 1148 is 1118
9999 mem: location 1146 is 1115
9999 mem: location 1148 is 1118
9999 mem: storing 1158 in location 1118
 102 run: _, _, screen, result <- render screen, result
9999 mem: location 1141 is 1009
9999 mem: location 1144 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1198
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1200
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1201
 103 run: jump-if editor, 1:offset
9999 mem: location 1201 is 1115
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1202
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1200 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 104 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1203
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1204
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1205
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1205 is 1158
9999 mem: storing 1158 in location 1206
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1205
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1207
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1208
 103 run: column:number <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1210
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1211
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1212
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 1
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1225
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: break-unless curr, 
9999 mem: location 1205 is 1161
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1206 is 1158
9999 mem: location 1212 is 1118
9999 mem: location 1212 is 1118
9999 mem: storing 1158 in location 1118
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1205 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1232
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 97
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 97
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1243
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 10
9999 mem: storing 1035 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 97
9999 mem: location 1265 is 1035
9999 mem: location 1265 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1036
9999 mem: location 1266 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1168
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1205 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
schedule: get-color/render/new-editor/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 98
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 98
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 11
9999 mem: storing 1037 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 98
9999 mem: location 1265 is 1037
9999 mem: location 1265 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1038
9999 mem: location 1266 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1171
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1205 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 99
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 99
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 12
9999 mem: storing 1039 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 99
9999 mem: location 1265 is 1039
9999 mem: location 1265 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1040
9999 mem: location 1266 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1174
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1205 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1218
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1269
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 13
9999 mem: storing 1041 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1041
9999 mem: location 1265 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1042
9999 mem: location 1266 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 14
9999 mem: storing 1043 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1043
9999 mem: location 1265 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1044
9999 mem: location 1266 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 15
9999 mem: storing 1045 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1045
9999 mem: location 1265 is 1045
9999 mem: storing 32 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1046
9999 mem: location 1266 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 16
9999 mem: storing 1047 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1047
9999 mem: location 1265 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1048
9999 mem: location 1266 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
schedule: print-character/clear-line-delimited/render/new-editor/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 17
9999 mem: storing 1049 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1049
9999 mem: location 1265 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1050
9999 mem: location 1266 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 18
9999 mem: storing 1051 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1051
9999 mem: location 1265 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1052
9999 mem: location 1266 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 19
9999 mem: storing 1053 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1053
9999 mem: location 1265 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1054
9999 mem: location 1266 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1208 is 1
9999 mem: storing 2 in location 1208
 103 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 2
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1206
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1205 is 1177
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1205 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 100
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 100
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 20
9999 mem: storing 1055 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 100
9999 mem: location 1265 is 1055
9999 mem: location 1265 is 1055
9999 mem: storing 100 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1056
9999 mem: location 1266 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1180
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1205 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 101
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 101
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 21
9999 mem: storing 1057 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 101
9999 mem: location 1265 is 1057
9999 mem: location 1265 is 1057
9999 mem: storing 101 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1058
9999 mem: location 1266 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1183
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1205 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 102
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 102
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 22
9999 mem: storing 1059 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 102
9999 mem: location 1265 is 1059
9999 mem: location 1265 is 1059
9999 mem: storing 102 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1060
9999 mem: location 1266 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
schedule: next-duplex/render/new-editor/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1186
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1205 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 23
9999 mem: storing 1061 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1061
9999 mem: location 1265 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1062
9999 mem: location 1266 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 24
9999 mem: storing 1063 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1063
9999 mem: location 1265 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1064
9999 mem: location 1266 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 25
9999 mem: storing 1065 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1065
9999 mem: location 1265 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1066
9999 mem: location 1266 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 26
9999 mem: storing 1067 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1067
9999 mem: location 1265 is 1067
9999 mem: storing 32 in location 1067
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1068
9999 mem: location 1266 is 1068
9999 mem: storing 7 in location 1068
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 27
9999 mem: storing 1069 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1069
9999 mem: location 1265 is 1069
9999 mem: storing 32 in location 1069
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1070
9999 mem: location 1266 is 1070
9999 mem: storing 7 in location 1070
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 28
9999 mem: storing 1071 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1071
9999 mem: location 1265 is 1071
9999 mem: storing 32 in location 1071
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1072
9999 mem: location 1266 is 1072
9999 mem: storing 7 in location 1072
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 29
9999 mem: storing 1073 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1073
9999 mem: location 1265 is 1073
9999 mem: storing 32 in location 1073
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1074
9999 mem: location 1266 is 1074
9999 mem: storing 7 in location 1074
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1208 is 2
9999 mem: storing 3 in location 1208
 103 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 3
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1206
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1205 is 1189
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1205 is 1189
9999 run: address to copy is 1189
9999 run: its type is number
9999 mem: location 1189 is 103
9999 mem: storing 103 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 103
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
schedule: get-color/render/new-editor/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 103
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 103
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 103
  90 print-character: 103 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 30
9999 mem: storing 1075 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 103
9999 mem: location 1265 is 1075
9999 mem: location 1265 is 1075
9999 mem: storing 103 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1076
9999 mem: location 1266 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1192
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1205 is 1192
9999 run: address to copy is 1192
9999 run: its type is number
9999 mem: location 1192 is 104
9999 mem: storing 104 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 104
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 104
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 104
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 104
  90 print-character: 104 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 31
9999 mem: storing 1077 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 104
9999 mem: location 1265 is 1077
9999 mem: location 1265 is 1077
9999 mem: storing 104 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1078
9999 mem: location 1266 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1195
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1205 is 1195
9999 run: address to copy is 1195
9999 run: its type is number
9999 mem: location 1195 is 105
9999 mem: storing 105 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 105
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 105
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 105
  90 print-character: 105 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 32
9999 mem: storing 1079 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 105
9999 mem: location 1265 is 1079
9999 mem: location 1265 is 1079
9999 mem: storing 105 in location 1079
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1080
9999 mem: location 1266 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1195
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1195 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1195
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1166 is 1195
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1167
 104 run: reply result
9999 mem: location 1167 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1220
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1205 is 0
9999 mem: location 1220 is 1117
9999 mem: location 1220 is 1117
9999 mem: storing 0 in location 1117
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1221
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1214 is 0
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1222
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1223
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1224
 103 run: break-unless before-cursor?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1208 is 3
9999 mem: location 1209 is 3
9999 mem: location 1200 is 1009
9999 mem: location 1201 is 1115
9999 run: result 0 is 3
9999 run: result 1 is 3
9999 run: result 2 is 1009
9999 run: result 3 is 1115
9999 mem: storing 1009 in location 1141
9999 mem: storing 1115 in location 1144
 102 run: indent:address:boolean <- get-address *result, indent:offset
9999 mem: location 1144 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1144 is 1115
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1149
 102 run: *indent <- copy 1/true
9999 mem: location 1149 is 1123
9999 mem: location 1149 is 1123
9999 mem: storing 1 in location 1123
 102 run: reply result
9999 mem: location 1144 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 2
 101 run: editor-render screen, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1155
 102 run: row:number, column:number <- render screen, editor
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1200
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1201
 103 run: jump-if editor, 1:offset
9999 mem: location 1201 is 1115
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1202
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1200 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 104 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1203
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1204
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1205
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1205 is 1158
9999 mem: storing 1158 in location 1206
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1205
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1207
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1208
 103 run: column:number <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1210
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1211
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1212
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 1
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: break-unless curr, 
9999 mem: location 1205 is 1161
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1206 is 1158
9999 mem: location 1212 is 1118
9999 mem: location 1212 is 1118
9999 mem: storing 1158 in location 1118
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1205 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 97
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 97
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 10
9999 mem: storing 1035 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 97
9999 mem: location 1265 is 1035
9999 mem: location 1265 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1036
9999 mem: location 1266 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1168
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
schedule: render/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1205 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 98
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 98
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 11
9999 mem: storing 1037 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 98
9999 mem: location 1265 is 1037
9999 mem: location 1265 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1038
9999 mem: location 1266 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1171
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1205 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 99
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 99
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 12
9999 mem: storing 1039 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 99
9999 mem: location 1265 is 1039
9999 mem: location 1265 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1040
9999 mem: location 1266 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1174
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1205 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1218
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 13
9999 mem: storing 1041 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1041
9999 mem: location 1265 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1042
9999 mem: location 1266 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 14
9999 mem: storing 1043 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1043
9999 mem: location 1265 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1044
9999 mem: location 1266 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 15
9999 mem: storing 1045 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1045
9999 mem: location 1265 is 1045
9999 mem: storing 32 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1046
9999 mem: location 1266 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 16
9999 mem: storing 1047 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1047
9999 mem: location 1265 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1048
9999 mem: location 1266 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
schedule: print-character/clear-line-delimited/render/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 17
9999 mem: storing 1049 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1049
9999 mem: location 1265 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1050
9999 mem: location 1266 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 18
9999 mem: storing 1051 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1051
9999 mem: location 1265 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1052
9999 mem: location 1266 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 19
9999 mem: storing 1053 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1053
9999 mem: location 1265 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1054
9999 mem: location 1266 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1208 is 1
9999 mem: storing 2 in location 1208
 103 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 2
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1206
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1205 is 1177
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1205 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 100
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 100
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 20
9999 mem: storing 1055 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 100
9999 mem: location 1265 is 1055
9999 mem: location 1265 is 1055
9999 mem: storing 100 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1056
9999 mem: location 1266 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1180
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1205 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 101
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 101
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 21
9999 mem: storing 1057 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 101
9999 mem: location 1265 is 1057
9999 mem: location 1265 is 1057
9999 mem: storing 101 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1058
9999 mem: location 1266 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1183
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1205 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 102
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 102
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 22
9999 mem: storing 1059 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 102
9999 mem: location 1265 is 1059
9999 mem: location 1265 is 1059
9999 mem: storing 102 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1060
9999 mem: location 1266 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
schedule: print-character/render/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1186
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1205 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 23
9999 mem: storing 1061 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1061
9999 mem: location 1265 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1062
9999 mem: location 1266 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 24
9999 mem: storing 1063 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1063
9999 mem: location 1265 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1064
9999 mem: location 1266 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 25
9999 mem: storing 1065 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1065
9999 mem: location 1265 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1066
9999 mem: location 1266 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 26
9999 mem: storing 1067 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1067
9999 mem: location 1265 is 1067
9999 mem: storing 32 in location 1067
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1068
9999 mem: location 1266 is 1068
9999 mem: storing 7 in location 1068
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 27
9999 mem: storing 1069 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1069
9999 mem: location 1265 is 1069
9999 mem: storing 32 in location 1069
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1070
9999 mem: location 1266 is 1070
9999 mem: storing 7 in location 1070
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 28
9999 mem: storing 1071 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1071
9999 mem: location 1265 is 1071
9999 mem: storing 32 in location 1071
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1072
9999 mem: location 1266 is 1072
9999 mem: storing 7 in location 1072
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 29
9999 mem: storing 1073 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1073
9999 mem: location 1265 is 1073
9999 mem: storing 32 in location 1073
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1074
9999 mem: location 1266 is 1074
9999 mem: storing 7 in location 1074
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1208 is 2
9999 mem: storing 3 in location 1208
 103 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 3
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1206
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1205 is 1189
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
schedule: render/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1205 is 1189
9999 run: address to copy is 1189
9999 run: its type is number
9999 mem: location 1189 is 103
9999 mem: storing 103 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 103
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 103
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 103
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 103
  90 print-character: 103 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 30
9999 mem: storing 1075 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 103
9999 mem: location 1265 is 1075
9999 mem: location 1265 is 1075
9999 mem: storing 103 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1076
9999 mem: location 1266 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1192
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1205 is 1192
9999 run: address to copy is 1192
9999 run: its type is number
9999 mem: location 1192 is 104
9999 mem: storing 104 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 104
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 104
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 104
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 104
  90 print-character: 104 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 31
9999 mem: storing 1077 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 104
9999 mem: location 1265 is 1077
9999 mem: location 1265 is 1077
9999 mem: storing 104 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1078
9999 mem: location 1266 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1195
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1205 is 1195
9999 run: address to copy is 1195
9999 run: its type is number
9999 mem: location 1195 is 105
9999 mem: storing 105 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 105
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 105
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 105
  90 print-character: 105 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 32
9999 mem: storing 1079 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 105
9999 mem: location 1265 is 1079
9999 mem: location 1265 is 1079
9999 mem: storing 105 in location 1079
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1080
9999 mem: location 1266 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1195
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1195 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1195
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1166 is 1195
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1167
 104 run: reply result
9999 mem: location 1167 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1220
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1205 is 0
9999 mem: location 1220 is 1117
9999 mem: location 1220 is 1117
9999 mem: storing 0 in location 1117
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1214
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1221
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1214 is 0
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1222
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1223
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1224
 103 run: break-unless before-cursor?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1208 is 3
9999 mem: location 1209 is 3
9999 mem: location 1200 is 1009
9999 mem: location 1201 is 1115
9999 run: result 0 is 3
9999 run: result 1 is 3
9999 mem: storing 3 in location 1156
9999 mem: storing 3 in location 1157
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1152 is 1009
9999 mem: location 1157 is 3
9999 mem: location 1155 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 103 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 103 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 33
9999 mem: storing 1081 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1264 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1081
9999 mem: location 1265 is 1081
9999 mem: storing 32 in location 1081
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1264 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1082
9999 mem: location 1266 is 1082
9999 mem: storing 7 in location 1082
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 34
9999 mem: storing 1083 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1264 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1083
9999 mem: location 1265 is 1083
9999 mem: storing 32 in location 1083
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1264 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1084
9999 mem: location 1266 is 1084
9999 mem: storing 7 in location 1084
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 35
9999 mem: storing 1085 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1264 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1085
9999 mem: location 1265 is 1085
9999 mem: storing 32 in location 1085
schedule: print-character/clear-line-delimited/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1264 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1086
9999 mem: location 1266 is 1086
9999 mem: storing 7 in location 1086
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 36
9999 mem: storing 1087 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1087
9999 mem: location 1087 is 0
9999 mem: location 1088 is 7
9999 mem: location 1264 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1087
9999 mem: location 1265 is 1087
9999 mem: storing 32 in location 1087
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1264 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1088
9999 mem: location 1266 is 1088
9999 mem: storing 7 in location 1088
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 37
9999 mem: storing 1089 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1089
9999 mem: location 1089 is 0
9999 mem: location 1090 is 7
9999 mem: location 1264 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1089
9999 mem: location 1265 is 1089
9999 mem: storing 32 in location 1089
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1264 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1090
9999 mem: location 1266 is 1090
9999 mem: storing 7 in location 1090
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 38
9999 mem: storing 1091 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1091
9999 mem: location 1091 is 0
9999 mem: location 1092 is 7
9999 mem: location 1264 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1091
9999 mem: location 1265 is 1091
9999 mem: storing 32 in location 1091
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1264 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1092
9999 mem: location 1266 is 1092
9999 mem: storing 7 in location 1092
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 39
9999 mem: storing 1093 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1093
9999 mem: location 1093 is 0
9999 mem: location 1094 is 7
9999 mem: location 1264 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1093
9999 mem: location 1265 is 1093
9999 mem: storing 32 in location 1093
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1264 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1094
9999 mem: location 1266 is 1094
9999 mem: storing 7 in location 1094
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1156 is 3
9999 mem: storing 4 in location 1156
 102 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1152 is 1009
9999 mem: location 1156 is 4
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1275
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1277
 103 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1278
 103 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1279
 103 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1280
 103 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1281
9999 mem: storing 1 in location 1282
 103 run: break-if style-found?, 
9999 mem: location 1282 is 1
9999 run: jumping to instruction 9
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
 103 run: break-if color-found?, 
9999 mem: location 1284 is 0
9999 run: jump-if fell through
 103 run: color <- copy 245/grey
9999 mem: storing 245 in location 1283
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
 103 run: break-if bg-color-found?, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1285
 103 run: screen <- move-cursor screen, row, x
9999 mem: location 1277 is 1009
9999 mem: location 1278 is 4
9999 mem: location 1279 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1277
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 0
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 40
9999 mem: storing 1095 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1095
9999 mem: location 1095 is 0
9999 mem: location 1096 is 7
9999 mem: location 1264 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1095
9999 mem: location 1265 is 1095
9999 mem: storing 9480 in location 1095
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 7
9999 mem: location 1264 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1096
9999 mem: location 1266 is 1096
9999 mem: storing 245 in location 1096
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 0
9999 mem: storing 1 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 1
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 41
9999 mem: storing 1097 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 7
9999 mem: location 1264 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1097
9999 mem: location 1265 is 1097
9999 mem: storing 9480 in location 1097
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 7
9999 mem: location 1264 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1098
9999 mem: location 1266 is 1098
9999 mem: storing 245 in location 1098
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 1
9999 mem: storing 2 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 2
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 42
9999 mem: storing 1099 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1099
9999 mem: location 1099 is 0
9999 mem: location 1100 is 7
9999 mem: location 1264 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1099
9999 mem: location 1265 is 1099
9999 mem: storing 9480 in location 1099
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 7
9999 mem: location 1264 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1100
9999 mem: location 1266 is 1100
9999 mem: storing 245 in location 1100
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 2
9999 mem: storing 3 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 3
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 43
9999 mem: storing 1101 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1101
9999 mem: location 1101 is 0
9999 mem: location 1102 is 7
9999 mem: location 1264 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1101
9999 mem: location 1265 is 1101
9999 mem: storing 9480 in location 1101
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 7
9999 mem: location 1264 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1102
9999 mem: location 1266 is 1102
9999 mem: storing 245 in location 1102
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 4
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
schedule: print-character/draw-horizontal/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 44
9999 mem: storing 1103 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1103
9999 mem: location 1103 is 0
9999 mem: location 1104 is 7
9999 mem: location 1264 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1103
9999 mem: location 1265 is 1103
9999 mem: storing 9480 in location 1103
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 7
9999 mem: location 1264 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1104
9999 mem: location 1266 is 1104
9999 mem: storing 245 in location 1104
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 5
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 45
9999 mem: storing 1105 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1106 is 7
9999 mem: location 1264 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1105
9999 mem: location 1265 is 1105
9999 mem: storing 9480 in location 1105
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1105
9999 mem: location 1105 is 9480
9999 mem: location 1106 is 7
9999 mem: location 1264 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1106
9999 mem: location 1266 is 1106
9999 mem: storing 245 in location 1106
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 5
9999 mem: storing 6 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 6
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 46
9999 mem: storing 1107 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1107
9999 mem: location 1107 is 0
9999 mem: location 1108 is 7
9999 mem: location 1264 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1107
9999 mem: location 1265 is 1107
9999 mem: storing 9480 in location 1107
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1107
9999 mem: location 1107 is 9480
9999 mem: location 1108 is 7
9999 mem: location 1264 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1108
9999 mem: location 1266 is 1108
9999 mem: storing 245 in location 1108
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 6
9999 mem: storing 7 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 7
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 47
9999 mem: storing 1109 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1109
9999 mem: location 1109 is 0
9999 mem: location 1110 is 7
9999 mem: location 1264 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1109
9999 mem: location 1265 is 1109
9999 mem: storing 9480 in location 1109
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1109
9999 mem: location 1109 is 9480
9999 mem: location 1110 is 7
9999 mem: location 1264 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1110
9999 mem: location 1266 is 1110
9999 mem: storing 245 in location 1110
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 7
9999 mem: storing 8 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 8
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 48
9999 mem: storing 1111 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 7
9999 mem: location 1264 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1111
9999 mem: location 1265 is 1111
9999 mem: storing 9480 in location 1111
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1111
9999 mem: location 1111 is 9480
9999 mem: location 1112 is 7
9999 mem: location 1264 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1112
9999 mem: location 1266 is 1112
9999 mem: storing 245 in location 1112
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 8
9999 mem: storing 9 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 9
9999 mem: location 1280 is 9
9999 mem: storing 1 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1277 is 1009
9999 mem: location 1281 is 9480
9999 mem: location 1283 is 245
9999 mem: location 1285 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 49
9999 mem: storing 1113 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1113
9999 mem: location 1113 is 0
9999 mem: location 1114 is 7
9999 mem: location 1264 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1113
9999 mem: location 1265 is 1113
9999 mem: storing 9480 in location 1113
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1113
9999 mem: location 1113 is 9480
9999 mem: location 1114 is 7
9999 mem: location 1264 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1114
9999 mem: location 1266 is 1114
9999 mem: storing 245 in location 1114
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1279 is 9
9999 mem: storing 10 in location 1279
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1279 is 10
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1287
 103 run: break-unless continue?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 27
 102 run: row <- add row, 1
9999 mem: location 1156 is 4
9999 mem: storing 5 in location 1156
 102 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1152 is 1009
9999 mem: location 1156 is 5
9999 mem: location 1154 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1227
 103 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1228
 103 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1230
 103 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1231
 103 run: break-if screen, 
9999 mem: location 1227 is 1009
9999 run: jumping to instruction 10
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1288
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1291
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 104 run: break-unless sc, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1293
 104 run: *row <- copy new-row
9999 mem: location 1291 is 5
9999 mem: location 1293 is 1011
9999 mem: location 1293 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1294
 104 run: *column <- copy new-column
9999 mem: location 1292 is 0
9999 mem: location 1294 is 1012
9999 mem: location 1294 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1290 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1227
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1227 is 1009
9999 mem: location 1229 is 0
9999 mem: location 1231 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 0
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 0
9999 mem: storing 1 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 1
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 1
9999 mem: storing 2 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 2
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 2
9999 mem: storing 3 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
schedule: clear-line-delimited/clear-screen-from/editor-render/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1230 is 0
9999 mem: location 1231 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1295
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1298
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1299
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1300
 104 run: row <- add row, 1
9999 mem: location 1298 is 5
9999 mem: storing 6 in location 1298
 104 run: screen <- move-cursor screen, row, left
9999 mem: location 1297 is 1009
9999 mem: location 1298 is 6
9999 mem: location 1299 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1291
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 105 run: break-unless sc, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1293
 105 run: *row <- copy new-row
9999 mem: location 1291 is 6
9999 mem: location 1293 is 1011
9999 mem: location 1293 is 1011
9999 mem: storing 6 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1294
 105 run: *column <- copy new-column
9999 mem: location 1292 is 0
9999 mem: location 1294 is 1012
9999 mem: location 1294 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1290 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1297 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 105 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 105 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1301
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1298 is 6
9999 mem: location 1301 is 5
9999 mem: storing 1 in location 1302
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1302 is 1
9999 run: jumping to instruction 15
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1227 is 1009
 101 run: assume-console [
    left-click 2, 1
    press right-arrow
    press right-arrow
    press up-arrow
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "right-arrow", properties: ["right-arrow": ]}
parse: instruction: press
parse:   ingredient: {name: "right-arrow", properties: ["right-arrow": ]}
parse: instruction: press
parse:   ingredient: {name: "up-arrow", properties: ["up-arrow": ]}
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1320
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1277
 102 run: console:address <- next-ingredient 
9999 mem: storing 1320 in location 1278
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1279
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1320
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1322
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1320 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1320
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1321
9999 run: its type is address
9999 mem: location 1321 is 1303
9999 mem: storing 1303 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1303
9999 mem: storing 4 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 0
9999 mem: location 1327 is 4
9999 mem: storing 0 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1326 is 1303
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 0
9999 run: address to copy is 1304
9999 run: its type is event
9999 mem: location 1304 is 2
9999 mem: location 1305 is 65513
9999 mem: location 1306 is 2
9999 mem: location 1307 is 1
9999 mem: storing 2 in location 1330
9999 mem: storing 65513 in location 1331
9999 mem: storing 2 in location 1332
9999 mem: storing 1 in location 1333
 103 run: *idx <- add *idx, 1
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 0
9999 mem: location 1325 is 1320
9999 mem: storing 1 in location 1320
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1330 is 2
9999 mem: location 1331 is 65513
9999 mem: location 1332 is 2
9999 mem: location 1333 is 1
9999 mem: location 1324 is 1320
9999 run: result 0 is [2, 65513, 2, 1]
9999 run: result 1 is 1320
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1280
9999 mem: storing 65513 in location 1281
9999 mem: storing 2 in location 1282
9999 mem: storing 1 in location 1283
9999 mem: storing 1320 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 2
9999 mem: location 1281 is 65513
9999 mem: location 1282 is 2
9999 mem: location 1283 is 1
9999 mem: storing 1281 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 1281
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1286 is 1281
9999 mem: location 1281 is 65513
9999 mem: location 1282 is 2
9999 mem: location 1283 is 1
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1335
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1337
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1338
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1339
9999 mem: storing 2 in location 1340
9999 mem: storing 1 in location 1341
 103 run: jump-if editor, 1:offset
9999 mem: location 1338 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 1
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 1
9999 mem: storing 1 in location 1342
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1343
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1342 is 1
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1344
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1344 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1345
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1342 is 1
9999 mem: location 1345 is 9
9999 mem: storing 0 in location 1346
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1346 is 0
9999 run: jumping to instruction 15
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1347
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1348
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1349
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 1
9999 run: address to copy is 1340
9999 run: its type is number
9999 mem: location 1340 is 2
9999 mem: storing 2 in location 1350
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 1
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 1
9999 mem: storing 1 in location 1342
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1337 is 1009
9999 mem: location 1338 is 1115
9999 mem: location 1350 is 2
9999 mem: location 1342 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1200
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1201
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1202
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 1 in location 1203
 104 run: jump-if editor, 1:offset
9999 mem: location 1201 is 1115
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1204
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1205
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1200 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 105 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 105 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1206
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1207
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1207 is 1158
9999 mem: storing 1158 in location 1208
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1207
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1209
 104 run: column:number <- copy left
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1210
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1211
 104 run: *cursor-row <- copy target-row
9999 mem: location 1202 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1211 is 1121
9999 mem: storing 2 in location 1121
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1212
 104 run: *cursor-column <- copy target-column
9999 mem: location 1203 is 1
9999 mem: location 1212 is 1122
9999 mem: location 1212 is 1122
9999 mem: storing 1 in location 1122
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1213
 104 run: break-unless curr, 
9999 mem: location 1207 is 1161
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1207 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 97
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 0
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1168
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1207 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 98
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 1
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1171
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1207 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 99
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 2
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1174
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1207 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 104 run: column <- copy left
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1210
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1208
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1207 is 1177
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 0
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1207 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 100
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 0
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1180
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1208 is 1177
9999 mem: location 1213 is 1118
9999 mem: location 1213 is 1118
9999 mem: storing 1177 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1207 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 101
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 1
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1183
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1207 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 102
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 2
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1183
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1186
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1207 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1219
 104 run: break-unless left-of-cursor?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 104 run: column <- copy left
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1210
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1186
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1183
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1208
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1207 is 1189
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 3
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1207 is 1189
9999 run: address to copy is 1189
9999 run: its type is number
9999 mem: location 1189 is 103
9999 mem: storing 103 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 103
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 0
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1189
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1186
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1192
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 3
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1207 is 1192
9999 run: address to copy is 1192
9999 run: its type is number
9999 mem: location 1192 is 104
9999 mem: storing 104 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 104
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 1
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1192
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1189
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1195
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 3
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1207 is 1195
9999 run: address to copy is 1195
9999 run: its type is number
9999 mem: location 1195 is 105
9999 mem: storing 105 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 105
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 2
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1195
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1195 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1195
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1166 is 1195
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1167
 105 run: reply result
9999 mem: location 1167 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1192
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1215
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1221
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1215 is 0
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1222
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1223
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1224
 104 run: break-unless before-cursor?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1201 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1338
 103 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1351
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1352
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1353
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1338 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1338 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1354
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 43
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1363
9999 mem: storing 1363 in location 1356
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1347 is 1
9999 mem: location 1348 is 0
9999 mem: location 1349 is 1158
9999 mem: location 1352 is 2
9999 mem: location 1353 is 1
9999 mem: location 1354 is 1158
9999 mem: location 1351 is 0
9999 mem: location 1356 is 1363
9999 mem: location 1356 is 1363
9999 mem: storing 1 in location 1363
9999 mem: storing 1 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 1158 in location 1366
9999 mem: storing 2 in location 1367
9999 mem: storing 1 in location 1368
9999 mem: storing 1158 in location 1369
9999 mem: storing 0 in location 1370
 103 run: editor <- add-operation editor, op
9999 mem: location 1338 is 1115
9999 mem: location 1356 is 1363
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1271
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1363 in location 1272
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1273
 104 run: *undo <- push op, *undo
9999 mem: location 1272 is 1363
9999 mem: location 1273 is 1124
9999 mem: location 1124 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1363 in location 1227
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1228
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1373
9999 mem: storing 1373 in location 1229
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1373
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: location 1229 is 1373
9999 run: address to copy is 1373
9999 mem: storing 1373 in location 1230
 105 run: *val <- copy x
9999 mem: location 1227 is 1363
9999 mem: location 1230 is 1373
9999 mem: location 1230 is 1373
9999 mem: storing 1363 in location 1373
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1373
9999 mem: location 1373 is 1363
9999 mem: location 1374 is 0
9999 mem: location 1229 is 1373
9999 run: address to copy is 1374
9999 mem: storing 1374 in location 1231
 105 run: *next <- copy in
9999 mem: location 1228 is 0
9999 mem: location 1231 is 1374
9999 mem: location 1231 is 1374
9999 mem: storing 0 in location 1374
 105 run: reply result
9999 mem: location 1229 is 1373
9999 run: result 0 is 1373
9999 mem: location 1273 is 1124
9999 mem: storing 1373 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1274
 104 run: *redo <- copy 0
9999 mem: location 1274 is 1125
9999 mem: location 1274 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1271 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1338
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1320
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1320 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1320
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 1
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 1
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1321
9999 run: its type is address
9999 mem: location 1321 is 1303
9999 mem: storing 1303 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1303
9999 mem: storing 4 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 1
9999 mem: location 1327 is 4
9999 mem: storing 0 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1326 is 1303
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 1
9999 run: address to copy is 1308
9999 run: its type is event
9999 mem: location 1308 is 1
9999 mem: location 1309 is 65514
9999 mem: location 1310 is 0
9999 mem: location 1311 is 0
9999 mem: storing 1 in location 1330
9999 mem: storing 65514 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 103 run: *idx <- add *idx, 1
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 1
9999 mem: location 1325 is 1320
9999 mem: storing 2 in location 1320
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65514
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1320
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1320
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1280
9999 mem: storing 65514 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1320 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65514
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65514
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 78
9999 mem: new alloc: 1375
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1377
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1378
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1379
9999 mem: storing 65514 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
 103 run: jump-if editor, 1:offset
9999 mem: location 1378 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1167
 104 run: reply width
9999 mem: location 1167 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1383
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 104 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1384
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1385
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1386
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1387
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1388 is 1121
9999 mem: location 1388 is 1121
9999 mem: storing 2 in location 1390
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1389 is 1122
9999 mem: location 1389 is 1122
9999 mem: storing 1 in location 1391
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65514
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 0 in location 1392
 103 run: break-unless c, 
9999 mem: location 1392 is 0
9999 run: jumping to instruction 346
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65514
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1380 in location 1437
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1437 is 1380
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1404
 103 run: break-unless page-up?, 
9999 mem: location 1404 is 0
9999 run: jumping to instruction 391
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1420
 103 run: break-unless page-down?, 
9999 mem: location 1420 is 0
9999 run: jumping to instruction 433
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1423
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1423 is 0
9999 run: jumping to instruction 470
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1424
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1424 is 0
9999 run: jumping to instruction 507
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1438
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1438 is 0
9999 run: jumping to instruction 544
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1439
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1439 is 0
9999 run: jumping to instruction 581
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1440
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1440 is 0
9999 run: jumping to instruction 623
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 1 in location 1442
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1442 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1387 is 1118
9999 mem: location 1118 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1443
 103 run: break-unless next-cursor, 
9999 mem: location 1443 is 1180
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1407
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1408
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1409
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1443 is 1180
9999 mem: location 1387 is 1118
9999 mem: location 1387 is 1118
9999 mem: storing 1180 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1378 is 1115
9999 mem: location 1384 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: new alloc: 1454
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1456
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1457
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1180
9999 mem: storing 1180 in location 1458
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1459
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1460
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1461
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1462
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1458 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1458 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1463
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1463 is 101
9999 mem: storing 0 in location 1464
 104 run: break-unless was-at-newline?, 
9999 mem: location 1464 is 0
9999 run: jumping to instruction 30
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1462 is 9
9999 mem: storing 8 in location 1470
 104 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1470 is 8
9999 mem: storing 0 in location 1471
 104 run: break-unless at-wrap?, 
9999 mem: location 1471 is 0
9999 run: jumping to instruction 58
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1460 is 1122
9999 mem: storing 2 in location 1122
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1456 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1378
9999 mem: storing 0 in location 1426
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1377 is 1009
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 2
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 2
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1377
 103 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1410
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1411
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1412
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1413
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1410 is 2
9999 run: jump-unless fell through
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1396
 103 run: break-unless *undo, 
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1373
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1373
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1373 in location 1166
 104 run: result:location <- get *in, value:offset
9999 mem: location 1166 is 1373
9999 mem: location 1373 is 1363
9999 mem: location 1374 is 0
9999 mem: location 1166 is 1373
9999 run: address to copy is 1373
9999 run: its type is number
9999 mem: location 1373 is 1363
9999 mem: storing 1363 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1363
9999 run: result 0 is 1363
9999 mem: storing 1363 in location 1395
 103 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1395 is 1363
9999 mem: location 1363 is 1
9999 mem: location 1364 is 1
9999 mem: location 1365 is 0
9999 mem: location 1366 is 1158
9999 mem: location 1367 is 2
9999 mem: location 1368 is 1
9999 mem: location 1369 is 1158
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 mem: location 1372 is 0
9999 mem: location 1395 is 1363
9999 mem: storing 1364 in location 1397
 103 run: break-unless move, 
9999 mem: location 1397 is 1364
9999 run: jump-unless fell through
 103 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1397 is 1364
9999 mem: location 1364 is 1
9999 mem: location 1365 is 0
9999 mem: location 1366 is 1158
9999 mem: location 1367 is 2
9999 mem: location 1368 is 1
9999 mem: location 1369 is 1158
9999 mem: location 1370 is 0
9999 mem: location 1397 is 1364
9999 run: address to copy is 1370
9999 run: its type is number
9999 mem: location 1370 is 0
9999 mem: storing 0 in location 1414
 103 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1410 is 2
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1415
 103 run: break-unless coalesce?, 
9999 mem: location 1415 is 0
9999 run: jumping to instruction 657
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1475
9999 mem: storing 1475 in location 1395
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1407 is 2
9999 mem: location 1408 is 1
9999 mem: location 1409 is 1158
9999 mem: location 1411 is 2
9999 mem: location 1412 is 2
9999 mem: location 1413 is 1158
9999 mem: location 1410 is 2
9999 mem: location 1395 is 1475
9999 mem: location 1395 is 1475
9999 mem: storing 1 in location 1475
9999 mem: storing 2 in location 1476
9999 mem: storing 1 in location 1477
9999 mem: storing 1158 in location 1478
9999 mem: storing 2 in location 1479
9999 mem: storing 2 in location 1480
9999 mem: storing 1158 in location 1481
9999 mem: storing 2 in location 1482
 103 run: editor <- add-operation editor, op
9999 mem: location 1378 is 1115
9999 mem: location 1395 is 1475
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1271
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1475 in location 1272
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1273
 104 run: *undo <- push op, *undo
9999 mem: location 1272 is 1475
9999 mem: location 1273 is 1124
9999 mem: location 1124 is 1373
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1475 in location 1227
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1373 in location 1228
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1485
9999 mem: storing 1485 in location 1229
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1485
9999 mem: location 1485 is 0
9999 mem: location 1486 is 0
9999 mem: location 1229 is 1485
9999 run: address to copy is 1485
9999 mem: storing 1485 in location 1230
 105 run: *val <- copy x
9999 mem: location 1227 is 1475
9999 mem: location 1230 is 1485
9999 mem: location 1230 is 1485
9999 mem: storing 1475 in location 1485
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1485
9999 mem: location 1485 is 1475
9999 mem: location 1486 is 0
9999 mem: location 1229 is 1485
9999 run: address to copy is 1486
9999 mem: storing 1486 in location 1231
 105 run: *next <- copy in
9999 mem: location 1228 is 1373
9999 mem: location 1231 is 1486
9999 mem: location 1231 is 1486
9999 mem: storing 1373 in location 1486
 105 run: reply result
9999 mem: location 1229 is 1485
9999 run: result 0 is 1485
9999 mem: location 1273 is 1124
9999 mem: storing 1485 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1274
 104 run: *redo <- copy 0
9999 mem: location 1274 is 1125
9999 mem: location 1274 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1271 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1378
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1377 is 1009
9999 mem: location 1378 is 1115
9999 mem: location 1426 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 0 in location 1287
 102 run: break-unless go-render?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1320
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1320 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1320
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 2
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1321
9999 run: its type is address
9999 mem: location 1321 is 1303
9999 mem: storing 1303 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1303
9999 mem: storing 4 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 2
9999 mem: location 1327 is 4
9999 mem: storing 0 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1326 is 1303
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 2
9999 run: address to copy is 1312
9999 run: its type is event
9999 mem: location 1312 is 1
9999 mem: location 1313 is 65514
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1 in location 1330
9999 mem: storing 65514 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 103 run: *idx <- add *idx, 1
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 2
9999 mem: location 1325 is 1320
9999 mem: storing 3 in location 1320
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65514
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1320
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1320
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1280
9999 mem: storing 65514 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1320 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65514
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65514
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 78
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1377
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1378
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1379
9999 mem: storing 65514 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
 103 run: jump-if editor, 1:offset
9999 mem: location 1378 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1167
 104 run: reply width
9999 mem: location 1167 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1383
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 104 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1384
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1385
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1386
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1387
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1388 is 1121
9999 mem: location 1388 is 1121
9999 mem: storing 2 in location 1390
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1389 is 1122
9999 mem: location 1389 is 1122
9999 mem: storing 2 in location 1391
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65514
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 0 in location 1392
 103 run: break-unless c, 
9999 mem: location 1392 is 0
9999 run: jumping to instruction 346
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65514
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1380 in location 1437
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1437 is 1380
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1404
 103 run: break-unless page-up?, 
9999 mem: location 1404 is 0
9999 run: jumping to instruction 391
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1420
 103 run: break-unless page-down?, 
9999 mem: location 1420 is 0
9999 run: jumping to instruction 433
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1423
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1423 is 0
9999 run: jumping to instruction 470
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1424
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1424 is 0
9999 run: jumping to instruction 507
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1438
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1438 is 0
9999 run: jumping to instruction 544
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1439
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1439 is 0
9999 run: jumping to instruction 581
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 0 in location 1440
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1440 is 0
9999 run: jumping to instruction 623
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65514
9999 mem: storing 1 in location 1442
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1442 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1387 is 1118
9999 mem: location 1118 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 104 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1443
 103 run: break-unless next-cursor, 
9999 mem: location 1443 is 1183
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1407
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1408
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1180
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1409
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1443 is 1183
9999 mem: location 1387 is 1118
9999 mem: location 1387 is 1118
9999 mem: storing 1183 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1378 is 1115
9999 mem: location 1384 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 20
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1456
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1457
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1183
9999 mem: storing 1183 in location 1458
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1459
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1460
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1461
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1456 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1456 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1462
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1458 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1458 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1463
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1463 is 102
9999 mem: storing 0 in location 1464
 104 run: break-unless was-at-newline?, 
9999 mem: location 1464 is 0
9999 run: jumping to instruction 30
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1462 is 9
9999 mem: storing 8 in location 1470
 104 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1470 is 8
9999 mem: storing 0 in location 1471
 104 run: break-unless at-wrap?, 
9999 mem: location 1471 is 0
9999 run: jumping to instruction 58
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1460 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1460 is 1122
9999 mem: storing 3 in location 1122
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1456 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1378
9999 mem: storing 0 in location 1426
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1377 is 1009
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 3
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1377
 103 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1410
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1411
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1412
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1413
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1410 is 2
9999 run: jump-unless fell through
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1396
 103 run: break-unless *undo, 
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1485 in location 1166
 104 run: result:location <- get *in, value:offset
9999 mem: location 1166 is 1485
9999 mem: location 1485 is 1475
9999 mem: location 1486 is 1373
9999 mem: location 1166 is 1485
9999 run: address to copy is 1485
9999 run: its type is number
9999 mem: location 1485 is 1475
9999 mem: storing 1475 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1475
9999 run: result 0 is 1475
9999 mem: storing 1475 in location 1395
 103 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1395 is 1475
9999 mem: location 1475 is 1
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 2
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1395 is 1475
9999 mem: storing 1476 in location 1397
 103 run: break-unless move, 
9999 mem: location 1397 is 1476
9999 run: jump-unless fell through
 103 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 2
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1482
9999 run: its type is number
9999 mem: location 1482 is 2
9999 mem: storing 2 in location 1414
 103 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1410 is 2
9999 mem: location 1414 is 2
9999 mem: storing 1 in location 1415
 103 run: break-unless coalesce?, 
9999 mem: location 1415 is 1
9999 run: jump-unless fell through
 103 run: after-row:address:number <- get-address *move, after-row:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 2
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1479
9999 mem: storing 1479 in location 1416
 103 run: *after-row <- copy after-cursor-row
9999 mem: location 1411 is 2
9999 mem: location 1416 is 1479
9999 mem: location 1416 is 1479
9999 mem: storing 2 in location 1479
 103 run: after-column:address:number <- get-address *move, after-column:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 2
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1480
9999 mem: storing 1480 in location 1417
 103 run: *after-column <- copy after-cursor-column
9999 mem: location 1412 is 3
9999 mem: location 1417 is 1480
9999 mem: location 1417 is 1480
9999 mem: storing 3 in location 1480
 103 run: after-top:address:number <- get-address *move, after-top-of-screen:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1481
9999 mem: storing 1481 in location 1418
 103 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: location 1418 is 1481
9999 mem: storing 1158 in location 1481
 103 run: break +done-adding-move-operation:label
9999 run: jumping to instruction 662
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1377 is 1009
9999 mem: location 1378 is 1115
9999 mem: location 1426 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 0 in location 1287
 102 run: break-unless go-render?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 22
schedule: editor-event-loop/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1320
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1320 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1320
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 3
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 3
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1321
9999 run: its type is address
9999 mem: location 1321 is 1303
9999 mem: storing 1303 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1303
9999 mem: storing 4 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 3
9999 mem: location 1327 is 4
9999 mem: storing 0 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1326 is 1303
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 3
9999 run: address to copy is 1316
9999 run: its type is event
9999 mem: location 1316 is 1
9999 mem: location 1317 is 65517
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1330
9999 mem: storing 65517 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 103 run: *idx <- add *idx, 1
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 3
9999 mem: location 1325 is 1320
9999 mem: storing 4 in location 1320
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1330 is 1
9999 mem: location 1331 is 65517
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1320
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1320
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1280
9999 mem: storing 65517 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1320 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65517
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65517
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 78
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1377
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1378
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1379
9999 mem: storing 65517 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
 103 run: jump-if editor, 1:offset
9999 mem: location 1378 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1167
 104 run: reply width
9999 mem: location 1167 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1383
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 104 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1384
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1385
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1386
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1387
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1388 is 1121
9999 mem: location 1388 is 1121
9999 mem: storing 2 in location 1390
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1389 is 1122
9999 mem: location 1389 is 1122
9999 mem: storing 3 in location 1391
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65517
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 0 in location 1392
 103 run: break-unless c, 
9999 mem: location 1392 is 0
9999 run: jumping to instruction 346
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65517
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1380 in location 1437
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1437 is 1380
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65517
9999 mem: storing 0 in location 1404
 103 run: break-unless page-up?, 
9999 mem: location 1404 is 0
9999 run: jumping to instruction 391
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65517
9999 mem: storing 0 in location 1420
 103 run: break-unless page-down?, 
9999 mem: location 1420 is 0
9999 run: jumping to instruction 433
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65517
9999 mem: storing 0 in location 1423
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1423 is 0
9999 run: jumping to instruction 470
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65517
9999 mem: storing 0 in location 1424
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1424 is 0
9999 run: jumping to instruction 507
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65517
9999 mem: storing 0 in location 1438
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1438 is 0
9999 run: jumping to instruction 544
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1437 is 1380
9999 mem: location 1380 is 65517
9999 mem: storing 1 in location 1439
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1439 is 1
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1407
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1408
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1409
 103 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1378 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1487
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1489
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1489 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1489 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1490
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1489 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1489 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1491
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1489 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1489 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1492
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1489 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1489 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1493
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1489 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1489 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1494
 104 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1490 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1495
 104 run: break-if already-at-top?, 
9999 mem: location 1495 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1492 is 1118
9999 mem: location 1118 is 1183
9999 mem: location 1492 is 1118
9999 mem: location 1492 is 1118
9999 mem: storing 1183 in location 1496
 104 run: old:address:duplex-list <- copy curr
9999 mem: location 1496 is 1183
9999 mem: storing 1183 in location 1497
 104 run: c2:character <- get *curr, value:offset
9999 mem: location 1496 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1496 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1498
 104 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1498 is 102
9999 mem: storing 0 in location 1499
 104 run: break-if at-newline?, 
9999 mem: location 1499 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- before-previous-line curr, editor
9999 mem: location 1496 is 1183
9999 mem: location 1489 is 1115
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1507
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1509
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1509 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1509 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1510
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1511
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1511 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1511 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1512
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1511 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1511 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1513
 105 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1513 is 9
9999 mem: location 1512 is 0
9999 mem: storing 9 in location 1514
 105 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1511 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1511 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1158
9999 mem: storing 1158 in location 1515
 105 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1509 is 1183
9999 mem: location 1515 is 1158
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1152
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1153
 106 run: result:number <- copy 0
9999 mem: storing 0 in location 1154
 106 run: jump-if curr, 1:offset
9999 mem: location 1152 is 1183
9999 run: jumping to instruction 6
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1183
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: jump-unless at-start?, 1:offset
9999 mem: location 1155 is 0
9999 run: jumping to instruction 9
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1183
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1185
9999 run: its type is address
9999 mem: location 1185 is 1180
9999 mem: storing 1180 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1180
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1180
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1152 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 101
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 0
9999 mem: storing 1 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1180
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1177
9999 mem: storing 1177 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1177
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1177
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1152 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 100
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 1
9999 mem: storing 2 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1177
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1174
9999 mem: storing 1174 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1174
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1174
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1152 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 10
9999 mem: storing 1 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 1
9999 run: jumping to instruction 19
 106 run: reply result
9999 mem: location 1154 is 2
9999 run: result 0 is 2
9999 mem: storing 2 in location 1516
 105 run: break-if len, 
9999 mem: location 1516 is 2
9999 run: jumping to instruction 15
 105 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1516 is 2
9999 mem: location 1514 is 9
9999 mem: storing 2 in location 1518
 105 run: break-if max, 
9999 mem: location 1518 is 2
9999 run: jumping to instruction 20
 105 run: max <- add max, 1
9999 mem: location 1518 is 2
9999 mem: storing 3 in location 1518
 105 run: count:number <- copy 0
9999 mem: storing 0 in location 1519
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 0
9999 mem: location 1518 is 3
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1183
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1185
9999 run: its type is address
9999 mem: location 1185 is 1180
9999 mem: storing 1180 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1180
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1180
9999 mem: storing 1180 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 0
9999 mem: storing 1 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 1
9999 mem: location 1518 is 3
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1180
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1177
9999 mem: storing 1177 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1177
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1177
9999 mem: storing 1177 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 1
9999 mem: storing 2 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 2
9999 mem: location 1518 is 3
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1177
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1174
9999 mem: storing 1174 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1174
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1174
9999 mem: storing 1174 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 2
9999 mem: storing 3 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 3
9999 mem: location 1518 is 3
9999 mem: storing 1 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 1
9999 run: jumping to instruction 31
 105 run: reply curr
9999 mem: location 1509 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1496
 104 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1496 is 1174
9999 mem: location 1497 is 1183
9999 mem: storing 0 in location 1500
 104 run: jump-unless no-motion?, 1:offset
9999 mem: location 1500 is 0
9999 run: jumping to instruction 20
 104 run: old <- copy curr
9999 mem: location 1496 is 1174
9999 mem: storing 1174 in location 1497
 104 run: curr <- before-previous-line curr, editor
9999 mem: location 1496 is 1174
9999 mem: location 1489 is 1115
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1509
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1509 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1509 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1510
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1511
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1511 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1511 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1512
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1511 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1511 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1513
 105 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1513 is 9
9999 mem: location 1512 is 0
9999 mem: storing 9 in location 1514
 105 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1511 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1511 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1158
9999 mem: storing 1158 in location 1515
 105 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1509 is 1174
9999 mem: location 1515 is 1158
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1152
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1153
 106 run: result:number <- copy 0
9999 mem: storing 0 in location 1154
 106 run: jump-if curr, 1:offset
9999 mem: location 1152 is 1174
9999 run: jumping to instruction 6
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1174
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: jump-unless at-start?, 1:offset
9999 mem: location 1155 is 0
9999 run: jumping to instruction 9
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1174
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1171
9999 mem: storing 1171 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1171
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1171
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1152 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 99
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 0
9999 mem: storing 1 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1171
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1168
9999 mem: storing 1168 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1168
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1168
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1152 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 98
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 1
9999 mem: storing 2 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1168
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1161
9999 mem: storing 1161 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1161
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1161
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1152 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 97
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 2
9999 mem: storing 3 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1161
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1158
9999 mem: storing 1158 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1158
9999 run: result 0 is 1158
9999 mem: storing 1158 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1158
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1158
9999 mem: location 1153 is 1158
9999 mem: storing 1 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 1
9999 run: jumping to instruction 19
 106 run: reply result
9999 mem: location 1154 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1516
 105 run: break-if len, 
9999 mem: location 1516 is 3
9999 run: jumping to instruction 15
 105 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1516 is 3
9999 mem: location 1514 is 9
9999 mem: storing 3 in location 1518
 105 run: break-if max, 
9999 mem: location 1518 is 3
9999 run: jumping to instruction 20
 105 run: max <- add max, 1
9999 mem: location 1518 is 3
9999 mem: storing 4 in location 1518
 105 run: count:number <- copy 0
9999 mem: storing 0 in location 1519
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 0
9999 mem: location 1518 is 4
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1174
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1176
9999 run: its type is address
9999 mem: location 1176 is 1171
9999 mem: storing 1171 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1171
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1171
9999 mem: storing 1171 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 0
9999 mem: storing 1 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 1
9999 mem: location 1518 is 4
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1171
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 1168
9999 mem: storing 1168 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1168
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1168
9999 mem: storing 1168 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 1
9999 mem: storing 2 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 2
9999 mem: location 1518 is 4
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1168
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1161
9999 mem: storing 1161 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1161
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1161
9999 mem: storing 1161 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 2
9999 mem: storing 3 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 3
9999 mem: location 1518 is 4
9999 mem: storing 0 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1509 is 1161
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1158
9999 mem: storing 1158 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1158
9999 run: result 0 is 1158
9999 mem: storing 1158 in location 1517
 105 run: break-unless prev, 
9999 mem: location 1517 is 1158
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1517 is 1158
9999 mem: storing 1158 in location 1509
 105 run: count <- add count, 1
9999 mem: location 1519 is 3
9999 mem: storing 4 in location 1519
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1519 is 4
9999 mem: location 1518 is 4
9999 mem: storing 1 in location 1520
 105 run: break-if done?, 
9999 mem: location 1520 is 1
9999 run: jumping to instruction 31
 105 run: reply curr
9999 mem: location 1509 is 1158
9999 run: result 0 is 1158
9999 mem: storing 1158 in location 1496
 104 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1496 is 1158
9999 mem: location 1497 is 1174
9999 mem: storing 0 in location 1500
 104 run: jump-unless no-motion?, 1:offset
9999 mem: location 1500 is 0
9999 run: jumping to instruction 27
 104 run: *before-cursor <- copy curr
9999 mem: location 1496 is 1158
9999 mem: location 1492 is 1118
9999 mem: location 1492 is 1118
9999 mem: storing 1158 in location 1118
 104 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1490 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1490 is 1121
9999 mem: storing 1 in location 1121
 104 run: target-column:number <- copy *cursor-column
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1491 is 1122
9999 mem: location 1491 is 1122
9999 mem: storing 3 in location 1501
 104 run: *cursor-column <- copy left
9999 mem: location 1493 is 0
9999 mem: location 1491 is 1122
9999 mem: location 1491 is 1122
9999 mem: storing 0 in location 1122
 104 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1501 is 3
9999 mem: storing 0 in location 1502
 104 run: break-if done?, 
9999 mem: location 1502 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1492 is 1118
9999 mem: location 1118 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1496
 104 run: break-unless curr, 
9999 mem: location 1496 is 1161
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1496 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1496 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1503
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1503 is 97
9999 mem: storing 0 in location 1499
 104 run: break-if at-newline?, 
9999 mem: location 1499 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy curr
9999 mem: location 1496 is 1161
9999 mem: location 1492 is 1118
9999 mem: location 1492 is 1118
9999 mem: storing 1161 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1491 is 1122
9999 mem: storing 1 in location 1122
 104 run: loop 
9999 run: jumping to instruction 33
 104 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1501 is 3
9999 mem: storing 0 in location 1502
 104 run: break-if done?, 
9999 mem: location 1502 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1492 is 1118
9999 mem: location 1118 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1496
 104 run: break-unless curr, 
9999 mem: location 1496 is 1168
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1496 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1496 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1503
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1503 is 98
9999 mem: storing 0 in location 1499
 104 run: break-if at-newline?, 
9999 mem: location 1499 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy curr
9999 mem: location 1496 is 1168
9999 mem: location 1492 is 1118
9999 mem: location 1492 is 1118
9999 mem: storing 1168 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1491 is 1122
9999 mem: storing 2 in location 1122
 104 run: loop 
9999 run: jumping to instruction 33
 104 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1501 is 3
9999 mem: storing 0 in location 1502
 104 run: break-if done?, 
9999 mem: location 1502 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1492 is 1118
9999 mem: location 1118 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1496
 104 run: break-unless curr, 
9999 mem: location 1496 is 1171
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1496 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1496 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1503
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1503 is 99
9999 mem: storing 0 in location 1499
 104 run: break-if at-newline?, 
9999 mem: location 1499 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy curr
9999 mem: location 1496 is 1171
9999 mem: location 1492 is 1118
9999 mem: location 1492 is 1118
9999 mem: storing 1171 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1491 is 1122
9999 mem: storing 3 in location 1122
 104 run: loop 
9999 run: jumping to instruction 33
 104 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1491 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1501 is 3
9999 mem: storing 1 in location 1502
 104 run: break-if done?, 
9999 mem: location 1502 is 1
9999 run: jumping to instruction 43
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1489 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1378
9999 mem: storing 0 in location 1426
 103 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1410
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1411
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1412
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1413
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1410 is 3
9999 run: jump-unless fell through
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1396
 103 run: break-unless *undo, 
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1485 in location 1166
 104 run: result:location <- get *in, value:offset
9999 mem: location 1166 is 1485
9999 mem: location 1485 is 1475
9999 mem: location 1486 is 1373
9999 mem: location 1166 is 1485
9999 run: address to copy is 1485
9999 run: its type is number
9999 mem: location 1485 is 1475
9999 mem: storing 1475 in location 1167
 104 run: reply result
9999 mem: location 1167 is 1475
9999 run: result 0 is 1475
9999 mem: storing 1475 in location 1395
 103 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1395 is 1475
9999 mem: location 1475 is 1
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1395 is 1475
9999 mem: storing 1476 in location 1397
 103 run: break-unless move, 
9999 mem: location 1397 is 1476
9999 run: jump-unless fell through
 103 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1482
9999 run: its type is number
9999 mem: location 1482 is 2
9999 mem: storing 2 in location 1414
 103 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1410 is 3
9999 mem: location 1414 is 2
9999 mem: storing 0 in location 1415
 103 run: break-unless coalesce?, 
9999 mem: location 1415 is 0
9999 run: jumping to instruction 574
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1521
9999 mem: storing 1521 in location 1395
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1407 is 2
9999 mem: location 1408 is 3
9999 mem: location 1409 is 1158
9999 mem: location 1411 is 1
9999 mem: location 1412 is 3
9999 mem: location 1413 is 1158
9999 mem: location 1410 is 3
9999 mem: location 1395 is 1521
9999 mem: location 1395 is 1521
9999 mem: storing 1 in location 1521
9999 mem: storing 2 in location 1522
9999 mem: storing 3 in location 1523
9999 mem: storing 1158 in location 1524
9999 mem: storing 1 in location 1525
9999 mem: storing 3 in location 1526
9999 mem: storing 1158 in location 1527
9999 mem: storing 3 in location 1528
 103 run: editor <- add-operation editor, op
9999 mem: location 1378 is 1115
9999 mem: location 1395 is 1521
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1271
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1521 in location 1272
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1273
 104 run: *undo <- push op, *undo
9999 mem: location 1272 is 1521
9999 mem: location 1273 is 1124
9999 mem: location 1124 is 1485
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1521 in location 1227
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1485 in location 1228
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1531
9999 mem: storing 1531 in location 1229
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1531
9999 mem: location 1531 is 0
9999 mem: location 1532 is 0
9999 mem: location 1229 is 1531
9999 run: address to copy is 1531
9999 mem: storing 1531 in location 1230
 105 run: *val <- copy x
9999 mem: location 1227 is 1521
9999 mem: location 1230 is 1531
9999 mem: location 1230 is 1531
9999 mem: storing 1521 in location 1531
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1531
9999 mem: location 1531 is 1521
9999 mem: location 1532 is 0
9999 mem: location 1229 is 1531
9999 run: address to copy is 1532
9999 mem: storing 1532 in location 1231
 105 run: *next <- copy in
9999 mem: location 1228 is 1485
9999 mem: location 1231 is 1532
9999 mem: location 1231 is 1532
9999 mem: storing 1485 in location 1532
 105 run: reply result
9999 mem: location 1229 is 1531
9999 run: result 0 is 1531
9999 mem: location 1273 is 1124
9999 mem: storing 1531 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1274
 104 run: *redo <- copy 0
9999 mem: location 1274 is 1125
9999 mem: location 1274 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1271 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1378
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1377 is 1009
9999 mem: location 1378 is 1115
9999 mem: location 1426 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 0 in location 1287
 102 run: break-unless go-render?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1320
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1320 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1320
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 4
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1320
9999 mem: storing 1320 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1320
9999 mem: location 1320 is 4
9999 mem: location 1321 is 1303
9999 mem: location 1324 is 1320
9999 run: address to copy is 1321
9999 run: its type is address
9999 mem: location 1321 is 1303
9999 mem: storing 1303 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1303
9999 mem: storing 4 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1320
9999 mem: location 1320 is 4
9999 mem: location 1327 is 4
9999 mem: storing 1 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1164 in location 1329
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1329 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1324 is 1320
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1320
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1320 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 1 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 4
 101 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 101 run: assume-console [
    press ctrl-z
  ]
parse: instruction: press
parse:   ingredient: {name: "ctrl-z", properties: ["ctrl-z": ]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1538
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1277
 102 run: console:address <- next-ingredient 
9999 mem: storing 1538 in location 1278
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1279
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1538
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1538 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1538
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1533
9999 mem: location 1324 is 1538
9999 run: address to copy is 1538
9999 mem: storing 1538 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1533
9999 mem: location 1324 is 1538
9999 run: address to copy is 1539
9999 run: its type is address
9999 mem: location 1539 is 1533
9999 mem: storing 1533 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1533
9999 mem: storing 1 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1327 is 1
9999 mem: storing 0 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1326 is 1533
9999 mem: location 1325 is 1538
9999 mem: location 1538 is 0
9999 run: address to copy is 1534
9999 run: its type is event
9999 mem: location 1534 is 0
9999 mem: location 1535 is 26
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: storing 0 in location 1330
9999 mem: storing 26 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 103 run: *idx <- add *idx, 1
9999 mem: location 1325 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1325 is 1538
9999 mem: storing 1 in location 1538
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1330 is 0
9999 mem: location 1331 is 26
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1538
9999 run: result 0 is [0, 26, 0, 0]
9999 run: result 1 is 1538
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1280
9999 mem: storing 26 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1538 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
schedule: editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 0
9999 mem: location 1281 is 26
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 0
9999 mem: location 1281 is 26
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 78
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1377
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1378
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1379
9999 mem: storing 26 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
 103 run: jump-if editor, 1:offset
9999 mem: location 1378 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1540
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1542
 104 run: break-unless sc, 
9999 mem: location 1542 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1542 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1542 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1543
 104 run: reply width
9999 mem: location 1543 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1383
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1377 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1542
 104 run: break-unless sc, 
9999 mem: location 1542 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1542 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1542 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1543
 104 run: reply height
9999 mem: location 1543 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1384
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1385
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1386
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1387
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1388 is 1121
9999 mem: location 1388 is 1121
9999 mem: storing 1 in location 1390
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1389 is 1122
9999 mem: location 1389 is 1122
9999 mem: storing 3 in location 1391
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1379 is 0
9999 mem: location 1380 is 26
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1380 in location 1392
 103 run: break-unless c, 
9999 mem: location 1392 is 1380
9999 run: jump-unless fell through
 103 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 103 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1392 is 1380
9999 mem: location 1380 is 26
9999 mem: storing 0 in location 1393
 103 run: break-unless redo?, 
9999 mem: location 1393 is 0
9999 run: jumping to instruction 49
 103 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1392 is 1380
9999 mem: location 1380 is 26
9999 mem: storing 1 in location 1401
 103 run: break-unless undo?, 
9999 mem: location 1401 is 1
9999 run: jump-unless fell through
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1531
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1396
 103 run: break-unless *undo, 
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1531
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1531
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1531 in location 1542
 104 run: result:location <- get *in, value:offset
9999 mem: location 1542 is 1531
9999 mem: location 1531 is 1521
9999 mem: location 1532 is 1485
9999 mem: location 1542 is 1531
9999 run: address to copy is 1531
9999 run: its type is number
9999 mem: location 1531 is 1521
9999 mem: storing 1521 in location 1543
 104 run: reply result
9999 mem: location 1543 is 1521
9999 run: result 0 is 1521
9999 mem: storing 1521 in location 1395
 103 run: *undo <- rest *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1531
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1531 in location 1542
 104 run: result:address:list <- get *in, next:offset
9999 mem: location 1542 is 1531
9999 mem: location 1531 is 1521
9999 mem: location 1532 is 1485
9999 mem: location 1542 is 1531
9999 run: address to copy is 1532
9999 run: its type is address
9999 mem: location 1532 is 1485
9999 mem: storing 1485 in location 1543
 104 run: reply result
9999 mem: location 1543 is 1485
9999 run: result 0 is 1485
9999 mem: location 1396 is 1124
9999 mem: storing 1485 in location 1124
 103 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 0
9999 mem: location 1378 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1394
 103 run: *redo <- push op, *redo
9999 mem: location 1395 is 1521
9999 mem: location 1394 is 1125
9999 mem: location 1125 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1521 in location 1227
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1228
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1544
9999 mem: storing 1544 in location 1229
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1544
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: location 1229 is 1544
9999 run: address to copy is 1544
9999 mem: storing 1544 in location 1230
 104 run: *val <- copy x
9999 mem: location 1227 is 1521
9999 mem: location 1230 is 1544
9999 mem: location 1230 is 1544
9999 mem: storing 1521 in location 1544
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1544
9999 mem: location 1544 is 1521
9999 mem: location 1545 is 0
9999 mem: location 1229 is 1544
9999 run: address to copy is 1545
9999 mem: storing 1545 in location 1231
 104 run: *next <- copy in
9999 mem: location 1228 is 0
9999 mem: location 1231 is 1545
9999 mem: location 1231 is 1545
9999 mem: storing 0 in location 1545
 104 run: reply result
9999 mem: location 1229 is 1544
9999 run: result 0 is 1544
9999 mem: location 1394 is 1125
9999 mem: storing 1544 in location 1125
 103 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1395 is 1521
9999 mem: location 1521 is 1
9999 mem: location 1522 is 2
9999 mem: location 1523 is 3
9999 mem: location 1524 is 1158
9999 mem: location 1525 is 1
9999 mem: location 1526 is 3
9999 mem: location 1527 is 1158
9999 mem: location 1528 is 3
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1395 is 1521
9999 mem: storing 1522 in location 1397
 103 run: break-unless move, 
9999 mem: location 1397 is 1522
9999 run: jump-unless fell through
 103 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1398
 103 run: *cursor-row <- get *move, before-row:offset
9999 mem: location 1397 is 1522
9999 mem: location 1522 is 2
9999 mem: location 1523 is 3
9999 mem: location 1524 is 1158
9999 mem: location 1525 is 1
9999 mem: location 1526 is 3
9999 mem: location 1527 is 1158
9999 mem: location 1528 is 3
9999 mem: location 1397 is 1522
9999 run: address to copy is 1522
9999 run: its type is number
9999 mem: location 1522 is 2
9999 mem: location 1388 is 1121
9999 mem: storing 2 in location 1121
 103 run: *cursor-column <- get *move, before-column:offset
9999 mem: location 1397 is 1522
9999 mem: location 1522 is 2
9999 mem: location 1523 is 3
9999 mem: location 1524 is 1158
9999 mem: location 1525 is 1
9999 mem: location 1526 is 3
9999 mem: location 1527 is 1158
9999 mem: location 1528 is 3
9999 mem: location 1397 is 1522
9999 run: address to copy is 1523
9999 run: its type is number
9999 mem: location 1523 is 3
9999 mem: location 1389 is 1122
9999 mem: storing 3 in location 1122
 103 run: *top <- get *move, before-top-of-screen:offset
9999 mem: location 1397 is 1522
9999 mem: location 1522 is 2
9999 mem: location 1523 is 3
9999 mem: location 1524 is 1158
9999 mem: location 1525 is 1
9999 mem: location 1526 is 3
9999 mem: location 1527 is 1158
9999 mem: location 1528 is 3
9999 mem: location 1397 is 1522
9999 run: address to copy is 1524
9999 run: its type is address
9999 mem: location 1524 is 1158
9999 mem: location 1398 is 1116
9999 mem: storing 1158 in location 1116
 103 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1395 is 1521
9999 mem: location 1521 is 1
9999 mem: location 1522 is 2
9999 mem: location 1523 is 3
9999 mem: location 1524 is 1158
9999 mem: location 1525 is 1
9999 mem: location 1526 is 3
9999 mem: location 1527 is 1158
9999 mem: location 1528 is 3
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1395 is 1521
9999 mem: storing 0 in location 1399
 103 run: break-unless typing, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 79
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1377 is 1009
9999 mem: location 1378 is 1115
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 1 in location 1287
 102 run: break-unless go-render?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 102 run: editor-render screen, editor
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1155
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1200
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1201
 104 run: jump-if editor, 1:offset
9999 mem: location 1201 is 1115
9999 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1202
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1200 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1542
 105 run: break-unless sc, 
9999 mem: location 1542 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1542 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1542 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1543
 105 run: reply height
9999 mem: location 1543 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1203
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1204
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1205
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1205 is 1158
9999 mem: storing 1158 in location 1206
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1542 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1205
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1207
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1208
 104 run: column:number <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1210
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1211
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1171
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1212
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 1
9999 mem: location 1209 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1228
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 105 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 105 run: *row <- copy new-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 105 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 104 run: break-unless curr, 
9999 mem: location 1205 is 1161
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1205 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 97
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 97
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 97
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 97
  90 print-character: 97 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 10
9999 mem: storing 1035 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 97
9999 mem: location 1265 is 1035
9999 mem: location 1265 is 1035
9999 mem: storing 97 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1036
9999 mem: location 1266 is 1036
9999 mem: storing 7 in location 1036
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1542 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1542 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1168
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1205 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 98
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 98
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 98
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 98
  90 print-character: 98 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 11
9999 mem: storing 1037 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 98
9999 mem: location 1265 is 1037
9999 mem: location 1265 is 1037
9999 mem: storing 98 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1038
9999 mem: location 1266 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1542 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1542 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1171
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1205 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 99
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 99
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 99
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 99
  90 print-character: 99 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 12
9999 mem: storing 1039 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 99
9999 mem: location 1265 is 1039
9999 mem: location 1265 is 1039
9999 mem: storing 99 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1040
9999 mem: location 1266 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1542 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1542 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1174
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1205 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
schedule: render/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 105 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 105 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 13
9999 mem: storing 1041 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1041
9999 mem: location 1265 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1042
9999 mem: location 1266 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 14
9999 mem: storing 1043 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1043
9999 mem: location 1265 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1044
9999 mem: location 1266 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 15
9999 mem: storing 1045 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1045
9999 mem: location 1265 is 1045
9999 mem: storing 32 in location 1045
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1046
9999 mem: location 1266 is 1046
9999 mem: storing 7 in location 1046
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 16
9999 mem: storing 1047 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1047
9999 mem: location 1265 is 1047
9999 mem: storing 32 in location 1047
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1048
9999 mem: location 1266 is 1048
9999 mem: storing 7 in location 1048
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 17
9999 mem: storing 1049 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1049
9999 mem: location 1265 is 1049
9999 mem: storing 32 in location 1049
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1050
9999 mem: location 1266 is 1050
9999 mem: storing 7 in location 1050
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 18
9999 mem: storing 1051 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1051
9999 mem: location 1265 is 1051
9999 mem: storing 32 in location 1051
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1052
9999 mem: location 1266 is 1052
9999 mem: storing 7 in location 1052
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 19
9999 mem: storing 1053 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1053
9999 mem: location 1265 is 1053
9999 mem: storing 32 in location 1053
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1054
9999 mem: location 1266 is 1054
9999 mem: storing 7 in location 1054
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1208 is 1
9999 mem: storing 2 in location 1208
 104 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 2
9999 mem: location 1209 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 105 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 105 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 105 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1542 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1542 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1206
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1205 is 1177
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1205 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 100
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 100
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 100
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 100
  90 print-character: 100 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
schedule: print-character/render/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 20
9999 mem: storing 1055 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 100
9999 mem: location 1265 is 1055
9999 mem: location 1265 is 1055
9999 mem: storing 100 in location 1055
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1056
9999 mem: location 1266 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1542 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1542 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1180
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1205 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 101
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 101
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 101
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 101
  90 print-character: 101 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 21
9999 mem: storing 1057 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 101
9999 mem: location 1265 is 1057
9999 mem: location 1265 is 1057
9999 mem: storing 101 in location 1057
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1058
9999 mem: location 1266 is 1058
9999 mem: storing 7 in location 1058
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1542 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1542 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1183
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1205 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 102
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 102
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 102
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 102
  90 print-character: 102 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 22
9999 mem: storing 1059 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 102
9999 mem: location 1265 is 1059
9999 mem: location 1265 is 1059
9999 mem: storing 102 in location 1059
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1060
9999 mem: location 1266 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1183
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1183
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1542 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1542 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1186
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1206 is 1183
9999 mem: location 1212 is 1118
9999 mem: location 1212 is 1118
9999 mem: storing 1183 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1205 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1218
 104 run: break-unless left-of-cursor?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 105 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 105 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 23
9999 mem: storing 1061 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1061
9999 mem: location 1265 is 1061
9999 mem: storing 32 in location 1061
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1062
9999 mem: location 1266 is 1062
9999 mem: storing 7 in location 1062
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 24
9999 mem: storing 1063 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1063
9999 mem: location 1265 is 1063
9999 mem: storing 32 in location 1063
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1064
9999 mem: location 1266 is 1064
9999 mem: storing 7 in location 1064
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 25
9999 mem: storing 1065 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1065
9999 mem: location 1265 is 1065
9999 mem: storing 32 in location 1065
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1066
9999 mem: location 1266 is 1066
9999 mem: storing 7 in location 1066
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 26
9999 mem: storing 1067 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1067
9999 mem: location 1265 is 1067
9999 mem: storing 32 in location 1067
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1068
9999 mem: location 1266 is 1068
9999 mem: storing 7 in location 1068
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 27
9999 mem: storing 1069 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1069
9999 mem: location 1265 is 1069
9999 mem: storing 32 in location 1069
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1070
9999 mem: location 1266 is 1070
9999 mem: storing 7 in location 1070
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 28
9999 mem: storing 1071 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1071
9999 mem: location 1265 is 1071
9999 mem: storing 32 in location 1071
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1072
9999 mem: location 1266 is 1072
9999 mem: storing 7 in location 1072
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 106 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 106 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1259
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 106 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 106 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 29
9999 mem: storing 1073 in location 1264
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1265
 106 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1073
9999 mem: location 1265 is 1073
9999 mem: storing 32 in location 1073
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1266
 106 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1074
9999 mem: location 1266 is 1074
9999 mem: storing 7 in location 1074
 106 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 106 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1208 is 2
9999 mem: storing 3 in location 1208
 104 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 3
9999 mem: location 1209 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1228
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 105 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 105 run: *row <- copy new-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 105 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1186
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1186
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1542 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1183
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1183
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1542 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1206
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1205 is 1189
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1205 is 1189
9999 run: address to copy is 1189
9999 run: its type is number
9999 mem: location 1189 is 103
9999 mem: storing 103 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 103
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 103
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 103
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 103
  90 print-character: 103 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 30
9999 mem: storing 1075 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 103
9999 mem: location 1265 is 1075
9999 mem: location 1265 is 1075
9999 mem: storing 103 in location 1075
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1076
9999 mem: location 1266 is 1076
9999 mem: storing 7 in location 1076
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1189
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1189
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1542 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1186
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1186
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1542 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1192
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1205 is 1192
9999 run: address to copy is 1192
9999 run: its type is number
9999 mem: location 1192 is 104
9999 mem: storing 104 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 104
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 104
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 104
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 104
  90 print-character: 104 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 31
9999 mem: storing 1077 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 104
9999 mem: location 1265 is 1077
9999 mem: location 1265 is 1077
9999 mem: storing 104 in location 1077
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1078
9999 mem: location 1266 is 1078
9999 mem: storing 7 in location 1078
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1192
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1192
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1542 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1189
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1189
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1542 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 1195
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 104 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1205 is 1195
9999 run: address to copy is 1195
9999 run: its type is number
9999 mem: location 1195 is 105
9999 mem: storing 105 in location 1216
 104 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 105
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 105 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1235
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1237
 105 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 105 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 105 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1240
 105 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 105 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
schedule: get-color/render/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 105
9999 mem: storing 0 in location 1217
 104 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 104 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 105
9999 mem: location 1207 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 105
  90 print-character: 105 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 32
9999 mem: storing 1079 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 105
9999 mem: location 1265 is 1079
9999 mem: location 1265 is 1079
9999 mem: storing 105 in location 1079
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1080
9999 mem: location 1266 is 1080
9999 mem: storing 7 in location 1080
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1205 is 1195
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1195 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1195
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1542 is 1195
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1543
 105 run: reply result
9999 mem: location 1543 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1205
 104 run: prev <- next-duplex prev
9999 mem: location 1206 is 1192
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1542
 105 run: jump-if in, 1:offset
9999 mem: location 1542 is 1192
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1542 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1542 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1543
 105 run: reply result
9999 mem: location 1543 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1206
 104 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1201 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1220
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1205 is 0
9999 mem: location 1220 is 1117
9999 mem: location 1220 is 1117
9999 mem: storing 0 in location 1117
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 1 in location 1221
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1214 is 0
9999 mem: location 1221 is 1
9999 mem: storing 0 in location 1222
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1223
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1224
 104 run: break-unless before-cursor?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 80
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1208 is 3
9999 mem: location 1209 is 3
9999 mem: location 1200 is 1009
9999 mem: location 1201 is 1115
9999 run: result 0 is 3
9999 run: result 1 is 3
9999 mem: storing 3 in location 1156
9999 mem: storing 3 in location 1157
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1152 is 1009
9999 mem: location 1157 is 3
9999 mem: location 1155 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 33
9999 mem: storing 1081 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1264 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1081
9999 mem: location 1265 is 1081
9999 mem: storing 32 in location 1081
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1264 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1082
9999 mem: location 1266 is 1082
9999 mem: storing 7 in location 1082
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 34
9999 mem: storing 1083 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1264 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1083
9999 mem: location 1265 is 1083
9999 mem: storing 32 in location 1083
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1264 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1084
9999 mem: location 1266 is 1084
9999 mem: storing 7 in location 1084
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 35
9999 mem: storing 1085 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1264 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1085
9999 mem: location 1265 is 1085
9999 mem: storing 32 in location 1085
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1264 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1086
9999 mem: location 1266 is 1086
9999 mem: storing 7 in location 1086
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 36
9999 mem: storing 1087 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1264 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1087
9999 mem: location 1265 is 1087
9999 mem: storing 32 in location 1087
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1264 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1088
9999 mem: location 1266 is 1088
9999 mem: storing 7 in location 1088
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 37
9999 mem: storing 1089 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1264 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1089
9999 mem: location 1265 is 1089
9999 mem: storing 32 in location 1089
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1264 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1090
9999 mem: location 1266 is 1090
9999 mem: storing 7 in location 1090
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 38
9999 mem: storing 1091 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1264 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1091
9999 mem: location 1265 is 1091
9999 mem: storing 32 in location 1091
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1264 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1092
9999 mem: location 1266 is 1092
9999 mem: storing 7 in location 1092
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 39
9999 mem: storing 1093 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1264 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1093
9999 mem: location 1265 is 1093
9999 mem: storing 32 in location 1093
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1264 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1094
9999 mem: location 1266 is 1094
9999 mem: storing 7 in location 1094
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1156 is 3
9999 mem: storing 4 in location 1156
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1152 is 1009
9999 mem: location 1156 is 4
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
schedule: draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1324
 104 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1325
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1326
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1327
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1328
9999 mem: storing 1 in location 1329
 104 run: break-if style-found?, 
9999 mem: location 1329 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
 104 run: break-if color-found?, 
9999 mem: location 1331 is 0
9999 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1330
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 104 run: break-if bg-color-found?, 
9999 mem: location 1333 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1332
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1324 is 1009
9999 mem: location 1325 is 4
9999 mem: location 1326 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1228
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 105 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 105 run: *row <- copy new-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 105 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1324
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 0
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 40
9999 mem: storing 1095 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1264 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1095
9999 mem: location 1265 is 1095
9999 mem: storing 9480 in location 1095
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1264 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1096
9999 mem: location 1266 is 1096
9999 mem: storing 245 in location 1096
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 1
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 41
9999 mem: storing 1097 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 245
9999 mem: location 1264 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1097
9999 mem: location 1265 is 1097
9999 mem: storing 9480 in location 1097
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 245
9999 mem: location 1264 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1098
9999 mem: location 1266 is 1098
9999 mem: storing 245 in location 1098
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 1
9999 mem: storing 2 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 2
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 42
9999 mem: storing 1099 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 245
9999 mem: location 1264 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1099
9999 mem: location 1265 is 1099
9999 mem: storing 9480 in location 1099
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 245
9999 mem: location 1264 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1100
9999 mem: location 1266 is 1100
9999 mem: storing 245 in location 1100
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 2
9999 mem: storing 3 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 3
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 43
9999 mem: storing 1101 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 245
9999 mem: location 1264 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1101
9999 mem: location 1265 is 1101
9999 mem: storing 9480 in location 1101
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 245
9999 mem: location 1264 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1102
9999 mem: location 1266 is 1102
9999 mem: storing 245 in location 1102
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 3
9999 mem: storing 4 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 4
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 44
9999 mem: storing 1103 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 245
9999 mem: location 1264 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1103
9999 mem: location 1265 is 1103
9999 mem: storing 9480 in location 1103
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 245
9999 mem: location 1264 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1104
9999 mem: location 1266 is 1104
9999 mem: storing 245 in location 1104
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 4
9999 mem: storing 5 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 5
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 45
9999 mem: storing 1105 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1105
9999 mem: location 1105 is 9480
9999 mem: location 1106 is 245
9999 mem: location 1264 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1105
9999 mem: location 1265 is 1105
9999 mem: storing 9480 in location 1105
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1105
9999 mem: location 1105 is 9480
9999 mem: location 1106 is 245
9999 mem: location 1264 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1106
9999 mem: location 1266 is 1106
9999 mem: storing 245 in location 1106
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 5
9999 mem: storing 6 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 6
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 46
9999 mem: storing 1107 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1107
9999 mem: location 1107 is 9480
9999 mem: location 1108 is 245
9999 mem: location 1264 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1107
9999 mem: location 1265 is 1107
9999 mem: storing 9480 in location 1107
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1107
9999 mem: location 1107 is 9480
9999 mem: location 1108 is 245
9999 mem: location 1264 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1108
9999 mem: location 1266 is 1108
9999 mem: storing 245 in location 1108
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 6
9999 mem: storing 7 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 7
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 47
9999 mem: storing 1109 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1109
9999 mem: location 1109 is 9480
9999 mem: location 1110 is 245
9999 mem: location 1264 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1109
9999 mem: location 1265 is 1109
9999 mem: storing 9480 in location 1109
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1109
9999 mem: location 1109 is 9480
9999 mem: location 1110 is 245
9999 mem: location 1264 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1110
9999 mem: location 1266 is 1110
9999 mem: storing 245 in location 1110
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 7
9999 mem: storing 8 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 8
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 48
9999 mem: storing 1111 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1111
9999 mem: location 1111 is 9480
9999 mem: location 1112 is 245
9999 mem: location 1264 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1111
9999 mem: location 1265 is 1111
9999 mem: storing 9480 in location 1111
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1111
9999 mem: location 1111 is 9480
9999 mem: location 1112 is 245
9999 mem: location 1264 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1112
9999 mem: location 1266 is 1112
9999 mem: storing 245 in location 1112
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 8
9999 mem: storing 9 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 9
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 49
9999 mem: storing 1113 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1113
9999 mem: location 1113 is 9480
9999 mem: location 1114 is 245
9999 mem: location 1264 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1113
9999 mem: location 1265 is 1113
9999 mem: storing 9480 in location 1113
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1113
9999 mem: location 1113 is 9480
9999 mem: location 1114 is 245
9999 mem: location 1264 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1114
9999 mem: location 1266 is 1114
9999 mem: storing 245 in location 1114
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: x <- add x, 1
9999 mem: location 1326 is 9
9999 mem: storing 10 in location 1326
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 10
9999 mem: location 1327 is 9
9999 mem: storing 0 in location 1334
 104 run: break-unless continue?, 
9999 mem: location 1334 is 0
9999 run: jumping to instruction 27
 103 run: row <- add row, 1
9999 mem: location 1156 is 4
9999 mem: storing 5 in location 1156
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1152 is 1009
9999 mem: location 1156 is 5
9999 mem: location 1154 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1228
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1230
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1231
 104 run: break-if screen, 
9999 mem: location 1227 is 1009
9999 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1291
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 105 run: break-unless sc, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1293
 105 run: *row <- copy new-row
9999 mem: location 1291 is 5
9999 mem: location 1293 is 1011
9999 mem: location 1293 is 1011
9999 mem: storing 5 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1294
 105 run: *column <- copy new-column
9999 mem: location 1292 is 0
9999 mem: location 1294 is 1012
9999 mem: location 1294 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1290 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1227
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1227 is 1009
9999 mem: location 1229 is 0
9999 mem: location 1231 is 9
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 105 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1272
 105 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 0
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 0
9999 mem: storing 1 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 1
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 1
9999 mem: storing 2 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 2
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 2
9999 mem: storing 3 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 106 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 106 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 106 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 106 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1245 is 1009
 105 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 105 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1230 is 0
9999 mem: location 1231 is 9
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 105 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1298
 105 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1299
 105 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1300
 105 run: row <- add row, 1
9999 mem: location 1298 is 5
9999 mem: storing 6 in location 1298
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1297 is 1009
9999 mem: location 1298 is 6
9999 mem: location 1299 is 0
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1291
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 106 run: break-unless sc, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1293
 106 run: *row <- copy new-row
9999 mem: location 1291 is 6
9999 mem: location 1293 is 1011
9999 mem: location 1293 is 1011
9999 mem: storing 6 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1294
 106 run: *column <- copy new-column
9999 mem: location 1292 is 0
9999 mem: location 1294 is 1012
9999 mem: location 1294 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1290 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1297 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1542
 106 run: break-unless sc, 
9999 mem: location 1542 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1542 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1542 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1543
 106 run: reply height
9999 mem: location 1543 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1301
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1298 is 6
9999 mem: location 1301 is 5
9999 mem: storing 1 in location 1302
 105 run: break-if at-bottom-of-screen?, 
9999 mem: location 1302 is 1
9999 run: jumping to instruction 15
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1227 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1538
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1538 in location 1324
 103 run: break-unless x, 
9999 mem: location 1324 is 1538
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1538
9999 mem: location 1538 is 1
9999 mem: location 1539 is 1533
9999 mem: location 1324 is 1538
9999 run: address to copy is 1538
9999 mem: storing 1538 in location 1325
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1538
9999 mem: location 1538 is 1
9999 mem: location 1539 is 1533
9999 mem: location 1324 is 1538
9999 run: address to copy is 1539
9999 run: its type is address
9999 mem: location 1539 is 1533
9999 mem: storing 1533 in location 1326
 103 run: max:number <- length *buf
9999 mem: location 1326 is 1533
9999 mem: storing 1 in location 1327
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1538
9999 mem: location 1538 is 1
9999 mem: location 1327 is 1
9999 mem: storing 1 in location 1328
 103 run: break-unless done?, 
9999 mem: location 1328 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1540 in location 1329
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1329 is 1540
9999 mem: location 1540 is 0
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1543 is 0
9999 mem: location 1324 is 1538
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1538
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1538 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 1 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 4
 100 run: memory-should-contain [
    3 <- 2
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: assume-console [
    press ctrl-z
  ]
parse: instruction: press
parse:   ingredient: {name: "ctrl-z", properties: ["ctrl-z": ]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1002
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1551
9999 mem: location 2 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1277
 101 run: console:address <- next-ingredient 
9999 mem: storing 1551 in location 1278
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1279
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1551
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1551 in location 1324
 102 run: break-unless x, 
9999 mem: location 1324 is 1551
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1552 is 1546
9999 mem: location 1324 is 1551
9999 run: address to copy is 1551
9999 mem: storing 1551 in location 1325
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1552 is 1546
9999 mem: location 1324 is 1551
9999 run: address to copy is 1552
9999 run: its type is address
9999 mem: location 1552 is 1546
9999 mem: storing 1546 in location 1326
 102 run: max:number <- length *buf
9999 mem: location 1326 is 1546
9999 mem: storing 1 in location 1327
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1327 is 1
9999 mem: storing 0 in location 1328
 102 run: break-unless done?, 
9999 mem: location 1328 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1326 is 1546
9999 mem: location 1325 is 1551
9999 mem: location 1551 is 0
9999 run: address to copy is 1547
9999 run: its type is event
9999 mem: location 1547 is 0
9999 mem: location 1548 is 26
9999 mem: location 1549 is 0
9999 mem: location 1550 is 0
9999 mem: storing 0 in location 1330
9999 mem: storing 26 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
 102 run: *idx <- add *idx, 1
9999 mem: location 1325 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1325 is 1551
9999 mem: storing 1 in location 1551
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1330 is 0
9999 mem: location 1331 is 26
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1324 is 1551
9999 run: result 0 is [0, 26, 0, 0]
9999 run: result 1 is 1551
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1280
9999 mem: storing 26 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1551 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 101 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 0
9999 mem: location 1281 is 26
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 101 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 101 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 0
9999 mem: location 1281 is 26
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 78
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1377
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1378
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1379
9999 mem: storing 26 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
 102 run: jump-if editor, 1:offset
9999 mem: location 1378 is 1115
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1377 is 1009
schedule: screen-width/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1553
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1555
 103 run: break-unless sc, 
9999 mem: location 1555 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1555 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1555 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1556
 103 run: reply width
9999 mem: location 1556 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1383
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1377 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1555
 103 run: break-unless sc, 
9999 mem: location 1555 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1555 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1555 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1556
 103 run: reply height
9999 mem: location 1556 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1384
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1385
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1386
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1387
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1388 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1388 is 1121
9999 mem: location 1388 is 1121
9999 mem: storing 2 in location 1390
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1389 is 1122
9999 mem: location 1389 is 1122
9999 mem: storing 3 in location 1391
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1379 is 0
9999 mem: location 1380 is 26
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1380 in location 1392
 102 run: break-unless c, 
9999 mem: location 1392 is 1380
9999 run: jump-unless fell through
 102 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 102 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1392 is 1380
9999 mem: location 1380 is 26
9999 mem: storing 0 in location 1393
 102 run: break-unless redo?, 
9999 mem: location 1393 is 0
9999 run: jumping to instruction 49
 102 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1392 is 1380
9999 mem: location 1380 is 26
9999 mem: storing 1 in location 1401
 102 run: break-unless undo?, 
9999 mem: location 1401 is 1
9999 run: jump-unless fell through
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1485
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1396
 102 run: break-unless *undo, 
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
9999 run: jump-unless fell through
 102 run: op:address:operation <- first *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1485 in location 1555
 103 run: result:location <- get *in, value:offset
9999 mem: location 1555 is 1485
9999 mem: location 1485 is 1475
9999 mem: location 1486 is 1373
9999 mem: location 1555 is 1485
9999 run: address to copy is 1485
9999 run: its type is number
9999 mem: location 1485 is 1475
9999 mem: storing 1475 in location 1556
 103 run: reply result
9999 mem: location 1556 is 1475
9999 run: result 0 is 1475
9999 mem: storing 1475 in location 1395
 102 run: *undo <- rest *undo
9999 mem: location 1396 is 1124
9999 mem: location 1124 is 1485
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1485 in location 1555
 103 run: result:address:list <- get *in, next:offset
9999 mem: location 1555 is 1485
9999 mem: location 1485 is 1475
9999 mem: location 1486 is 1373
9999 mem: location 1555 is 1485
9999 run: address to copy is 1486
9999 run: its type is address
9999 mem: location 1486 is 1373
9999 mem: storing 1373 in location 1556
 103 run: reply result
9999 mem: location 1556 is 1373
9999 run: result 0 is 1373
9999 mem: location 1396 is 1124
9999 mem: storing 1373 in location 1124
 102 run: redo:address:address:list <- get-address *editor, redo:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1544
9999 mem: location 1378 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1394
 102 run: *redo <- push op, *redo
9999 mem: location 1395 is 1475
9999 mem: location 1394 is 1125
9999 mem: location 1125 is 1544
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: x:location <- next-ingredient 
9999 mem: storing 1475 in location 1227
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1544 in location 1228
 103 run: result:address:list <- new list:type
9999 mem: new alloc: 1557
9999 mem: storing 1557 in location 1229
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1557
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1229 is 1557
9999 run: address to copy is 1557
9999 mem: storing 1557 in location 1230
 103 run: *val <- copy x
9999 mem: location 1227 is 1475
9999 mem: location 1230 is 1557
9999 mem: location 1230 is 1557
9999 mem: storing 1475 in location 1557
 103 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1557
9999 mem: location 1557 is 1475
9999 mem: location 1558 is 0
9999 mem: location 1229 is 1557
9999 run: address to copy is 1558
9999 mem: storing 1558 in location 1231
 103 run: *next <- copy in
9999 mem: location 1228 is 1544
9999 mem: location 1231 is 1558
9999 mem: location 1231 is 1558
9999 mem: storing 1544 in location 1558
 103 run: reply result
9999 mem: location 1229 is 1557
9999 run: result 0 is 1557
9999 mem: location 1394 is 1125
9999 mem: storing 1557 in location 1125
 102 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1395 is 1475
9999 mem: location 1475 is 1
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1395 is 1475
9999 mem: storing 1476 in location 1397
 102 run: break-unless move, 
9999 mem: location 1397 is 1476
9999 run: jump-unless fell through
 102 run: top:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1378 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1378 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1398
 102 run: *cursor-row <- get *move, before-row:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1476
9999 run: its type is number
9999 mem: location 1476 is 2
9999 mem: location 1388 is 1121
9999 mem: storing 2 in location 1121
 102 run: *cursor-column <- get *move, before-column:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1477
9999 run: its type is number
9999 mem: location 1477 is 1
9999 mem: location 1389 is 1122
9999 mem: storing 1 in location 1122
 102 run: *top <- get *move, before-top-of-screen:offset
9999 mem: location 1397 is 1476
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1397 is 1476
9999 run: address to copy is 1478
9999 run: its type is address
9999 mem: location 1478 is 1158
9999 mem: location 1398 is 1116
9999 mem: storing 1158 in location 1116
 102 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1395 is 1475
9999 mem: location 1475 is 1
9999 mem: location 1476 is 2
9999 mem: location 1477 is 1
9999 mem: location 1478 is 1158
9999 mem: location 1479 is 2
9999 mem: location 1480 is 3
9999 mem: location 1481 is 1158
9999 mem: location 1482 is 2
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1395 is 1475
9999 mem: storing 0 in location 1399
 102 run: break-unless typing, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 79
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1377 is 1009
9999 mem: location 1378 is 1115
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 1 in location 1287
 101 run: break-unless go-render?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 101 run: editor-render screen, editor
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1152
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1153
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1153 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1154
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1153 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1153 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1155
 102 run: row:number, column:number <- render screen, editor
9999 mem: location 1152 is 1009
9999 mem: location 1153 is 1115
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1200
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1201
 103 run: jump-if editor, 1:offset
9999 mem: location 1201 is 1115
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1202
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1200 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1555
 104 run: break-unless sc, 
9999 mem: location 1555 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1555 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1555 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1556
 104 run: reply height
9999 mem: location 1556 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1203
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1204
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1205
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1205 is 1158
9999 mem: storing 1158 in location 1206
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1555 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1205
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1207
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1208
 103 run: column:number <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1210
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1211
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1183
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1212
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 1
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 1
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: break-unless curr, 
9999 mem: location 1205 is 1161
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1205 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 97
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 97
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 97
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 97
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 10
9999 mem: storing 1035 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 97
9999 mem: location 1265 is 1035
9999 mem: location 1265 is 1035
9999 mem: storing 97 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1264 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1036
9999 mem: location 1266 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1555 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1158
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1158
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1555 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1168
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1205 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 98
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 98
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 98
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 98
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 11
9999 mem: storing 1037 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 98
9999 mem: location 1265 is 1037
9999 mem: location 1265 is 1037
9999 mem: storing 98 in location 1037
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1264 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1038
9999 mem: location 1266 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1555 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1161
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1161
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1555 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1171
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1205 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 99
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 99
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 99
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 99
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 12
9999 mem: storing 1039 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 99
9999 mem: location 1265 is 1039
9999 mem: location 1265 is 1039
9999 mem: storing 99 in location 1039
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1264 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1040
9999 mem: location 1266 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1555 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1168
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1168
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1555 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1174
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 1
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1205 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 13
9999 mem: storing 1041 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1041
9999 mem: location 1265 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1264 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1042
9999 mem: location 1266 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 14
9999 mem: storing 1043 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1043
9999 mem: location 1265 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1264 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1044
9999 mem: location 1266 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 15
9999 mem: storing 1045 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1045
9999 mem: location 1265 is 1045
9999 mem: storing 32 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1264 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1046
9999 mem: location 1266 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 16
9999 mem: storing 1047 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1047
9999 mem: location 1265 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1264 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1048
9999 mem: location 1266 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 17
9999 mem: storing 1049 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1049
9999 mem: location 1265 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1264 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1050
9999 mem: location 1266 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 18
9999 mem: storing 1051 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1051
9999 mem: location 1265 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1264 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1052
9999 mem: location 1266 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 10
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 19
9999 mem: storing 1053 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1053
9999 mem: location 1265 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1264 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1054
9999 mem: location 1266 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1208 is 1
9999 mem: storing 2 in location 1208
 103 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 2
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1555 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1171
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1171
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1555 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1206
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1205 is 1177
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 0
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1205 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 100
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 100
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 100
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1259
schedule: print-character/render/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 20
9999 mem: storing 1055 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 100
9999 mem: location 1265 is 1055
9999 mem: location 1265 is 1055
9999 mem: storing 100 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1056
9999 mem: location 1266 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1555 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1555 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1180
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1206 is 1177
9999 mem: location 1212 is 1118
9999 mem: location 1212 is 1118
9999 mem: storing 1177 in location 1118
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1205 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 101
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 101
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 101
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 21
9999 mem: storing 1057 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 101
9999 mem: location 1265 is 1057
9999 mem: location 1265 is 1057
9999 mem: storing 101 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1058
9999 mem: location 1266 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1555 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1555 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1183
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1205 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 102
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 102
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 102
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 22
9999 mem: storing 1059 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 102
9999 mem: location 1265 is 1059
9999 mem: location 1265 is 1059
9999 mem: storing 102 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1060
9999 mem: location 1266 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1555 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1555 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1186
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 2
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1215
 103 run: break-unless at-cursor?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1205 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 10
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 10
9999 mem: storing 1 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 2
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1218
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1200 is 1009
9999 mem: location 1209 is 3
9999 mem: location 1204 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 23
9999 mem: storing 1061 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1061
9999 mem: location 1265 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1062
9999 mem: location 1266 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 24
9999 mem: storing 1063 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1063
9999 mem: location 1265 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1264 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1064
9999 mem: location 1266 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 25
9999 mem: storing 1065 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1065
9999 mem: location 1265 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1264 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1066
9999 mem: location 1266 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 26
9999 mem: storing 1067 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1067
9999 mem: location 1265 is 1067
9999 mem: storing 32 in location 1067
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1264 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1068
9999 mem: location 1266 is 1068
9999 mem: storing 7 in location 1068
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 27
9999 mem: storing 1069 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1069
9999 mem: location 1265 is 1069
9999 mem: storing 32 in location 1069
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1264 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1070
9999 mem: location 1266 is 1070
9999 mem: storing 7 in location 1070
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 28
9999 mem: storing 1071 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1071
9999 mem: location 1265 is 1071
9999 mem: storing 32 in location 1071
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1071
9999 mem: location 1071 is 32
9999 mem: location 1072 is 7
9999 mem: location 1264 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1072
9999 mem: location 1266 is 1072
9999 mem: storing 7 in location 1072
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 105 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 105 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1259
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 105 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 105 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 29
9999 mem: storing 1073 in location 1264
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1265
 105 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1073
9999 mem: location 1265 is 1073
9999 mem: storing 32 in location 1073
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1073
9999 mem: location 1073 is 32
9999 mem: location 1074 is 7
9999 mem: location 1264 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1266
 105 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1074
9999 mem: location 1266 is 1074
9999 mem: storing 7 in location 1074
 105 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 105 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1208 is 2
9999 mem: storing 3 in location 1208
 103 run: column <- copy left
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1209
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1200 is 1009
9999 mem: location 1208 is 3
9999 mem: location 1209 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 3
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1200
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1555 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1555 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1206
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1205 is 1189
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1205 is 1189
9999 run: address to copy is 1189
9999 run: its type is number
9999 mem: location 1189 is 103
9999 mem: storing 103 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 103
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 103
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 103
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 0
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 103
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 103
  90 print-character: 103 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 103
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 30
9999 mem: storing 1075 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 103
9999 mem: location 1265 is 1075
9999 mem: location 1265 is 1075
9999 mem: storing 103 in location 1075
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1075
9999 mem: location 1075 is 103
9999 mem: location 1076 is 7
9999 mem: location 1264 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1076
9999 mem: location 1266 is 1076
9999 mem: storing 7 in location 1076
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1555 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1186
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1186
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1555 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1192
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1205 is 1192
9999 run: address to copy is 1192
9999 run: its type is number
9999 mem: location 1192 is 104
9999 mem: storing 104 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 104
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 104
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 104
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 1
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 104
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 104
  90 print-character: 104 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 104
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 31
9999 mem: storing 1077 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 104
9999 mem: location 1265 is 1077
9999 mem: location 1265 is 1077
9999 mem: storing 104 in location 1077
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1077
9999 mem: location 1077 is 104
9999 mem: location 1078 is 7
9999 mem: location 1264 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1078
9999 mem: location 1266 is 1078
9999 mem: storing 7 in location 1078
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1555 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1189
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1189
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1555 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 1195
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1208 is 3
9999 mem: location 1203 is 5
9999 mem: storing 0 in location 1213
 103 run: break-if off-screen?, 
9999 mem: location 1213 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1214 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1205 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1205 is 1195
9999 run: address to copy is 1195
9999 run: its type is number
9999 mem: location 1195 is 105
9999 mem: storing 105 in location 1216
 103 run: color <- get-color color, c
9999 mem: location 1207 is 7
9999 mem: location 1216 is 105
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1234
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1235
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1234 is 7
9999 mem: storing 1 in location 1236
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1237
 104 run: break-unless starting-comment?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 11
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1238
 104 run: break-unless color-is-blue?, 
9999 mem: location 1238 is 0
9999 run: jumping to instruction 20
 104 run: break-unless color-is-white?, 
9999 mem: location 1236 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1235 is 105
9999 mem: storing 0 in location 1240
 104 run: break-unless starting-assignment?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 27
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1234 is 7
9999 mem: storing 0 in location 1241
 104 run: break-unless color-is-red?, 
9999 mem: location 1241 is 0
9999 run: jumping to instruction 35
 104 run: reply color
9999 mem: location 1234 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1207
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1216 is 105
9999 mem: storing 0 in location 1217
 103 run: break-unless newline?, 
9999 mem: location 1217 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1209 is 2
9999 mem: location 1204 is 9
9999 mem: storing 0 in location 1219
 103 run: break-unless at-right?, 
9999 mem: location 1219 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1200 is 1009
9999 mem: location 1216 is 105
9999 mem: location 1207 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1247
9999 mem: storing 1 in location 1248
schedule: print-character/render/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 105
  90 print-character: 105 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 105
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 32
9999 mem: storing 1079 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 105
9999 mem: location 1265 is 1079
9999 mem: location 1265 is 1079
9999 mem: storing 105 in location 1079
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1079
9999 mem: location 1079 is 105
9999 mem: location 1080 is 7
9999 mem: location 1264 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1080
9999 mem: location 1266 is 1080
9999 mem: storing 7 in location 1080
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1205 is 1195
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1195 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1195
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1555 is 1195
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1556
 104 run: reply result
9999 mem: location 1556 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1205
 103 run: prev <- next-duplex prev
9999 mem: location 1206 is 1192
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1555
 104 run: jump-if in, 1:offset
9999 mem: location 1555 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1555 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1555 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1556
 104 run: reply result
9999 mem: location 1556 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1206
 103 run: column <- add column, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 1201 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1220
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1205 is 0
9999 mem: location 1220 is 1117
9999 mem: location 1220 is 1117
9999 mem: storing 0 in location 1117
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1214
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1221
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1214 is 0
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1222
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1208 is 3
9999 mem: location 1210 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1223
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1224
 103 run: break-unless before-cursor?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1208 is 3
9999 mem: location 1209 is 3
9999 mem: location 1200 is 1009
9999 mem: location 1201 is 1115
9999 run: result 0 is 3
9999 run: result 1 is 3
9999 mem: storing 3 in location 1156
9999 mem: storing 3 in location 1157
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1152 is 1009
9999 mem: location 1157 is 3
9999 mem: location 1155 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 103 run: column:number <- next-ingredient 
9999 mem: storing 3 in location 1272
 103 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 33
9999 mem: storing 1081 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1264 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1081
9999 mem: location 1265 is 1081
9999 mem: storing 32 in location 1081
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1081
9999 mem: location 1081 is 32
9999 mem: location 1082 is 7
9999 mem: location 1264 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1082
9999 mem: location 1266 is 1082
9999 mem: storing 7 in location 1082
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 34
9999 mem: storing 1083 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1264 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1083
9999 mem: location 1265 is 1083
9999 mem: storing 32 in location 1083
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1083
9999 mem: location 1083 is 32
9999 mem: location 1084 is 7
9999 mem: location 1264 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1084
9999 mem: location 1266 is 1084
9999 mem: storing 7 in location 1084
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 35
9999 mem: storing 1085 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1264 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1085
9999 mem: location 1265 is 1085
9999 mem: storing 32 in location 1085
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1085
9999 mem: location 1085 is 32
9999 mem: location 1086 is 7
9999 mem: location 1264 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1086
9999 mem: location 1266 is 1086
9999 mem: storing 7 in location 1086
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 36
9999 mem: storing 1087 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1264 is 1087
9999 run: address to copy is 1087
9999 mem: storing 1087 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1087
9999 mem: location 1265 is 1087
9999 mem: storing 32 in location 1087
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1087
9999 mem: location 1087 is 32
9999 mem: location 1088 is 7
9999 mem: location 1264 is 1087
9999 run: address to copy is 1088
9999 mem: storing 1088 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1088
9999 mem: location 1266 is 1088
9999 mem: storing 7 in location 1088
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 37
9999 mem: storing 1089 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1264 is 1089
9999 run: address to copy is 1089
9999 mem: storing 1089 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1089
9999 mem: location 1265 is 1089
9999 mem: storing 32 in location 1089
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1089
9999 mem: location 1089 is 32
9999 mem: location 1090 is 7
9999 mem: location 1264 is 1089
9999 run: address to copy is 1090
9999 mem: storing 1090 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1090
9999 mem: location 1266 is 1090
9999 mem: storing 7 in location 1090
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 38
9999 mem: storing 1091 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1264 is 1091
9999 run: address to copy is 1091
9999 mem: storing 1091 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1091
9999 mem: location 1265 is 1091
9999 mem: storing 32 in location 1091
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1091
9999 mem: location 1091 is 32
9999 mem: location 1092 is 7
9999 mem: location 1264 is 1091
9999 run: address to copy is 1092
9999 mem: storing 1092 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1092
9999 mem: location 1266 is 1092
9999 mem: storing 7 in location 1092
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1251 is 10
9999 mem: storing 30 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 30
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 32
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 39
9999 mem: storing 1093 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1264 is 1093
9999 run: address to copy is 1093
9999 mem: storing 1093 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 32
9999 mem: location 1265 is 1093
9999 mem: location 1265 is 1093
9999 mem: storing 32 in location 1093
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1093
9999 mem: location 1093 is 32
9999 mem: location 1094 is 7
9999 mem: location 1264 is 1093
9999 run: address to copy is 1094
9999 mem: storing 1094 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1094
9999 mem: location 1266 is 1094
9999 mem: storing 7 in location 1094
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 103 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1156 is 3
9999 mem: storing 4 in location 1156
 102 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1152 is 1009
9999 mem: location 1156 is 4
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1324
 103 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1325
 103 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1326
 103 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1327
 103 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1328
9999 mem: storing 1 in location 1329
 103 run: break-if style-found?, 
9999 mem: location 1329 is 1
9999 run: jumping to instruction 9
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
 103 run: break-if color-found?, 
9999 mem: location 1331 is 0
9999 run: jump-if fell through
 103 run: color <- copy 245/grey
9999 mem: storing 245 in location 1330
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
schedule: draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 103 run: break-if bg-color-found?, 
9999 mem: location 1333 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1332
 103 run: screen <- move-cursor screen, row, x
9999 mem: location 1324 is 1009
9999 mem: location 1325 is 4
9999 mem: location 1326 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 4
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1324
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 0
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 40
9999 mem: storing 1095 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1264 is 1095
9999 run: address to copy is 1095
9999 mem: storing 1095 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1095
9999 mem: location 1265 is 1095
9999 mem: storing 9480 in location 1095
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1095
9999 mem: location 1095 is 9480
9999 mem: location 1096 is 245
9999 mem: location 1264 is 1095
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1096
9999 mem: location 1266 is 1096
9999 mem: storing 245 in location 1096
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 1
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 41
9999 mem: storing 1097 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 245
9999 mem: location 1264 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1097
9999 mem: location 1265 is 1097
9999 mem: storing 9480 in location 1097
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1097
9999 mem: location 1097 is 9480
9999 mem: location 1098 is 245
9999 mem: location 1264 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1098
9999 mem: location 1266 is 1098
9999 mem: storing 245 in location 1098
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 1
9999 mem: storing 2 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 2
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 42
9999 mem: storing 1099 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 245
9999 mem: location 1264 is 1099
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1099
9999 mem: location 1265 is 1099
9999 mem: storing 9480 in location 1099
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1099
9999 mem: location 1099 is 9480
9999 mem: location 1100 is 245
9999 mem: location 1264 is 1099
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1100
9999 mem: location 1266 is 1100
9999 mem: storing 245 in location 1100
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 2
9999 mem: storing 3 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 3
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 43
9999 mem: storing 1101 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 245
9999 mem: location 1264 is 1101
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1101
9999 mem: location 1265 is 1101
9999 mem: storing 9480 in location 1101
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1101
9999 mem: location 1101 is 9480
9999 mem: location 1102 is 245
9999 mem: location 1264 is 1101
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1102
9999 mem: location 1266 is 1102
9999 mem: storing 245 in location 1102
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 3
9999 mem: storing 4 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 4
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 44
9999 mem: storing 1103 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 245
9999 mem: location 1264 is 1103
9999 run: address to copy is 1103
9999 mem: storing 1103 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1103
9999 mem: location 1265 is 1103
9999 mem: storing 9480 in location 1103
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1103
9999 mem: location 1103 is 9480
9999 mem: location 1104 is 245
9999 mem: location 1264 is 1103
9999 run: address to copy is 1104
9999 mem: storing 1104 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1104
9999 mem: location 1266 is 1104
9999 mem: storing 245 in location 1104
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 1012
9999 mem: storing 5 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 4
9999 mem: storing 5 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 5
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 45
9999 mem: storing 1105 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1105
9999 mem: location 1105 is 9480
9999 mem: location 1106 is 245
9999 mem: location 1264 is 1105
9999 run: address to copy is 1105
9999 mem: storing 1105 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1105
9999 mem: location 1265 is 1105
9999 mem: storing 9480 in location 1105
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1105
9999 mem: location 1105 is 9480
9999 mem: location 1106 is 245
9999 mem: location 1264 is 1105
9999 run: address to copy is 1106
9999 mem: storing 1106 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1106
9999 mem: location 1266 is 1106
9999 mem: storing 245 in location 1106
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 1012
9999 mem: storing 6 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 5
9999 mem: storing 6 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 6
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 46
9999 mem: storing 1107 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1107
9999 mem: location 1107 is 9480
9999 mem: location 1108 is 245
9999 mem: location 1264 is 1107
9999 run: address to copy is 1107
9999 mem: storing 1107 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1107
9999 mem: location 1265 is 1107
9999 mem: storing 9480 in location 1107
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1107
9999 mem: location 1107 is 9480
9999 mem: location 1108 is 245
9999 mem: location 1264 is 1107
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1108
9999 mem: location 1266 is 1108
9999 mem: storing 245 in location 1108
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 1012
9999 mem: storing 7 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 6
9999 mem: storing 7 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 7
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 47
9999 mem: storing 1109 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1109
9999 mem: location 1109 is 9480
9999 mem: location 1110 is 245
9999 mem: location 1264 is 1109
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1109
9999 mem: location 1265 is 1109
9999 mem: storing 9480 in location 1109
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1109
9999 mem: location 1109 is 9480
9999 mem: location 1110 is 245
9999 mem: location 1264 is 1109
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1110
9999 mem: location 1266 is 1110
9999 mem: storing 245 in location 1110
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 1012
9999 mem: storing 8 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 7
9999 mem: storing 8 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 8
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 48
9999 mem: storing 1111 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1111
9999 mem: location 1111 is 9480
9999 mem: location 1112 is 245
9999 mem: location 1264 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1111
9999 mem: location 1265 is 1111
9999 mem: storing 9480 in location 1111
schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1111
9999 mem: location 1111 is 9480
9999 mem: location 1112 is 245
9999 mem: location 1264 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1112
9999 mem: location 1266 is 1112
9999 mem: storing 245 in location 1112
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1255 is 1012
9999 mem: storing 9 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 8
9999 mem: storing 9 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 9
9999 mem: location 1327 is 9
9999 mem: storing 1 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1324 is 1009
9999 mem: location 1328 is 9480
9999 mem: location 1330 is 245
9999 mem: location 1332 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1247
9999 mem: storing 1 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 1 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1251 is 10
9999 mem: storing 40 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 40
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 9480
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 49
9999 mem: storing 1113 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1113
9999 mem: location 1113 is 9480
9999 mem: location 1114 is 245
9999 mem: location 1264 is 1113
9999 run: address to copy is 1113
9999 mem: storing 1113 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 9480
9999 mem: location 1265 is 1113
9999 mem: location 1265 is 1113
9999 mem: storing 9480 in location 1113
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1113
9999 mem: location 1113 is 9480
9999 mem: location 1114 is 245
9999 mem: location 1264 is 1113
9999 run: address to copy is 1114
9999 mem: storing 1114 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 245
9999 mem: location 1266 is 1114
9999 mem: location 1266 is 1114
9999 mem: storing 245 in location 1114
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1267 is 9
9999 mem: storing 1 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 1
9999 run: jumping to instruction 74
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: x <- add x, 1
9999 mem: location 1326 is 9
9999 mem: storing 10 in location 1326
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1326 is 10
9999 mem: location 1327 is 9
9999 mem: storing 0 in location 1334
 103 run: break-unless continue?, 
9999 mem: location 1334 is 0
9999 run: jumping to instruction 27
 102 run: row <- add row, 1
9999 mem: location 1156 is 4
9999 mem: storing 5 in location 1156
 102 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1152 is 1009
9999 mem: location 1156 is 5
9999 mem: location 1154 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 9
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1227
 103 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1228
 103 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1230
 103 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1231
 103 run: break-if screen, 
9999 mem: location 1227 is 1009
9999 run: jumping to instruction 10
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1291
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 104 run: break-unless sc, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1293
 104 run: *row <- copy new-row
9999 mem: location 1291 is 5
9999 mem: location 1293 is 1011
9999 mem: location 1293 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1294
 104 run: *column <- copy new-column
9999 mem: location 1292 is 0
9999 mem: location 1294 is 1012
9999 mem: location 1294 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1290 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1227
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1227 is 1009
9999 mem: location 1229 is 0
9999 mem: location 1231 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1271
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1272
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1273
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 0
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 0
9999 mem: storing 1 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 1
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 1
9999 mem: storing 2 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 2
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 2
9999 mem: storing 3 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 3
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 3
9999 mem: storing 4 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 4
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 4
9999 mem: storing 5 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 5
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 5
9999 mem: storing 6 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 6
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 6
9999 mem: storing 7 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 7
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 7
9999 mem: storing 8 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 8
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 8
9999 mem: storing 9 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 9
9999 mem: location 1273 is 9
9999 mem: storing 0 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1271 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1246
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 105 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 105 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 105 run: trace 90, [print-character], c
9999 mem: location 1246 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1252 is 5
9999 mem: storing 0 in location 1254
 105 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1245 is 1009
 104 run: column <- add column, 1
9999 mem: location 1272 is 9
9999 mem: storing 10 in location 1272
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1272 is 10
9999 mem: location 1273 is 9
9999 mem: storing 1 in location 1274
 104 run: break-if done?, 
9999 mem: location 1274 is 1
9999 run: jumping to instruction 10
 103 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1230 is 0
9999 mem: location 1231 is 9
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1298
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1299
 104 run: right:number <- next-ingredient 
9999 mem: storing 9 in location 1300
 104 run: row <- add row, 1
9999 mem: location 1298 is 5
9999 mem: storing 6 in location 1298
 104 run: screen <- move-cursor screen, row, left
9999 mem: location 1297 is 1009
9999 mem: location 1298 is 6
9999 mem: location 1299 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1290
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1291
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1292
 105 run: break-unless sc, 
9999 mem: location 1290 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1293
 105 run: *row <- copy new-row
9999 mem: location 1291 is 6
9999 mem: location 1293 is 1011
9999 mem: location 1293 is 1011
9999 mem: storing 6 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1290 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1294
 105 run: *column <- copy new-column
9999 mem: location 1292 is 0
9999 mem: location 1294 is 1012
9999 mem: location 1294 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1290 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1297 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1555
 105 run: break-unless sc, 
9999 mem: location 1555 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1555 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1555 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1556
 105 run: reply height
9999 mem: location 1556 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1301
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1298 is 6
9999 mem: location 1301 is 5
9999 mem: storing 1 in location 1302
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1302 is 1
9999 run: jumping to instruction 15
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1227 is 1009
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1551
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1551 in location 1324
 102 run: break-unless x, 
9999 mem: location 1324 is 1551
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1324 is 1551
9999 mem: location 1551 is 1
9999 mem: location 1552 is 1546
9999 mem: location 1324 is 1551
9999 run: address to copy is 1551
9999 mem: storing 1551 in location 1325
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1324 is 1551
9999 mem: location 1551 is 1
9999 mem: location 1552 is 1546
9999 mem: location 1324 is 1551
9999 run: address to copy is 1552
9999 run: its type is address
9999 mem: location 1552 is 1546
9999 mem: storing 1546 in location 1326
 102 run: max:number <- length *buf
9999 mem: location 1326 is 1546
9999 mem: storing 1 in location 1327
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1325 is 1551
9999 mem: location 1551 is 1
9999 mem: location 1327 is 1
9999 mem: storing 1 in location 1328
 102 run: break-unless done?, 
9999 mem: location 1328 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1553 in location 1329
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1329 is 1553
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1556 is 0
9999 mem: location 1324 is 1551
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1551
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1551 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 1 in location 1285
 101 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1285 is 1
9999 run: jumping to instruction 25
 100 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 3
 100 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1177
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1373
9999 mem: location 1125 is 1557
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 4
  99 run: memory-should-contain [
    3 <- 2
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
