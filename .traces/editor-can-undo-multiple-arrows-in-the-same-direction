9991 parse: --- defining scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"10": "literal", "width": <>}
9993 parse:   ingredient: {"5": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc\ndef\nghi": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [abc
def
ghi]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"10": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"screen": <>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-render screen, 2:address:shared:editor-data
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 2, 1\n    press right-arrow\n    press right-arrow\n    press up-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    left-click 2, 1
    press right-arrow
    press right-arrow
    press up-arrow
  ]
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 2\n    4 <- 3\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 2
    4 <- 3
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 2\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 2
    4 <- 1
  ]
9999 parse: recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- deduce types for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: screen <= <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- transform names for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9992 transform: instruction new-fake-screen
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 100
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 100
9992 transform: instruction new-editor
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 99
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 99
9992 transform: instruction editor-render
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9992 transform: score for base: 98
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9992 transform: score for variant 0: 98
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- transform braces for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-multiple-arrows-in-the-same-direction
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 102 run: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 5
9999 mem: location 1007 is 1013
9999 mem: storing 5 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 50 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1018
9999 mem: storing 50 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1120
9999 mem: storing 10 in location 1121
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1123
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1123 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1124
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1125
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1126
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 0
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 0
9999 mem: storing 1020 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 1
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 1
9999 mem: storing 1022 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1126 is 1
9999 mem: storing 2 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 2
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 2
9999 mem: storing 1024 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1126 is 2
9999 mem: storing 3 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 3
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 3
9999 mem: storing 1026 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1126 is 3
9999 mem: storing 4 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 4
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 4
9999 mem: storing 1028 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1126 is 4
9999 mem: storing 5 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 5
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 5
9999 mem: storing 1030 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1126 is 5
9999 mem: storing 6 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 6
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 6
9999 mem: storing 1032 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1126 is 6
9999 mem: storing 7 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 7
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 7
9999 mem: storing 1034 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1126 is 7
9999 mem: storing 8 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 8
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 8
9999 mem: storing 1036 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1126 is 8
9999 mem: storing 9 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 9
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 9
9999 mem: storing 1038 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1126 is 9
9999 mem: storing 10 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 10
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 10
9999 mem: storing 1040 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1126 is 10
9999 mem: storing 11 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 11
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 11
9999 mem: storing 1042 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1126 is 11
9999 mem: storing 12 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 12
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 12
9999 mem: storing 1044 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1126 is 12
9999 mem: storing 13 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 13
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 13
9999 mem: storing 1046 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1126 is 13
9999 mem: storing 14 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 14
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 14
9999 mem: storing 1048 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1126 is 14
9999 mem: storing 15 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 15
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 15
9999 mem: storing 1050 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1126 is 15
9999 mem: storing 16 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 16
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 16
9999 mem: storing 1052 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1126 is 16
9999 mem: storing 17 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 17
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 17
9999 mem: storing 1054 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1126 is 17
9999 mem: storing 18 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 18
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 18
9999 mem: storing 1056 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1126 is 18
9999 mem: storing 19 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 19
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 19
9999 mem: storing 1058 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1126 is 19
9999 mem: storing 20 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 20
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 20
9999 mem: storing 1060 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1060
9999 mem: storing 0 in location 1060
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1061
9999 mem: storing 7 in location 1061
 104 run: i <- add i, 1
9999 mem: location 1126 is 20
9999 mem: storing 21 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 21
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 21
9999 mem: storing 1062 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1062
9999 mem: storing 0 in location 1062
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1063
9999 mem: storing 7 in location 1063
 104 run: i <- add i, 1
9999 mem: location 1126 is 21
9999 mem: storing 22 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 22
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 22
9999 mem: storing 1064 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1064
9999 mem: storing 0 in location 1064
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1065
9999 mem: storing 7 in location 1065
 104 run: i <- add i, 1
9999 mem: location 1126 is 22
9999 mem: storing 23 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 23
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 23
9999 mem: storing 1066 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1066
9999 mem: storing 0 in location 1066
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1067
9999 mem: storing 7 in location 1067
 104 run: i <- add i, 1
9999 mem: location 1126 is 23
9999 mem: storing 24 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 24
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 24
9999 mem: storing 1068 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1068
9999 mem: storing 0 in location 1068
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1069
9999 mem: storing 7 in location 1069
 104 run: i <- add i, 1
9999 mem: location 1126 is 24
9999 mem: storing 25 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 25
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 25
9999 mem: storing 1070 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1070
9999 mem: storing 0 in location 1070
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1071
9999 mem: storing 7 in location 1071
 104 run: i <- add i, 1
9999 mem: location 1126 is 25
9999 mem: storing 26 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 26
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 26
9999 mem: storing 1072 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1072
9999 mem: storing 0 in location 1072
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1073
9999 mem: storing 7 in location 1073
 104 run: i <- add i, 1
9999 mem: location 1126 is 26
9999 mem: storing 27 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 27
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 27
9999 mem: storing 1074 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1074
9999 mem: storing 0 in location 1074
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1075
9999 mem: storing 7 in location 1075
 104 run: i <- add i, 1
9999 mem: location 1126 is 27
9999 mem: storing 28 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 28
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 28
9999 mem: storing 1076 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1076
9999 mem: storing 0 in location 1076
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1077
9999 mem: storing 7 in location 1077
 104 run: i <- add i, 1
9999 mem: location 1126 is 28
9999 mem: storing 29 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 29
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 29
9999 mem: storing 1078 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1078
9999 mem: storing 0 in location 1078
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1079
9999 mem: storing 7 in location 1079
 104 run: i <- add i, 1
9999 mem: location 1126 is 29
9999 mem: storing 30 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 30
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 30
9999 mem: storing 1080 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1080
9999 mem: storing 0 in location 1080
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1081
9999 mem: storing 7 in location 1081
 104 run: i <- add i, 1
9999 mem: location 1126 is 30
9999 mem: storing 31 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 31
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 31
9999 mem: storing 1082 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1082
9999 mem: storing 0 in location 1082
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1083
9999 mem: storing 7 in location 1083
 104 run: i <- add i, 1
9999 mem: location 1126 is 31
9999 mem: storing 32 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 32
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 32
9999 mem: storing 1084 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1084
9999 mem: storing 0 in location 1084
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1085
9999 mem: storing 7 in location 1085
 104 run: i <- add i, 1
9999 mem: location 1126 is 32
9999 mem: storing 33 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 33
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 33
9999 mem: storing 1086 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1086
9999 mem: storing 0 in location 1086
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1087
9999 mem: storing 7 in location 1087
 104 run: i <- add i, 1
9999 mem: location 1126 is 33
9999 mem: storing 34 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 34
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 34
9999 mem: storing 1088 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1088
9999 mem: storing 0 in location 1088
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1089
9999 mem: storing 7 in location 1089
 104 run: i <- add i, 1
9999 mem: location 1126 is 34
9999 mem: storing 35 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 35
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 35
9999 mem: storing 1090 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1090
9999 mem: storing 0 in location 1090
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1091
9999 mem: storing 7 in location 1091
 104 run: i <- add i, 1
9999 mem: location 1126 is 35
9999 mem: storing 36 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 36
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 36
9999 mem: storing 1092 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1092
9999 mem: storing 0 in location 1092
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1093
9999 mem: storing 7 in location 1093
 104 run: i <- add i, 1
9999 mem: location 1126 is 36
9999 mem: storing 37 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 37
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 37
9999 mem: storing 1094 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1094
9999 mem: storing 0 in location 1094
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1095
9999 mem: storing 7 in location 1095
 104 run: i <- add i, 1
9999 mem: location 1126 is 37
9999 mem: storing 38 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 38
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 38
9999 mem: storing 1096 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1096
9999 mem: storing 0 in location 1096
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1097
9999 mem: storing 7 in location 1097
 104 run: i <- add i, 1
9999 mem: location 1126 is 38
9999 mem: storing 39 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 39
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 39
9999 mem: storing 1098 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1098
9999 mem: storing 0 in location 1098
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1099
9999 mem: storing 7 in location 1099
 104 run: i <- add i, 1
9999 mem: location 1126 is 39
9999 mem: storing 40 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 40
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 40
9999 mem: storing 1100 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1100
9999 mem: storing 0 in location 1100
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1101
9999 mem: storing 7 in location 1101
 104 run: i <- add i, 1
9999 mem: location 1126 is 40
9999 mem: storing 41 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 41
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 41
9999 mem: storing 1102 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1103
9999 mem: storing 7 in location 1103
 104 run: i <- add i, 1
9999 mem: location 1126 is 41
9999 mem: storing 42 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 42
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 42
9999 mem: storing 1104 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1104
9999 mem: storing 0 in location 1104
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1105
9999 mem: storing 7 in location 1105
 104 run: i <- add i, 1
9999 mem: location 1126 is 42
9999 mem: storing 43 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 43
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 43
9999 mem: storing 1106 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1106
9999 mem: storing 0 in location 1106
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1107
9999 mem: storing 7 in location 1107
 104 run: i <- add i, 1
9999 mem: location 1126 is 43
9999 mem: storing 44 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 44
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 44
9999 mem: storing 1108 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1108
9999 mem: storing 0 in location 1108
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1109
9999 mem: storing 7 in location 1109
 104 run: i <- add i, 1
9999 mem: location 1126 is 44
9999 mem: storing 45 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 45
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 45
9999 mem: storing 1110 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1110
9999 mem: storing 0 in location 1110
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1111
9999 mem: storing 7 in location 1111
 104 run: i <- add i, 1
9999 mem: location 1126 is 45
9999 mem: storing 46 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 46
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 46
9999 mem: storing 1112 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1112
9999 mem: storing 0 in location 1112
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1113
9999 mem: storing 7 in location 1113
 104 run: i <- add i, 1
9999 mem: location 1126 is 46
9999 mem: storing 47 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 47
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 47
9999 mem: storing 1114 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1114
9999 mem: storing 0 in location 1114
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1115
9999 mem: storing 7 in location 1115
 104 run: i <- add i, 1
9999 mem: location 1126 is 47
9999 mem: storing 48 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 48
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 48
9999 mem: storing 1116 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1116
9999 mem: storing 0 in location 1116
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1117
9999 mem: storing 7 in location 1117
 104 run: i <- add i, 1
9999 mem: location 1126 is 48
9999 mem: storing 49 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 49
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 49
9999 mem: storing 1118 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1118
9999 mem: storing 0 in location 1118
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1119
9999 mem: storing 7 in location 1119
 104 run: i <- add i, 1
9999 mem: location 1126 is 49
9999 mem: storing 50 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 50
9999 mem: location 1125 is 50
9999 mem: storing 1 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1123 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: 1:address:shared:array:character <- new [abc
def
ghi]
9999 mem: storing 1132 in location 1
9999 mem: incrementing refcount of 1132: 0 -> 1
 102 run: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9999 mem: location 1 is 1132
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1145
9999 mem: storing 11 in location 1146
 103 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1148
9999 mem: incrementing refcount of 1132: 1 -> 2
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1149
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1150
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1151
 103 run: right <- subtract right, 1
9999 mem: location 1151 is 10
9999 mem: storing 9 in location 1151
 103 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1158
9999 mem: storing 1158 in location 1152
9999 mem: incrementing refcount of 1158: 0 -> 1
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1153
 103 run: *x <- copy left
9999 mem: location 1150 is 0
9999 mem: location 1153 is 1163
9999 mem: storing 0 in location 1163
 103 run: x <- get-address *result, right:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1153
 103 run: *x <- copy right
9999 mem: location 1151 is 9
9999 mem: location 1153 is 1164
9999 mem: storing 9 in location 1164
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1153
 103 run: *x <- copy 1/top
9999 mem: location 1153 is 1166
9999 mem: storing 1 in location 1166
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1153
9990 schedule: new-editor/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 103 run: *x <- copy left
9999 mem: location 1150 is 0
9999 mem: location 1153 is 1167
9999 mem: storing 0 in location 1167
 103 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1154
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1171
9999 mem: storing 7 in location 1172
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1174
 104 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1175
 104 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1180
9999 mem: storing 1180 in location 1176
9999 mem: incrementing refcount of 1180: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1176 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1176 is 1180
9999 mem: skipping refcount at 1180
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1177
 104 run: *val <- copy x
9999 mem: location 1174 is 167
9999 mem: location 1177 is 1181
9999 mem: storing 167 in location 1181
 104 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1176 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1176 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1178
 104 run: *next <- copy in
9999 mem: location 1175 is 0
9999 mem: location 1178 is 1182
9999 mem: storing 0 in location 1182
 104 run: jump-unless in, 
9999 mem: location 1175 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1176 is 1180
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1180
9999 mem: location 1154 is 1159
9999 mem: storing 1180 in location 1159
9999 mem: incrementing refcount of 1180: 1 -> 2
 103 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1155
 103 run: *top-of-screen <- copy *init
9999 mem: location 1154 is 1159
9999 mem: location 1159 is 1180
9999 mem: location 1155 is 1160
9999 mem: storing 1180 in location 1160
9999 mem: incrementing refcount of 1180: 2 -> 3
 103 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1156
 103 run: *y <- copy *init
9999 mem: location 1154 is 1159
9999 mem: location 1159 is 1180
9999 mem: location 1156 is 1162
9999 mem: storing 1180 in location 1162
9999 mem: incrementing refcount of 1180: 3 -> 4
 103 run: result <- insert-text result, s
9999 mem: location 1152 is 1158
9999 mem: location 1148 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1184
9999 mem: storing 8 in location 1185
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1187
9999 mem: incrementing refcount of 1158: 1 -> 2
 104 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1188
9999 mem: incrementing refcount of 1132: 2 -> 3
 104 run: jump-if text, 1:offset
9999 mem: location 1188 is 1132
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9999 mem: storing 11 in location 1189
 104 run: jump-if len, 1:offset
9999 mem: location 1189 is 11
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1190
 104 run: curr:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1187 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1187 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1180
9999 mem: storing 1180 in location 1191
9999 mem: incrementing refcount of 1180: 4 -> 5
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 0
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 0
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 97
9999 mem: storing 97 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 97
9999 mem: location 1191 is 1180
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1175
9999 mem: incrementing refcount of 1180: 5 -> 6
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1176
9999 mem: incrementing refcount of 1194: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1176 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9999 mem: storing 1195 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 97
9999 mem: location 1177 is 1195
9999 mem: storing 97 in location 1195
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1175 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1175 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9999 mem: storing 1182 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1194
9999 mem: location 1179 is 1182
9999 mem: storing 1194 in location 1182
9999 mem: incrementing refcount of 1194: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1176 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9999 mem: storing 1197 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1180
9999 mem: location 1179 is 1197
9999 mem: storing 1180 in location 1197
9999 mem: incrementing refcount of 1180: 6 -> 7
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1180
9999 mem: location 1176 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1196
9999 mem: storing 0 in location 1196
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1180
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1180
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1198
9999 mem: storing 3 in location 1199
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 7 -> 8
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 8 -> 7
9999 mem: storing 1194 in location 1191
9999 mem: incrementing refcount of 1194: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 0
9999 mem: storing 1 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 1
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 1
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 98
9999 mem: storing 98 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 98
9999 mem: location 1191 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1175
9999 mem: incrementing refcount of 1194: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1203
9999 mem: storing 1203 in location 1176
9999 mem: incrementing refcount of 1203: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9999 mem: storing 1204 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 98
9999 mem: location 1177 is 1204
9999 mem: storing 98 in location 1204
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1180
9999 mem: location 1175 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1180
9999 mem: location 1175 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9999 mem: storing 1196 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1203
9999 mem: location 1179 is 1196
9999 mem: storing 1203 in location 1196
9999 mem: incrementing refcount of 1203: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1194
9999 mem: location 1179 is 1206
9999 mem: storing 1194 in location 1206
9999 mem: incrementing refcount of 1194: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1194
9999 mem: location 1176 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1205
9999 mem: storing 0 in location 1205
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1194
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 7 -> 6
9999 mem: storing 1203 in location 1191
9999 mem: incrementing refcount of 1203: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 1
9999 mem: storing 2 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 2
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 2
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 99
9999 mem: storing 99 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 99
9999 mem: location 1191 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1175
9999 mem: incrementing refcount of 1203: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1207
9999 mem: storing 1207 in location 1176
9999 mem: incrementing refcount of 1207: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9999 mem: storing 1208 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 99
9999 mem: location 1177 is 1208
9999 mem: storing 99 in location 1208
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1194
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1194
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1207
9999 mem: location 1179 is 1205
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9999 mem: storing 1210 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1203
9999 mem: location 1179 is 1210
9999 mem: storing 1203 in location 1210
9999 mem: incrementing refcount of 1203: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1176 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1209
9999 mem: storing 0 in location 1209
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1203
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 7 -> 6
9999 mem: storing 1207 in location 1191
9999 mem: incrementing refcount of 1207: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 2
9999 mem: storing 3 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 3
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 3
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 10
9999 mem: storing 10 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 10
9999 mem: location 1191 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1175
9999 mem: incrementing refcount of 1207: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1176
9999 mem: incrementing refcount of 1211: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9999 mem: storing 1212 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 10
9999 mem: location 1177 is 1212
9999 mem: storing 10 in location 1212
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1175 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1211
9999 mem: location 1179 is 1209
9999 mem: storing 1211 in location 1209
9999 mem: incrementing refcount of 1211: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9999 mem: storing 1214 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1207
9999 mem: location 1179 is 1214
9999 mem: storing 1207 in location 1214
9999 mem: incrementing refcount of 1207: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1176 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1213
9999 mem: storing 0 in location 1213
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1207
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 7 -> 6
9999 mem: storing 1211 in location 1191
9999 mem: incrementing refcount of 1211: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 3
9999 mem: storing 4 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 4
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 4
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 100
9999 mem: storing 100 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 100
9999 mem: location 1191 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1175
9999 mem: incrementing refcount of 1211: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1215
9999 mem: storing 1215 in location 1176
9999 mem: incrementing refcount of 1215: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 100
9999 mem: location 1177 is 1216
9999 mem: storing 100 in location 1216
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1215
9999 mem: location 1179 is 1213
9999 mem: storing 1215 in location 1213
9999 mem: incrementing refcount of 1215: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1211
9999 mem: location 1179 is 1218
9999 mem: storing 1211 in location 1218
9999 mem: incrementing refcount of 1211: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1176 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1217
9999 mem: storing 0 in location 1217
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1211
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 7 -> 6
9999 mem: storing 1215 in location 1191
9999 mem: incrementing refcount of 1215: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 4
9999 mem: storing 5 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 5
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 5
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 101
9999 mem: storing 101 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 101
9999 mem: location 1191 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1175
9999 mem: incrementing refcount of 1215: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1219
9999 mem: storing 1219 in location 1176
9999 mem: incrementing refcount of 1219: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9999 mem: storing 1220 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 101
9999 mem: location 1177 is 1220
9999 mem: storing 101 in location 1220
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1175 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1219
9999 mem: location 1179 is 1217
9999 mem: storing 1219 in location 1217
9999 mem: incrementing refcount of 1219: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9999 mem: storing 1222 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1215
9999 mem: location 1179 is 1222
9999 mem: storing 1215 in location 1222
9999 mem: incrementing refcount of 1215: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1176 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9999 mem: storing 1221 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1221
9999 mem: storing 0 in location 1221
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1215
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 7 -> 6
9999 mem: storing 1219 in location 1191
9999 mem: incrementing refcount of 1219: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 5
9999 mem: storing 6 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 6
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 6
9998 run: address to copy is 1140
9998 run: its type is character
9999 mem: location 1140 is 102
9999 mem: storing 102 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 102
9999 mem: location 1191 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1175
9999 mem: incrementing refcount of 1219: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1223
9999 mem: storing 1223 in location 1176
9999 mem: incrementing refcount of 1223: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9999 mem: storing 1224 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 102
9999 mem: location 1177 is 1224
9999 mem: storing 102 in location 1224
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1175 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9999 mem: storing 1221 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1223
9999 mem: location 1179 is 1221
9999 mem: storing 1223 in location 1221
9999 mem: incrementing refcount of 1223: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1226
9999 mem: storing 1226 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1219
9999 mem: location 1179 is 1226
9999 mem: storing 1219 in location 1226
9999 mem: incrementing refcount of 1219: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1176 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9999 mem: storing 1225 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1225
9999 mem: storing 0 in location 1225
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1219
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 7 -> 6
9999 mem: storing 1223 in location 1191
9999 mem: incrementing refcount of 1223: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 6
9999 mem: storing 7 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 7
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 7
9998 run: address to copy is 1141
9998 run: its type is character
9999 mem: location 1141 is 10
9999 mem: storing 10 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 10
9999 mem: location 1191 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1175
9999 mem: incrementing refcount of 1223: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1227
9999 mem: storing 1227 in location 1176
9999 mem: incrementing refcount of 1227: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1176 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9999 mem: storing 1228 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 10
9999 mem: location 1177 is 1228
9999 mem: storing 10 in location 1228
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1175 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1175 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9999 mem: storing 1225 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1227
9999 mem: location 1179 is 1225
9999 mem: storing 1227 in location 1225
9999 mem: incrementing refcount of 1227: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1176 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1230
9999 mem: storing 1230 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1223
9999 mem: location 1179 is 1230
9999 mem: storing 1223 in location 1230
9999 mem: incrementing refcount of 1223: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1223
9999 mem: location 1176 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1229
9999 mem: storing 0 in location 1229
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1223
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 7 -> 6
9999 mem: storing 1227 in location 1191
9999 mem: incrementing refcount of 1227: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 7
9999 mem: storing 8 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 8
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 8
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 103
9999 mem: storing 103 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 103
9999 mem: location 1191 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1175
9999 mem: incrementing refcount of 1227: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1231
9999 mem: storing 1231 in location 1176
9999 mem: incrementing refcount of 1231: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1176 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9999 mem: storing 1232 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 103
9999 mem: location 1177 is 1232
9999 mem: storing 103 in location 1232
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1223
9999 mem: location 1175 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1223
9999 mem: location 1175 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9999 mem: storing 1229 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1231
9999 mem: location 1179 is 1229
9999 mem: storing 1231 in location 1229
9999 mem: incrementing refcount of 1231: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1176 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1234
9999 mem: storing 1234 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1227
9999 mem: location 1179 is 1234
9999 mem: storing 1227 in location 1234
9999 mem: incrementing refcount of 1227: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1227
9999 mem: location 1176 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9999 mem: storing 1233 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1233
9999 mem: storing 0 in location 1233
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1227
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 7 -> 6
9999 mem: storing 1231 in location 1191
9999 mem: incrementing refcount of 1231: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 8
9999 mem: storing 9 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 9
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 9
9998 run: address to copy is 1143
9998 run: its type is character
9999 mem: location 1143 is 104
9999 mem: storing 104 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 104
9999 mem: location 1191 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1175
9999 mem: incrementing refcount of 1231: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1235
9999 mem: storing 1235 in location 1176
9999 mem: incrementing refcount of 1235: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 0
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1176 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9999 mem: storing 1236 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 104
9999 mem: location 1177 is 1236
9999 mem: storing 104 in location 1236
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1227
9999 mem: location 1175 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 0
9999 mem: location 1234 is 1227
9999 mem: location 1175 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9999 mem: storing 1233 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1235
9999 mem: location 1179 is 1233
9999 mem: storing 1235 in location 1233
9999 mem: incrementing refcount of 1235: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1176 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1238
9999 mem: storing 1238 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1231
9999 mem: location 1179 is 1238
9999 mem: storing 1231 in location 1238
9999 mem: incrementing refcount of 1231: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 0
9999 mem: location 1238 is 1231
9999 mem: location 1176 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9999 mem: storing 1237 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1237
9999 mem: storing 0 in location 1237
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1231
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 7 -> 6
9999 mem: storing 1235 in location 1191
9999 mem: incrementing refcount of 1235: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 9
9999 mem: storing 10 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 10
9999 mem: location 1189 is 11
9999 mem: storing 0 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1188 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1190 is 10
9998 run: address to copy is 1144
9998 run: its type is character
9999 mem: location 1144 is 105
9999 mem: storing 105 in location 1193
 104 run: insert_2 c, curr
9999 mem: location 1193 is 105
9999 mem: location 1191 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1174
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1175
9999 mem: incrementing refcount of 1235: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1239
9999 mem: storing 1239 in location 1176
9999 mem: incrementing refcount of 1239: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 0
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1176 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9999 mem: storing 1240 in location 1177
 105 run: *val <- copy x
9999 mem: location 1174 is 105
9999 mem: location 1177 is 1240
9999 mem: storing 105 in location 1240
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 0
9999 mem: location 1238 is 1231
9999 mem: location 1175 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1178
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 0
9999 mem: location 1238 is 1231
9999 mem: location 1175 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9999 mem: storing 1237 in location 1179
 105 run: *y <- copy new-node
9999 mem: location 1176 is 1239
9999 mem: location 1179 is 1237
9999 mem: storing 1239 in location 1237
9999 mem: incrementing refcount of 1239: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1176 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1242
9999 mem: storing 1242 in location 1179
 105 run: *y <- copy in
9999 mem: location 1175 is 1235
9999 mem: location 1179 is 1242
9999 mem: storing 1235 in location 1242
9999 mem: incrementing refcount of 1235: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1176 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9999 mem: storing 1241 in location 1179
 105 run: *y <- copy next-node
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1241
9999 mem: storing 0 in location 1241
 105 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1235
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1191 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 7 -> 6
9999 mem: storing 1239 in location 1191
9999 mem: incrementing refcount of 1239: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1190 is 10
9999 mem: storing 11 in location 1190
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1190 is 11
9999 mem: location 1189 is 11
9999 mem: storing 1 in location 1192
 104 run: jump-if done?, 
9999 mem: location 1192 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1187 is 1158
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 2 -> 1
9999 mem: storing 1158 in location 1152
9999 mem: incrementing refcount of 1158: 1 -> 2
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1156
 103 run: *y <- copy *init
9999 mem: location 1154 is 1159
9999 mem: location 1159 is 1180
9999 mem: location 1156 is 1162
9999 mem: decrementing refcount of 1180: 7 -> 6
9999 mem: storing 1180 in location 1162
9999 mem: incrementing refcount of 1180: 6 -> 7
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1149 is 1012
9999 mem: location 1152 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1243
9999 mem: storing 28 in location 1244
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1247
9999 mem: incrementing refcount of 1158: 2 -> 3
 104 run: jump-if editor, 1:offset
9999 mem: location 1247 is 1158
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1248
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1246 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 105 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1249
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1250
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1251
9999 mem: incrementing refcount of 1180: 7 -> 8
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1251 is 1180
9999 mem: storing 1180 in location 1252
9999 mem: incrementing refcount of 1180: 8 -> 9
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1180
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 10 -> 9
9999 mem: storing 1194 in location 1251
9999 mem: incrementing refcount of 1194: 7 -> 8
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1253
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1254
 104 run: column:number <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1256
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1257
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1258
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 1
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1273
9999 mem: storing 6 in location 1274
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1194
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 0
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1252 is 1180
9999 mem: location 1258 is 1162
9999 mem: decrementing refcount of 1180: 9 -> 8
9999 mem: storing 1180 in location 1162
9999 mem: incrementing refcount of 1180: 8 -> 9
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 97
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 97
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1281
9999 mem: storing 25 in location 1282
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 7 -> 8
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 97
  90 print-character: 97 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 10
9999 mem: storing 1040 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 97
9999 mem: location 1304 is 1040
9999 mem: storing 97 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 9 -> 8
9999 mem: storing 1203 in location 1251
9999 mem: incrementing refcount of 1203: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1180
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 10 -> 9
9999 mem: storing 1194 in location 1252
9999 mem: incrementing refcount of 1194: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1203
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 1
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9990 schedule: get-color/render/new-editor/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 98
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 98
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 8 -> 9
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 98
  90 print-character: 98 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 3 -> 4
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 11
9999 mem: storing 1042 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 98
9999 mem: location 1304 is 1042
9999 mem: storing 98 in location 1042
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1043
9999 mem: storing 7 in location 1043
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 9 -> 8
9999 mem: storing 1207 in location 1251
9999 mem: incrementing refcount of 1207: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 11 -> 10
9999 mem: storing 1203 in location 1252
9999 mem: incrementing refcount of 1203: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1207
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 2
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 99
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 99
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 99
  90 print-character: 99 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 4 -> 5
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 12
9999 mem: storing 1044 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 99
9999 mem: location 1304 is 1044
9999 mem: storing 99 in location 1044
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1045
9999 mem: storing 7 in location 1045
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 9 -> 8
9999 mem: storing 1211 in location 1251
9999 mem: incrementing refcount of 1211: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 11 -> 10
9999 mem: storing 1207 in location 1252
9999 mem: incrementing refcount of 1207: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1211
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1264
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 105 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 5 -> 6
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 13
9999 mem: storing 1046 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 12 -> 11
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 11 -> 12
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 12 -> 13
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 6 -> 7
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 14
9999 mem: storing 1048 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 13 -> 14
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 7 -> 8
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 15
9999 mem: storing 1050 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1050
9999 mem: storing 32 in location 1050
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1051
9999 mem: storing 7 in location 1051
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 14 -> 15
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 8 -> 9
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 16
9999 mem: storing 1052 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1052
9999 mem: storing 32 in location 1052
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1053
9999 mem: storing 7 in location 1053
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 15 -> 14
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 15 -> 16
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 9 -> 10
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 17
9999 mem: storing 1054 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1054
9999 mem: storing 32 in location 1054
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1055
9999 mem: storing 7 in location 1055
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 16 -> 15
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 16 -> 17
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 10 -> 11
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 18
9999 mem: storing 1056 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1056
9999 mem: storing 32 in location 1056
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1057
9999 mem: storing 7 in location 1057
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 17 -> 18
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 11 -> 12
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 19
9999 mem: storing 1058 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1058
9999 mem: storing 32 in location 1058
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1059
9999 mem: storing 7 in location 1059
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1254 is 1
9999 mem: storing 2 in location 1254
 104 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 2
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 18 -> 19
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 9 -> 8
9999 mem: storing 1215 in location 1251
9999 mem: incrementing refcount of 1215: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 11 -> 10
9999 mem: storing 1211 in location 1252
9999 mem: incrementing refcount of 1211: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1215
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 100
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 100
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 100
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 100
  90 print-character: 100 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 20
9999 mem: storing 1060 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 100
9999 mem: location 1304 is 1060
9999 mem: storing 100 in location 1060
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1061
9999 mem: storing 7 in location 1061
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 9 -> 8
9999 mem: storing 1219 in location 1251
9999 mem: incrementing refcount of 1219: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 11 -> 10
9999 mem: storing 1215 in location 1252
9999 mem: incrementing refcount of 1215: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1219
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 101
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 101
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 101
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 101
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 101
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 101
  90 print-character: 101 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 13 -> 14
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 21
9999 mem: storing 1062 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 101
9999 mem: location 1304 is 1062
9999 mem: storing 101 in location 1062
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1063
9999 mem: storing 7 in location 1063
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 9 -> 8
9999 mem: storing 1223 in location 1251
9999 mem: incrementing refcount of 1223: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 11 -> 10
9999 mem: storing 1219 in location 1252
9999 mem: incrementing refcount of 1219: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1223
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 102
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 102
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 102
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 102
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 102
  90 print-character: 102 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 14 -> 15
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 22
9999 mem: storing 1064 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 102
9999 mem: location 1304 is 1064
9999 mem: storing 102 in location 1064
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1065
9999 mem: storing 7 in location 1065
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 9 -> 8
9999 mem: storing 1227 in location 1251
9999 mem: incrementing refcount of 1227: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1219
9999 trace: incrementing callstack depth to 4
9990 schedule: next_2/render/new-editor/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 11 -> 10
9999 mem: storing 1223 in location 1252
9999 mem: incrementing refcount of 1223: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1227
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 22 -> 23
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 105 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 23 -> 24
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 15 -> 16
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 23
9999 mem: storing 1066 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1066
9999 mem: storing 32 in location 1066
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1067
9999 mem: storing 7 in location 1067
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 24 -> 25
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 16 -> 17
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 24
9999 mem: storing 1068 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1068
9999 mem: storing 32 in location 1068
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1069
9999 mem: storing 7 in location 1069
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 25 -> 24
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 17 -> 18
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 25
9999 mem: storing 1070 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1070
9999 mem: storing 32 in location 1070
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1071
9999 mem: storing 7 in location 1071
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 26 -> 25
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 25 -> 26
 105 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 26 -> 27
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 18 -> 19
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 26
9999 mem: storing 1072 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1072
9999 mem: storing 32 in location 1072
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1073
9999 mem: storing 7 in location 1073
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 27 -> 26
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 26 -> 27
 105 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 27 -> 28
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 19 -> 20
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 27
9999 mem: storing 1074 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1074
9999 mem: storing 32 in location 1074
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1075
9999 mem: storing 7 in location 1075
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 28 -> 29
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 20 -> 21
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 28
9999 mem: storing 1076 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1076
9999 mem: storing 32 in location 1076
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1077
9999 mem: storing 7 in location 1077
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 29 -> 28
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 29 -> 30
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 21 -> 22
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 29
9999 mem: storing 1078 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1078
9999 mem: storing 32 in location 1078
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1079
9999 mem: storing 7 in location 1079
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 30 -> 29
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 29 -> 30
 105 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1254 is 2
9999 mem: storing 3 in location 1254
 104 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 3
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 30 -> 31
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 31 -> 30
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 30 -> 31
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 9 -> 8
9999 mem: storing 1231 in location 1251
9999 mem: incrementing refcount of 1231: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 11 -> 10
9999 mem: storing 1227 in location 1252
9999 mem: incrementing refcount of 1227: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1231
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 103
9999 mem: storing 103 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 103
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 103
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
9990 schedule: get-color/render/new-editor/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 103
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 103
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 103
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 103
  90 print-character: 103 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 22 -> 23
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 30
9999 mem: storing 1080 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 103
9999 mem: location 1304 is 1080
9999 mem: storing 103 in location 1080
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1081
9999 mem: storing 7 in location 1081
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 9 -> 8
9999 mem: storing 1235 in location 1251
9999 mem: incrementing refcount of 1235: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 11 -> 10
9999 mem: storing 1231 in location 1252
9999 mem: incrementing refcount of 1231: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1235
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 104
9999 mem: storing 104 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 104
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 104
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 104
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 104
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 104
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 32 -> 33
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 104
  90 print-character: 104 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 23 -> 24
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 31
9999 mem: storing 1082 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 104
9999 mem: location 1304 is 1082
9999 mem: storing 104 in location 1082
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1083
9999 mem: storing 7 in location 1083
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 4 -> 5
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 9 -> 8
9999 mem: storing 1239 in location 1251
9999 mem: incrementing refcount of 1239: 5 -> 6
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 11 -> 10
9999 mem: storing 1235 in location 1252
9999 mem: incrementing refcount of 1235: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1239
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 105
9999 mem: storing 105 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 105
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 105
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 105
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 105
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 105
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 33 -> 34
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 105
  90 print-character: 105 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 24 -> 25
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 32
9999 mem: storing 1084 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 105
9999 mem: location 1304 is 1084
9999 mem: storing 105 in location 1084
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1085
9999 mem: storing 7 in location 1085
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1239
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1201
9999 mem: incrementing refcount of 1239: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1239
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1202
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1239: 7 -> 6
9999 mem: storing 0 in location 1251
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 11 -> 10
9999 mem: storing 1239 in location 1252
9999 mem: incrementing refcount of 1239: 7 -> 8
 104 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1267
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1251 is 0
9999 mem: location 1267 is 1161
9999 mem: storing 0 in location 1161
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1260 is 0
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1269
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1270
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 104 run: jump-unless before-cursor?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 81
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1272
 104 run: *bottom <- copy row
9999 mem: location 1254 is 3
9999 mem: location 1272 is 1165
9999 mem: storing 3 in location 1165
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1246 is 1012
9999 mem: location 1247 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 3
9998 run: result 2 is 1012
9998 run: result 3 is 1158
9999 mem: decrementing refcount of 1012: 34 -> 33
9999 mem: storing 1012 in location 1149
9999 mem: incrementing refcount of 1012: 33 -> 34
9999 mem: decrementing refcount of 1158: 3 -> 2
9999 mem: storing 1158 in location 1152
9999 mem: incrementing refcount of 1158: 2 -> 3
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1152 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1157
 103 run: *indent? <- copy 1/true
9999 mem: location 1157 is 1168
9999 mem: storing 1 in location 1168
 103 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1152 is 1158
9999 mem: location 1149 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1158
9999 mem: storing 1158 in location 2
9999 mem: incrementing refcount of 1158: 3 -> 4
 102 run: editor-render screen, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1174
9999 mem: incrementing refcount of 1012: 34 -> 35
 103 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1175
9999 mem: incrementing refcount of 1158: 4 -> 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1176
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1177
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1174 is 1012
9999 mem: location 1175 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 35 -> 36
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1247
9999 mem: incrementing refcount of 1158: 5 -> 6
 104 run: jump-if editor, 1:offset
9999 mem: location 1247 is 1158
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1248
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1246 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 36 -> 37
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 105 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1249
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1250
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1251
9999 mem: incrementing refcount of 1180: 9 -> 10
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1251 is 1180
9999 mem: storing 1180 in location 1252
9999 mem: incrementing refcount of 1180: 10 -> 11
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1180
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 11 -> 12
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 12 -> 11
9999 mem: storing 1194 in location 1251
9999 mem: incrementing refcount of 1194: 11 -> 12
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1253
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1254
 104 run: column:number <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1256
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1257
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1258
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 1
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 37 -> 38
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 38 -> 37
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 37 -> 38
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1194
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 0
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1252 is 1180
9999 mem: location 1258 is 1162
9999 mem: decrementing refcount of 1180: 11 -> 10
9999 mem: storing 1180 in location 1162
9999 mem: incrementing refcount of 1180: 10 -> 11
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 97
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 97
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 38 -> 39
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 97
  90 print-character: 97 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 25 -> 26
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 10
9999 mem: storing 1040 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 97
9999 mem: location 1304 is 1040
9999 mem: storing 97 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 13 -> 12
9999 mem: storing 1203 in location 1251
9999 mem: incrementing refcount of 1203: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1180
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 11 -> 12
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 12 -> 11
9999 mem: storing 1194 in location 1252
9999 mem: incrementing refcount of 1194: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1203
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 1
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
9990 schedule: get-color/render/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 98
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 98
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 39 -> 40
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 98
  90 print-character: 98 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 26 -> 27
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 11
9999 mem: storing 1042 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 98
9999 mem: location 1304 is 1042
9999 mem: storing 98 in location 1042
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1043
9999 mem: storing 7 in location 1043
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 1207 in location 1251
9999 mem: incrementing refcount of 1207: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1194
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 15 -> 14
9999 mem: storing 1203 in location 1252
9999 mem: incrementing refcount of 1203: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1207
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 2
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 99
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 99
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 40 -> 41
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 99
  90 print-character: 99 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 27 -> 28
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 12
9999 mem: storing 1044 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 99
9999 mem: location 1304 is 1044
9999 mem: storing 99 in location 1044
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1045
9999 mem: storing 7 in location 1045
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 1211 in location 1251
9999 mem: incrementing refcount of 1211: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 15 -> 14
9999 mem: storing 1207 in location 1252
9999 mem: incrementing refcount of 1207: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1211
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1264
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 41 -> 42
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 105 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 42 -> 43
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 28 -> 29
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 13
9999 mem: storing 1046 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 42 -> 43
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 43 -> 44
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 29 -> 30
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 14
9999 mem: storing 1048 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 43 -> 44
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 44 -> 45
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 30 -> 31
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 15
9999 mem: storing 1050 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1050
9999 mem: storing 32 in location 1050
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1051
9999 mem: storing 7 in location 1051
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 45 -> 44
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 44 -> 45
 105 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 45 -> 46
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 31 -> 32
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 16
9999 mem: storing 1052 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1052
9999 mem: storing 32 in location 1052
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1053
9999 mem: storing 7 in location 1053
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 46 -> 45
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 45 -> 46
 105 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 46 -> 47
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
9990 schedule: print/clear-line-delimited/render/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 32 -> 33
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 17
9999 mem: storing 1054 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1054
9999 mem: storing 32 in location 1054
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1055
9999 mem: storing 7 in location 1055
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 46 -> 47
 105 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 47 -> 48
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 33 -> 34
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 18
9999 mem: storing 1056 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1056
9999 mem: storing 32 in location 1056
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1057
9999 mem: storing 7 in location 1057
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 48 -> 47
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 47 -> 48
 105 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 48 -> 49
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 34 -> 35
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 19
9999 mem: storing 1058 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1058
9999 mem: storing 32 in location 1058
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1059
9999 mem: storing 7 in location 1059
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 49 -> 48
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 48 -> 49
 105 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1254 is 1
9999 mem: storing 2 in location 1254
 104 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 2
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 49 -> 50
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 50 -> 49
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 49 -> 50
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 13 -> 12
9999 mem: storing 1215 in location 1251
9999 mem: incrementing refcount of 1215: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 15 -> 14
9999 mem: storing 1211 in location 1252
9999 mem: incrementing refcount of 1211: 13 -> 14
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1215
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 100
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 100
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 100
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 100
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 50 -> 51
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 100
  90 print-character: 100 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 35 -> 36
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 20
9999 mem: storing 1060 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 100
9999 mem: location 1304 is 1060
9999 mem: storing 100 in location 1060
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1061
9999 mem: storing 7 in location 1061
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 13 -> 12
9999 mem: storing 1219 in location 1251
9999 mem: incrementing refcount of 1219: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 15 -> 14
9999 mem: storing 1215 in location 1252
9999 mem: incrementing refcount of 1215: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1219
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 101
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 101
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 101
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 101
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 101
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 51 -> 52
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 101
  90 print-character: 101 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 36 -> 37
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 21
9999 mem: storing 1062 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 101
9999 mem: location 1304 is 1062
9999 mem: storing 101 in location 1062
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1063
9999 mem: storing 7 in location 1063
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 13 -> 12
9999 mem: storing 1223 in location 1251
9999 mem: incrementing refcount of 1223: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 15 -> 14
9999 mem: storing 1219 in location 1252
9999 mem: incrementing refcount of 1219: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1223
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 102
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 102
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 102
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 102
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 52 -> 53
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 102
  90 print-character: 102 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 37 -> 38
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 22
9999 mem: storing 1064 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 102
9999 mem: location 1304 is 1064
9999 mem: storing 102 in location 1064
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1065
9999 mem: storing 7 in location 1065
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 13 -> 12
9999 mem: storing 1227 in location 1251
9999 mem: incrementing refcount of 1227: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 12 -> 13
9990 schedule: next_2/render/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 15 -> 14
9999 mem: storing 1223 in location 1252
9999 mem: incrementing refcount of 1223: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1227
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 53 -> 54
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 105 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 38 -> 39
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 23
9999 mem: storing 1066 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1066
9999 mem: storing 32 in location 1066
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1067
9999 mem: storing 7 in location 1067
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 54 -> 55
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 39 -> 40
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 24
9999 mem: storing 1068 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1068
9999 mem: storing 32 in location 1068
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1069
9999 mem: storing 7 in location 1069
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 55 -> 56
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 40 -> 41
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 25
9999 mem: storing 1070 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1070
9999 mem: storing 32 in location 1070
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1071
9999 mem: storing 7 in location 1071
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 56 -> 57
 105 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 41 -> 42
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 26
9999 mem: storing 1072 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1072
9999 mem: storing 32 in location 1072
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1073
9999 mem: storing 7 in location 1073
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 58 -> 57
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 57 -> 58
 105 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 58 -> 59
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 42 -> 43
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 27
9999 mem: storing 1074 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1074
9999 mem: storing 32 in location 1074
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1075
9999 mem: storing 7 in location 1075
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 59 -> 58
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 58 -> 59
 105 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 59 -> 60
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 43 -> 44
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 28
9999 mem: storing 1076 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1076
9999 mem: storing 32 in location 1076
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1077
9999 mem: storing 7 in location 1077
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 60 -> 59
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 59 -> 60
 105 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 60 -> 61
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 106 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 106 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1298
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 44 -> 45
 106 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 29
9999 mem: storing 1078 in location 1303
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1304
 106 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1078
9999 mem: storing 32 in location 1078
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1305
 106 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1079
9999 mem: storing 7 in location 1079
 106 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 106 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 61 -> 60
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 60 -> 61
 105 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1254 is 2
9999 mem: storing 3 in location 1254
 104 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 3
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 61 -> 62
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 62 -> 61
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 61 -> 62
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 13 -> 12
9999 mem: storing 1231 in location 1251
9999 mem: incrementing refcount of 1231: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1223
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 15 -> 14
9999 mem: storing 1227 in location 1252
9999 mem: incrementing refcount of 1227: 13 -> 14
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1231
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 103
9999 mem: storing 103 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 103
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 103
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 103
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 103
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 103
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 62 -> 63
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 103
  90 print-character: 103 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 45 -> 46
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 30
9999 mem: storing 1080 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 103
9999 mem: location 1304 is 1080
9999 mem: storing 103 in location 1080
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1081
9999 mem: storing 7 in location 1081
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 13 -> 12
9999 mem: storing 1235 in location 1251
9999 mem: incrementing refcount of 1235: 11 -> 12
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1227
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 15 -> 14
9999 mem: storing 1231 in location 1252
9999 mem: incrementing refcount of 1231: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1235
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 104
9999 mem: storing 104 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 104
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 104
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 104
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 104
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 104
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 63 -> 64
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 104
  90 print-character: 104 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 46 -> 47
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 31
9999 mem: storing 1082 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 104
9999 mem: location 1304 is 1082
9999 mem: storing 104 in location 1082
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1083
9999 mem: storing 7 in location 1083
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 12 -> 13
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 13 -> 12
9999 mem: storing 1239 in location 1251
9999 mem: incrementing refcount of 1239: 9 -> 10
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1231
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 12 -> 13
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 15 -> 14
9999 mem: storing 1235 in location 1252
9999 mem: incrementing refcount of 1235: 13 -> 14
 104 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 1239
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 104 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 105
9999 mem: storing 105 in location 1262
 104 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 105
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 105
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 105
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 105
9999 mem: storing 0 in location 1263
 104 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 104 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 105
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 64 -> 65
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 105
  90 print-character: 105 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 47 -> 48
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 32
9999 mem: storing 1084 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 105
9999 mem: location 1304 is 1084
9999 mem: storing 105 in location 1084
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1085
9999 mem: storing 7 in location 1085
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1251 is 1239
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1201
9999 mem: incrementing refcount of 1239: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1239
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1202
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1239: 11 -> 10
9999 mem: storing 0 in location 1251
 104 run: prev <- next_2 prev
9999 mem: location 1252 is 1235
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 14 -> 15
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 10 -> 11
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 15 -> 14
9999 mem: storing 1239 in location 1252
9999 mem: incrementing refcount of 1239: 11 -> 12
 104 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1267
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1251 is 0
9999 mem: location 1267 is 1161
9999 mem: storing 0 in location 1161
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1260
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1268
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1260 is 0
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1269
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 0 in location 1270
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 104 run: jump-unless before-cursor?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 81
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1272
 104 run: *bottom <- copy row
9999 mem: location 1254 is 3
9999 mem: location 1272 is 1165
9999 mem: storing 3 in location 1165
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1246 is 1012
9999 mem: location 1247 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 3
9999 mem: storing 3 in location 1178
9999 mem: storing 3 in location 1179
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1174 is 1012
9999 mem: location 1179 is 3
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 65 -> 66
 104 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 104 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 104 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 66 -> 67
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 48 -> 49
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 33
9999 mem: storing 1086 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1303 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1086
9999 mem: storing 32 in location 1086
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1303 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1087
9999 mem: storing 7 in location 1087
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 67 -> 66
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 66 -> 67
 104 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 49 -> 50
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 34
9999 mem: storing 1088 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1303 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1088
9999 mem: storing 32 in location 1088
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1303 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1089
9999 mem: storing 7 in location 1089
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 68 -> 67
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 67 -> 68
 104 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 68 -> 69
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 50 -> 51
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 35
9999 mem: storing 1090 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1303 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1090
9999 mem: storing 32 in location 1090
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1303 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1091
9999 mem: storing 7 in location 1091
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 69 -> 68
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 68 -> 69
 104 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 69 -> 70
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 51 -> 52
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 36
9999 mem: storing 1092 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1303 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1092
9999 mem: storing 32 in location 1092
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1303 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1093
9999 mem: storing 7 in location 1093
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 69 -> 70
 104 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 70 -> 71
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 52 -> 53
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 37
9999 mem: storing 1094 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1303 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1094
9999 mem: storing 32 in location 1094
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1303 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1095
9999 mem: storing 7 in location 1095
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 70 -> 71
 104 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 71 -> 72
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 53 -> 54
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 38
9999 mem: storing 1096 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1303 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1096
9999 mem: storing 32 in location 1096
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1303 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1097
9999 mem: storing 7 in location 1097
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 71 -> 72
 104 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 104 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 72 -> 73
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 54 -> 55
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 39
9999 mem: storing 1098 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1303 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1098
9999 mem: storing 32 in location 1098
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1303 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1099
9999 mem: storing 7 in location 1099
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 73 -> 72
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 72 -> 73
 104 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 104 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 104 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: row <- add row, 1
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1174 is 1012
9999 mem: location 1178 is 4
9999 mem: location 1176 is 0
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1308
9999 mem: storing 12 in location 1309
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 73 -> 74
 104 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1312
 104 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1313
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1314
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1315
9999 mem: storing 1 in location 1316
 104 run: jump-if style-found?, 
9999 mem: location 1316 is 1
9998 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
 104 run: jump-if color-found?, 
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1317
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 104 run: jump-if bg-color-found?, 
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1319
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1311 is 1012
9999 mem: location 1312 is 4
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 74 -> 75
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 74 -> 75
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 0
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 75 -> 76
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 55 -> 56
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 40
9999 mem: storing 1100 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1303 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1100
9999 mem: storing 9480 in location 1100
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 7
9999 mem: location 1303 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1101
9999 mem: storing 245 in location 1101
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 0
9999 mem: storing 1 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 1
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 56 -> 57
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 41
9999 mem: storing 1102 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1303 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1102
9999 mem: storing 9480 in location 1102
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 7
9999 mem: location 1303 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1103
9999 mem: storing 245 in location 1103
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 1
9999 mem: storing 2 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 2
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 57 -> 58
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 42
9999 mem: storing 1104 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1303 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1104
9999 mem: storing 9480 in location 1104
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 7
9999 mem: location 1303 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1105
9999 mem: storing 245 in location 1105
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 2
9999 mem: storing 3 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 3
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 58 -> 59
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 43
9999 mem: storing 1106 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1303 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1106
9999 mem: storing 9480 in location 1106
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 7
9999 mem: location 1303 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1107
9999 mem: storing 245 in location 1107
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 3
9999 mem: storing 4 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 4
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 59 -> 60
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 44
9999 mem: storing 1108 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1303 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1108
9999 mem: storing 9480 in location 1108
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 7
9999 mem: location 1303 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1109
9999 mem: storing 245 in location 1109
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 4
9999 mem: storing 5 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 5
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 80 -> 81
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 60 -> 61
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 45
9999 mem: storing 1110 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1303 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1110
9999 mem: storing 9480 in location 1110
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 7
9999 mem: location 1303 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1111
9999 mem: storing 245 in location 1111
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 5
9999 mem: storing 6 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 6
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 61 -> 62
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 46
9999 mem: storing 1112 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1303 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1112
9999 mem: storing 9480 in location 1112
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 7
9999 mem: location 1303 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1113
9999 mem: storing 245 in location 1113
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 6
9999 mem: storing 7 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 7
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 62 -> 63
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 47
9999 mem: storing 1114 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1303 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1114
9999 mem: storing 9480 in location 1114
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 7
9999 mem: location 1303 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1115
9999 mem: storing 245 in location 1115
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 7
9999 mem: storing 8 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 8
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 63 -> 64
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 48
9999 mem: storing 1116 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 7
9999 mem: location 1303 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1116
9999 mem: storing 9480 in location 1116
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 7
9999 mem: location 1303 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1117
9999 mem: storing 245 in location 1117
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 8
9999 mem: storing 9 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 9
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 105 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 105 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 105 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 105 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 105 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 105 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1298
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 64 -> 65
 105 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 49
9999 mem: storing 1118 in location 1303
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 7
9999 mem: location 1303 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1304
 105 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1118
9999 mem: storing 9480 in location 1118
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 7
9999 mem: location 1303 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1305
 105 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1119
9999 mem: storing 245 in location 1119
 105 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 105 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 105 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: x <- add x, 1
9999 mem: location 1313 is 9
9999 mem: storing 10 in location 1313
 104 run: jump 
9998 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 10
9999 mem: location 1314 is 9
9999 mem: storing 0 in location 1321
 104 run: jump-unless continue?, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 27
 104 run: reply screen:address:shared:screen
9999 mem: location 1311 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: row <- add row, 1
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1174 is 1012
9999 mem: location 1178 is 5
9999 mem: location 1176 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 85 -> 86
 104 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1277
 104 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 104 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1279
 104 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1280
 104 run: jump-if screen, 
9999 mem: location 1276 is 1012
9998 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1276 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1278 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1322
9999 mem: storing 6 in location 1323
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 86 -> 87
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1326
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
 105 run: jump-unless screen, 
9999 mem: location 1325 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1328
 105 run: *row <- copy new-row
9999 mem: location 1326 is 5
9999 mem: location 1328 is 1015
9999 mem: storing 5 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1329
 105 run: *column <- copy new-column
9999 mem: location 1327 is 0
9999 mem: location 1329 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1325 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 86 -> 87
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1276 is 1012
9999 mem: location 1278 is 0
9999 mem: location 1280 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 87 -> 88
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 105 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 88 -> 89
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 88 -> 89
 105 run: column <- add column, 1
9999 mem: location 1188 is 0
9999 mem: storing 1 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 89 -> 90
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 89 -> 90
 105 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 90 -> 91
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 91 -> 90
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 90 -> 91
 105 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 92 -> 91
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 91 -> 92
 105 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 92 -> 93
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 93 -> 92
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 92 -> 93
 105 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 93 -> 94
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 94 -> 93
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 93 -> 94
 105 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 94 -> 95
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 95 -> 94
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 94 -> 95
 105 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 95 -> 96
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 95 -> 96
 105 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 96 -> 97
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 96 -> 97
 105 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 97 -> 98
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 106 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 106 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 106 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 106 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 97 -> 98
 105 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 105 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1276 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1279 is 0
9999 mem: location 1280 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1330
9999 mem: storing 7 in location 1331
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 98 -> 99
 105 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1334
 105 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1335
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1336
 105 run: row <- add row, 1
9999 mem: location 1334 is 5
9999 mem: storing 6 in location 1334
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1333 is 1012
9999 mem: location 1334 is 6
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 99 -> 100
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1326
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
 106 run: jump-unless screen, 
9999 mem: location 1325 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1328
 106 run: *row <- copy new-row
9999 mem: location 1326 is 6
9999 mem: location 1328 is 1015
9999 mem: storing 6 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1329
 106 run: *column <- copy new-column
9999 mem: location 1327 is 0
9999 mem: location 1329 is 1016
9999 mem: storing 0 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1325 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 100 -> 99
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 99 -> 100
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 100 -> 101
 106 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 106 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1337
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1334 is 6
9999 mem: location 1337 is 5
9999 mem: storing 1 in location 1338
 105 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1338 is 1
9998 run: jumping to instruction 15
 105 run: reply screen:address:shared:screen
9999 mem: location 1333 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1174 is 1012
9999 mem: location 1175 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console [
    left-click 2, 1
    press right-arrow
    press right-arrow
    press up-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"1": "literal"}
9992 load: after rewriting: left-click 2, 1
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"right-arrow": <>}
9992 load: after rewriting: press right-arrow
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"right-arrow": <>}
9992 load: after rewriting: press right-arrow
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"up-arrow": <>}
9992 load: after rewriting: press up-arrow
9999 mem: storing 'left-click' event starting at 1341
9999 mem: storing 'press' event starting at 1345
9999 mem: storing 'press' event starting at 1349
9999 mem: storing 'press' event starting at 1353
9999 mem: storing console in 1357
9999 mem: storing console data in 1359
 102 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1357
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1360
9999 mem: storing 14 in location 1361
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 101 -> 102
 103 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1357 in location 1364
9999 mem: incrementing refcount of 1357: 0 -> 1
 103 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 6 -> 7
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1366
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1367
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 1
9999 mem: location 1367 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 102 -> 103
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 104 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 104 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 104 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 103 -> 102
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 102 -> 103
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1357
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1357 in location 1311
9999 mem: incrementing refcount of 1357: 1 -> 2
 104 run: jump-unless console, 
9999 mem: location 1311 is 1357
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 0
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1358
9999 mem: storing 1358 in location 1312
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 0
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1359
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1359 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 0 -> 1
 104 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 4 in location 1314
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 0
9999 mem: location 1314 is 4
9999 mem: storing 0 in location 1315
 104 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9998 run: base address is 1340
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 0
9998 run: address to copy is 1341
9998 run: its type is event
9999 mem: location 1341 is 2
9999 mem: location 1342 is 65513
9999 mem: location 1343 is 2
9999 mem: location 1344 is 1
9999 mem: storing 2 in location 1317
9999 mem: storing 65513 in location 1318
9999 mem: storing 2 in location 1319
9999 mem: storing 1 in location 1320
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 0
9999 mem: location 1312 is 1358
9999 mem: storing 1 in location 1358
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 2
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 2
9999 mem: location 1320 is 1
9999 mem: location 1311 is 1357
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [2, 65513, 2, 1]
9998 run: result 1 is 1357
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1368
9999 mem: storing 65513 in location 1369
9999 mem: storing 2 in location 1370
9999 mem: storing 1 in location 1371
9999 mem: decrementing refcount of 1357: 2 -> 1
9999 mem: storing 1357 in location 1364
9999 mem: incrementing refcount of 1357: 1 -> 2
9999 mem: storing 1 in location 1372
9999 mem: storing 0 in location 1373
 103 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1368 is 2
9999 mem: location 1369 is 65513
9999 mem: location 1370 is 2
9999 mem: location 1371 is 1
9999 mem: storing 1369 in location 1374
 103 run: jump-unless t, 
9999 mem: location 1374 is 1369
9998 run: jump-unless fell through
 103 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 mem: location 1374 is 1369
9999 mem: location 1369 is 65513
9999 mem: location 1370 is 2
9999 mem: location 1371 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1376
9999 mem: storing 27 in location 1377
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1379
9999 mem: incrementing refcount of 1012: 103 -> 104
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1380
9999 mem: incrementing refcount of 1158: 7 -> 8
 104 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1381
9999 mem: storing 2 in location 1382
9999 mem: storing 1 in location 1383
 104 run: jump-if editor, 1:offset
9999 mem: location 1380 is 1158
9998 run: jumping to instruction 6
 104 run: click-row:number <- get t, row:offset
9999 mem: location 1381 is 65513
9999 mem: location 1382 is 2
9999 mem: location 1383 is 1
9998 run: address to copy is 1382
9998 run: its type is number
9999 mem: location 1382 is 2
9999 mem: storing 2 in location 1384
 104 run: jump-if click-row, 1:offset
9999 mem: location 1384 is 2
9998 run: jumping to instruction 9
 104 run: click-column:number <- get t, column:offset
9999 mem: location 1381 is 65513
9999 mem: location 1382 is 2
9999 mem: location 1383 is 1
9998 run: address to copy is 1383
9998 run: its type is number
9999 mem: location 1383 is 1
9999 mem: storing 1 in location 1385
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1386
 104 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1385 is 1
9999 mem: location 1386 is 0
9999 mem: storing 0 in location 1387
 104 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1387 is 0
9998 run: jumping to instruction 14
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1388
 104 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1385 is 1
9999 mem: location 1388 is 9
9999 mem: storing 0 in location 1389
 104 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1389 is 0
9998 run: jumping to instruction 18
 104 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1390
 104 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1391
 104 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1392
9999 mem: incrementing refcount of 1180: 11 -> 12
 104 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1379 is 1012
9999 mem: location 1380 is 1158
9999 mem: location 1384 is 2
9999 mem: location 1385 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1405
9999 mem: storing 26 in location 1406
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1408
9999 mem: incrementing refcount of 1012: 104 -> 105
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1409
9999 mem: incrementing refcount of 1158: 8 -> 9
 105 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1410
 105 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1411
 105 run: jump-if editor, 1:offset
9999 mem: location 1409 is 1158
9998 run: jumping to instruction 7
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1412
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1413
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1408 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 105 -> 106
 106 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 106 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1414
 105 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1415
9999 mem: incrementing refcount of 1180: 12 -> 13
 105 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1415 is 1180
9999 mem: storing 1180 in location 1416
9999 mem: incrementing refcount of 1180: 13 -> 14
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1180
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 14 -> 15
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 15 -> 14
9999 mem: storing 1194 in location 1415
9999 mem: incrementing refcount of 1194: 15 -> 16
 105 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1417
 105 run: column:number <- copy left
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1418
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1419
 105 run: *cursor-row <- copy target-row
9999 mem: location 1410 is 2
9999 mem: location 1419 is 1166
9999 mem: storing 2 in location 1166
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1420
 105 run: *cursor-column <- copy target-column
9999 mem: location 1411 is 1
9999 mem: location 1420 is 1167
9999 mem: storing 1 in location 1167
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1409 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1421
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1194
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 1
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1415 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 97
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 0
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1194
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 17 -> 16
9999 mem: storing 1203 in location 1415
9999 mem: incrementing refcount of 1203: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1180
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 14 -> 15
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 15 -> 14
9999 mem: storing 1194 in location 1416
9999 mem: incrementing refcount of 1194: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 0
9999 mem: storing 1 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1203
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 1
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1415 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 98
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 1
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1203
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 17 -> 16
9999 mem: storing 1207 in location 1415
9999 mem: incrementing refcount of 1207: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1194
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 19 -> 18
9999 mem: storing 1203 in location 1416
9999 mem: incrementing refcount of 1203: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 1
9999 mem: storing 2 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1207
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 1
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1415 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 99
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 2
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1207
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 17 -> 16
9999 mem: storing 1211 in location 1415
9999 mem: incrementing refcount of 1211: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1203
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 19 -> 18
9999 mem: storing 1207 in location 1416
9999 mem: incrementing refcount of 1207: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 2
9999 mem: storing 3 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1211
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 1
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1415 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 10
9999 mem: storing 1 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 1
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 43
 105 run: row <- add row, 1
9999 mem: location 1417 is 1
9999 mem: storing 2 in location 1417
 105 run: column <- copy left
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1418
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1215 in location 1415
9999 mem: incrementing refcount of 1215: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1207
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 19 -> 18
9999 mem: storing 1211 in location 1416
9999 mem: incrementing refcount of 1211: 17 -> 18
 105 run: jump +next-character:label
9998 run: jumping to instruction 22
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1215
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 2
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 2
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1418 is 0
9999 mem: location 1420 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1424
 105 run: jump-unless at-cursor?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1415 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 100
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 0
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 17 -> 16
9999 mem: storing 1219 in location 1415
9999 mem: incrementing refcount of 1219: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 19 -> 18
9999 mem: storing 1215 in location 1416
9999 mem: incrementing refcount of 1215: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 0
9999 mem: storing 1 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1219
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 2
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 2
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1418 is 1
9999 mem: location 1420 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1424
 105 run: jump-unless at-cursor?, 
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 105 run: *before-cursor <- copy prev
9999 mem: location 1416 is 1215
9999 mem: location 1421 is 1162
9999 mem: decrementing refcount of 1180: 14 -> 13
9999 mem: storing 1215 in location 1162
9999 mem: incrementing refcount of 1215: 18 -> 19
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1415 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 101
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 1
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1219
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 17 -> 16
9999 mem: storing 1223 in location 1415
9999 mem: incrementing refcount of 1223: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 19 -> 20
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 20 -> 19
9999 mem: storing 1219 in location 1416
9999 mem: incrementing refcount of 1219: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 1
9999 mem: storing 2 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1223
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 2
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 2
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1418 is 2
9999 mem: location 1420 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1424
 105 run: jump-unless at-cursor?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1415 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 102
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 2
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 17 -> 16
9999 mem: storing 1227 in location 1415
9999 mem: incrementing refcount of 1227: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1219
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 19 -> 18
9999 mem: storing 1223 in location 1416
9999 mem: incrementing refcount of 1223: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 2
9999 mem: storing 3 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1227
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 2
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 2
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 105 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1418 is 3
9999 mem: location 1420 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1424
 105 run: jump-unless at-cursor?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1415 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 10
9999 mem: storing 1 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 2
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 105 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1418 is 3
9999 mem: location 1420 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1427
 105 run: jump-unless left-of-cursor?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 43
 105 run: row <- add row, 1
9999 mem: location 1417 is 2
9999 mem: storing 3 in location 1417
 105 run: column <- copy left
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1418
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1227
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 17 -> 16
9999 mem: storing 1231 in location 1415
9999 mem: incrementing refcount of 1231: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1223
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 19 -> 18
9999 mem: storing 1227 in location 1416
9999 mem: incrementing refcount of 1227: 17 -> 18
 105 run: jump +next-character:label
9998 run: jumping to instruction 22
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1231
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 3
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1415 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 103
9999 mem: storing 103 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 103
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 0
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1231
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 17 -> 16
9999 mem: storing 1235 in location 1415
9999 mem: incrementing refcount of 1235: 15 -> 16
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1227
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 19 -> 18
9999 mem: storing 1231 in location 1416
9999 mem: incrementing refcount of 1231: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 0
9999 mem: storing 1 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1235
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 3
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1415 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 104
9999 mem: storing 104 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 104
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 1
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 12 -> 13
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 17 -> 16
9999 mem: storing 1239 in location 1415
9999 mem: incrementing refcount of 1239: 13 -> 14
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1231
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 16 -> 17
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 19 -> 18
9999 mem: storing 1235 in location 1416
9999 mem: incrementing refcount of 1235: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1418 is 1
9999 mem: storing 2 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 1239
9998 run: jump-unless fell through
 105 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1417 is 3
9999 mem: location 1414 is 5
9999 mem: storing 0 in location 1422
 105 run: jump-if off-screen?, 
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: jump-unless at-cursor-row?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 31
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1415 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1415 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 105
9999 mem: storing 105 in location 1425
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1425 is 105
9999 mem: storing 0 in location 1426
 105 run: jump-unless newline?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 49
 105 run: at-right?:boolean <- equal column, right
9999 mem: location 1418 is 2
9999 mem: location 1413 is 9
9999 mem: storing 0 in location 1428
 105 run: jump-unless at-right?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 56
 105 run: curr <- next_2 curr
9999 mem: location 1415 is 1239
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1201
9999 mem: incrementing refcount of 1239: 14 -> 15
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1239
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1202
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1239: 15 -> 14
9999 mem: storing 0 in location 1415
 105 run: prev <- next_2 prev
9999 mem: location 1416 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 18 -> 19
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 14 -> 15
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 19 -> 18
9999 mem: storing 1239 in location 1416
9999 mem: incrementing refcount of 1239: 15 -> 16
 105 run: column <- add column, 1
9999 mem: location 1418 is 2
9999 mem: storing 3 in location 1418
 105 run: jump 
9998 run: jumping to instruction 21
 105 run: jump-unless curr, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 61
 105 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1423
 105 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1418 is 3
9999 mem: location 1420 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1429
 105 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1423 is 0
9999 mem: location 1429 is 0
9999 mem: storing 0 in location 1430
 105 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1417 is 3
9999 mem: location 1419 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1431
 105 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: storing 0 in location 1432
 105 run: jump-unless before-cursor?, 
9999 mem: location 1432 is 0
9998 run: jumping to instruction 72
 105 run: reply editor:address:shared:editor-data
9999 mem: location 1409 is 1158
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 9 -> 8
9999 mem: storing 1158 in location 1380
9999 mem: incrementing refcount of 1158: 8 -> 9
 104 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1393
 104 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1394
 104 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1395
 104 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1380 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1396
9999 mem: incrementing refcount of 1180: 13 -> 14
 104 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 44
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1398
9999 mem: incrementing refcount of 1000: 0 -> 1
 104 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1390 is 1
9999 mem: location 1391 is 0
9999 mem: location 1392 is 1180
9999 mem: location 1394 is 2
9999 mem: location 1395 is 1
9999 mem: location 1396 is 1180
9999 mem: location 1393 is 0
9999 mem: location 1398 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1398 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1180 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1180 in location 1007
9999 mem: storing 0 in location 1008
 104 run: editor <- add-operation editor, op
9999 mem: location 1380 is 1158
9999 mem: location 1398 is 1000
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1433
9999 mem: storing 5 in location 1434
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1436
9999 mem: incrementing refcount of 1158: 9 -> 10
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1437
9999 mem: incrementing refcount of 1000: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1438
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1437 is 1000
9999 mem: location 1438 is 1169
9999 mem: location 1169 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1276
9999 mem: incrementing refcount of 1000: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1440
9999 mem: storing 1440 in location 1278
9999 mem: incrementing refcount of 1440: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1440
9999 mem: skipping refcount at 1440
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1441 is 0
9999 mem: location 1442 is 0
9999 mem: location 1278 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1441
9999 mem: storing 1441 in location 1279
 106 run: *val <- copy x
9999 mem: location 1276 is 1000
9999 mem: location 1279 is 1441
9999 mem: storing 1000 in location 1441
9999 mem: incrementing refcount of 1000: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1440
9999 mem: skipping refcount at 1440
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1441 is 1000
9999 mem: location 1442 is 0
9999 mem: location 1278 is 1440
9999 mem: skipping refcount at 1440
9999 type: type deduced to be address$
9998 run: address to copy is 1442
9999 mem: storing 1442 in location 1280
 106 run: *next <- copy in
9999 mem: location 1277 is 0
9999 mem: location 1280 is 1442
9999 mem: storing 0 in location 1442
 106 run: reply result
9999 mem: location 1278 is 1440
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1440
9999 mem: location 1438 is 1169
9999 mem: storing 1440 in location 1169
9999 mem: incrementing refcount of 1440: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1439
 105 run: *redo <- copy 0
9999 mem: location 1439 is 1170
9999 mem: storing 0 in location 1170
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1436 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 10 -> 9
9999 mem: storing 1158 in location 1380
9999 mem: incrementing refcount of 1158: 9 -> 10
 104 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 3
 103 run: jump +next-event:label
9998 run: jumping to instruction 6
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1366
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1367
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 2
9999 mem: location 1367 is 1
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 106 -> 107
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1278
 104 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 104 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 104 run: *column <- copy new-column
9999 mem: location 1278 is 1
9999 mem: location 1280 is 1016
9999 mem: storing 1 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 107 -> 106
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 106 -> 107
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1357
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1357 in location 1311
9999 mem: incrementing refcount of 1357: 2 -> 3
 104 run: jump-unless console, 
9999 mem: location 1311 is 1357
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 1
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1358
9999 mem: storing 1358 in location 1312
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 1
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1359
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1359 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 4 in location 1314
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 1
9999 mem: location 1314 is 4
9999 mem: storing 0 in location 1315
 104 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9998 run: base address is 1340
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 1
9998 run: address to copy is 1345
9998 run: its type is event
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65514
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 1 in location 1317
9999 mem: storing 65514 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 1
9999 mem: location 1312 is 1358
9999 mem: storing 2 in location 1358
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 1
9999 mem: location 1318 is 65514
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1357
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1357
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1368
9999 mem: storing 65514 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1357: 3 -> 2
9999 mem: storing 1357 in location 1364
9999 mem: incrementing refcount of 1357: 2 -> 3
9999 mem: storing 1 in location 1372
9999 mem: storing 0 in location 1373
 103 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1368 is 1
9999 mem: location 1369 is 65514
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 mem: storing 0 in location 1374
 103 run: jump-unless t, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 mem: location 1368 is 1
9999 mem: location 1369 is 65514
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1443
9999 mem: storing 85 in location 1444
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 107 -> 108
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 10 -> 11
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1448
9999 mem: storing 65514 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1452
 104 run: jump-if editor, 1:offset
9999 mem: location 1447 is 1158
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 108 -> 109
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1202
 105 run: reply width:number
9999 mem: location 1202 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1453
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 109 -> 110
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 105 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1454
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1455
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1456
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1457
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1458
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1459
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1460
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1461
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65514
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 0 in location 1462
 104 run: jump-unless c, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 438
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65514
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 1449 in location 1516
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1516 is 1449
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1479
 104 run: jump-unless page-up?, 
9999 mem: location 1479 is 0
9998 run: jumping to instruction 482
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1495
 104 run: jump-unless page-down?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 523
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1502
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 561
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1503
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1503 is 0
9998 run: jumping to instruction 599
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1517
 104 run: jump-unless move-to-next-line?, 
9999 mem: location 1517 is 0
9998 run: jumping to instruction 636
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1518
 104 run: jump-unless move-to-previous-line?, 
9999 mem: location 1518 is 0
9998 run: jumping to instruction 673
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1519
 104 run: jump-unless move-to-previous-character?, 
9999 mem: location 1519 is 0
9998 run: jumping to instruction 716
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 1 in location 1521
 104 run: jump-unless move-to-next-character?, 
9999 mem: location 1521 is 1
9998 run: jump-unless fell through
 104 run: next-cursor:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1457 is 1162
9999 mem: location 1162 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 19 -> 20
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 18 -> 19
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1522
9999 mem: incrementing refcount of 1219: 19 -> 20
 104 run: jump-unless next-cursor, 
9999 mem: location 1522 is 1219
9998 run: jump-unless fell through
 104 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1482
 104 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1483
 104 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1484
9999 mem: incrementing refcount of 1180: 14 -> 15
 104 run: *before-cursor <- copy next-cursor
9999 mem: location 1522 is 1219
9999 mem: location 1457 is 1162
9999 mem: decrementing refcount of 1215: 20 -> 19
9999 mem: storing 1219 in location 1162
9999 mem: incrementing refcount of 1219: 20 -> 21
 104 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1447 is 1158
9999 mem: location 1454 is 5
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1530
9999 mem: storing 21 in location 1531
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1533
9999 mem: incrementing refcount of 1158: 11 -> 12
 105 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1534
 105 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1162 is 1219
9999 mem: storing 1219 in location 1535
9999 mem: incrementing refcount of 1219: 21 -> 22
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1536
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1537
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1538
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1539
 105 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1535 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1535 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1540
 105 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1540 is 101
9999 mem: storing 0 in location 1541
 105 run: jump-unless was-at-newline?, 
9999 mem: location 1541 is 0
9998 run: jumping to instruction 33
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1539 is 9
9999 mem: storing 8 in location 1548
 105 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1537 is 1167
9999 mem: location 1167 is 1
9999 mem: location 1548 is 8
9999 mem: storing 0 in location 1549
 105 run: jump-unless at-wrap?, 
9999 mem: location 1549 is 0
9998 run: jumping to instruction 63
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1537 is 1167
9999 mem: location 1167 is 1
9999 mem: location 1537 is 1167
9999 mem: storing 2 in location 1167
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1543
 105 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1533 is 1158
9999 mem: location 1543 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1158: 12 -> 11
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 11 -> 12
9999 mem: storing 0 in location 1452
 104 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1446 is 1012
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 2
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 110 -> 111
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 2
9999 mem: location 1280 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 111 -> 110
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 110 -> 111
 104 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1485
 104 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1486
 104 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 2
9999 mem: storing 2 in location 1487
 104 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1488
9999 mem: incrementing refcount of 1180: 15 -> 16
 104 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1485 is 2
9998 run: jump-unless fell through
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1466
 104 run: jump-unless *undo, 
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1440
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1440
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1201
9999 mem: incrementing refcount of 1440: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1201 is 1440
9999 mem: skipping refcount at 1440
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1441 is 1000
9999 mem: location 1442 is 0
9999 mem: location 1201 is 1440
9999 mem: skipping refcount at 1440
9998 run: address to copy is 1441
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1441 is 1000
9999 mem: storing 1000 in location 1202
9999 mem: incrementing refcount of 1000: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1202 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1465
9999 mem: incrementing refcount of 1000: 5 -> 6
 104 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1465 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1180
9999 mem: location 1005 is 2
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1180
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1465 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1471
 104 run: jump-unless move, 
9999 mem: location 1471 is 1002
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1471 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1180
9999 mem: location 1005 is 2
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1180
9999 mem: location 1008 is 0
9999 mem: location 1471 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1489
 104 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1485 is 2
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1490
 104 run: jump-unless coalesce?, 
9999 mem: location 1490 is 0
9998 run: jumping to instruction 750
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1465
9999 mem: incrementing refcount of 1120: 0 -> 1
 104 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1482 is 2
9999 mem: location 1483 is 1
9999 mem: location 1484 is 1180
9999 mem: location 1486 is 2
9999 mem: location 1487 is 2
9999 mem: location 1488 is 1180
9999 mem: location 1485 is 2
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 1 in location 1123
9999 mem: storing 1180 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 2 in location 1126
9999 mem: storing 1180 in location 1127
9999 mem: storing 2 in location 1128
 104 run: editor <- add-operation editor, op
9999 mem: location 1447 is 1158
9999 mem: location 1465 is 1120
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1436
9999 mem: incrementing refcount of 1158: 12 -> 13
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1437
9999 mem: incrementing refcount of 1120: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 0
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1438
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1437 is 1120
9999 mem: location 1438 is 1169
9999 mem: location 1169 is 1440
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1276
9999 mem: incrementing refcount of 1120: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1440 in location 1277
9999 mem: incrementing refcount of 1440: 3 -> 4
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1553
9999 mem: storing 1553 in location 1278
9999 mem: incrementing refcount of 1553: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1553
9999 mem: skipping refcount at 1553
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1278 is 1553
9999 mem: skipping refcount at 1553
9998 run: address to copy is 1554
9999 mem: storing 1554 in location 1279
 106 run: *val <- copy x
9999 mem: location 1276 is 1120
9999 mem: location 1279 is 1554
9999 mem: storing 1120 in location 1554
9999 mem: incrementing refcount of 1120: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1553
9999 mem: skipping refcount at 1553
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1554 is 1120
9999 mem: location 1555 is 0
9999 mem: location 1278 is 1553
9999 mem: skipping refcount at 1553
9999 type: type deduced to be address$
9998 run: address to copy is 1555
9999 mem: storing 1555 in location 1280
 106 run: *next <- copy in
9999 mem: location 1277 is 1440
9999 mem: location 1280 is 1555
9999 mem: storing 1440 in location 1555
9999 mem: incrementing refcount of 1440: 4 -> 5
 106 run: reply result
9999 mem: location 1278 is 1553
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1553
9999 mem: location 1438 is 1169
9999 mem: decrementing refcount of 1440: 5 -> 4
9999 mem: storing 1553 in location 1169
9999 mem: incrementing refcount of 1553: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1439
 105 run: *redo <- copy 0
9999 mem: location 1439 is 1170
9999 mem: storing 0 in location 1170
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1436 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 13 -> 12
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 12 -> 13
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1446 is 1012
9999 mem: location 1447 is 1158
9999 mem: location 1452 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 111 -> 110
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 110 -> 111
9999 mem: decrementing refcount of 1158: 13 -> 12
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 12 -> 13
9999 mem: storing 0 in location 1375
 103 run: jump-unless go-render?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1366
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 2
9999 mem: storing 2 in location 1367
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 2
9999 mem: location 1367 is 2
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 111 -> 112
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1278
 104 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 104 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 104 run: *column <- copy new-column
9999 mem: location 1278 is 2
9999 mem: location 1280 is 1016
9999 mem: storing 2 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 112 -> 111
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 111 -> 112
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1357
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1357 in location 1311
9999 mem: incrementing refcount of 1357: 3 -> 4
 104 run: jump-unless console, 
9999 mem: location 1311 is 1357
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 2
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1358
9999 mem: storing 1358 in location 1312
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 2
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1359
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1359 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 2 -> 3
 104 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 4 in location 1314
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 2
9999 mem: location 1314 is 4
9999 mem: storing 0 in location 1315
 104 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9998 run: base address is 1340
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 2
9998 run: address to copy is 1349
9998 run: its type is event
9999 mem: location 1349 is 1
9999 mem: location 1350 is 65514
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 1 in location 1317
9999 mem: storing 65514 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 2
9999 mem: location 1312 is 1358
9999 mem: storing 3 in location 1358
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 1
9999 mem: location 1318 is 65514
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1357
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1357
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1368
9999 mem: storing 65514 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1357: 4 -> 3
9999 mem: storing 1357 in location 1364
9999 mem: incrementing refcount of 1357: 3 -> 4
9999 mem: storing 1 in location 1372
9999 mem: storing 0 in location 1373
 103 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1368 is 1
9999 mem: location 1369 is 65514
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 mem: storing 0 in location 1374
 103 run: jump-unless t, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 mem: location 1368 is 1
9999 mem: location 1369 is 65514
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 112 -> 113
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 13 -> 14
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1448
9999 mem: storing 65514 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1452
 104 run: jump-if editor, 1:offset
9999 mem: location 1447 is 1158
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 113 -> 114
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1202
 105 run: reply width:number
9999 mem: location 1202 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1453
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 114 -> 115
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 105 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1454
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1455
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1456
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1457
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1458
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1459
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1460
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 2
9999 mem: storing 2 in location 1461
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65514
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 0 in location 1462
 104 run: jump-unless c, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 438
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65514
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 1449 in location 1516
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1516 is 1449
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1479
 104 run: jump-unless page-up?, 
9999 mem: location 1479 is 0
9998 run: jumping to instruction 482
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1495
 104 run: jump-unless page-down?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 523
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1502
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 561
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1503
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1503 is 0
9998 run: jumping to instruction 599
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1517
 104 run: jump-unless move-to-next-line?, 
9999 mem: location 1517 is 0
9998 run: jumping to instruction 636
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1518
 104 run: jump-unless move-to-previous-line?, 
9999 mem: location 1518 is 0
9998 run: jumping to instruction 673
 104 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 0 in location 1519
 104 run: jump-unless move-to-previous-character?, 
9999 mem: location 1519 is 0
9998 run: jumping to instruction 716
 104 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65514
9999 mem: storing 1 in location 1521
 104 run: jump-unless move-to-next-character?, 
9999 mem: location 1521 is 1
9998 run: jump-unless fell through
 104 run: next-cursor:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1457 is 1162
9999 mem: location 1162 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 22 -> 23
 105 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 18 -> 19
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1522
9999 mem: incrementing refcount of 1223: 19 -> 20
 104 run: jump-unless next-cursor, 
9999 mem: location 1522 is 1223
9998 run: jump-unless fell through
 104 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1482
 104 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 2
9999 mem: storing 2 in location 1483
 104 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1219
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1484
9999 mem: incrementing refcount of 1180: 16 -> 17
 104 run: *before-cursor <- copy next-cursor
9999 mem: location 1522 is 1223
9999 mem: location 1457 is 1162
9999 mem: decrementing refcount of 1219: 23 -> 22
9999 mem: storing 1223 in location 1162
9999 mem: incrementing refcount of 1223: 20 -> 21
 104 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1447 is 1158
9999 mem: location 1454 is 5
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: allocating size 23
9999 abandon: picking up space from free-list of size 23
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1533
9999 mem: incrementing refcount of 1158: 14 -> 15
 105 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1534
 105 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1162 is 1223
9999 mem: storing 1223 in location 1535
9999 mem: incrementing refcount of 1223: 21 -> 22
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1536
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1537
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1538
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 2
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1533 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1539
 105 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1535 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1535 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1540
 105 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1540 is 102
9999 mem: storing 0 in location 1541
 105 run: jump-unless was-at-newline?, 
9999 mem: location 1541 is 0
9998 run: jumping to instruction 33
 105 run: wrap-column:number <- subtract right, 1
9999 mem: location 1539 is 9
9999 mem: storing 8 in location 1548
 105 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1537 is 1167
9999 mem: location 1167 is 2
9999 mem: location 1548 is 8
9999 mem: storing 0 in location 1549
 105 run: jump-unless at-wrap?, 
9999 mem: location 1549 is 0
9998 run: jumping to instruction 63
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1537 is 1167
9999 mem: location 1167 is 2
9999 mem: location 1537 is 1167
9999 mem: storing 3 in location 1167
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1543
 105 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1533 is 1158
9999 mem: location 1543 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1158: 15 -> 14
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 14 -> 15
9999 mem: storing 0 in location 1452
 104 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1446 is 1012
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 2
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 115 -> 116
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 116 -> 115
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 115 -> 116
 104 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1485
 104 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1486
 104 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1487
 104 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1488
9999 mem: incrementing refcount of 1180: 17 -> 18
 104 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1485 is 2
9998 run: jump-unless fell through
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1466
 104 run: jump-unless *undo, 
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1553 in location 1201
9999 mem: incrementing refcount of 1553: 2 -> 3
 105 run: result <- get *in, value:offset
9999 mem: location 1201 is 1553
9999 mem: skipping refcount at 1553
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1554 is 1120
9999 mem: location 1555 is 1440
9999 mem: location 1201 is 1553
9999 mem: skipping refcount at 1553
9998 run: address to copy is 1554
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1554 is 1120
9999 mem: storing 1120 in location 1202
9999 mem: incrementing refcount of 1120: 4 -> 5
 105 run: reply result:_elem
9999 mem: location 1202 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1465
9999 mem: incrementing refcount of 1120: 5 -> 6
 104 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1471
 104 run: jump-unless move, 
9999 mem: location 1471 is 1122
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1128
9998 run: its type is number
9999 mem: location 1128 is 2
9999 mem: storing 2 in location 1489
 104 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1485 is 2
9999 mem: location 1489 is 2
9999 mem: storing 1 in location 1490
 104 run: jump-unless coalesce?, 
9999 mem: location 1490 is 1
9998 run: jump-unless fell through
 104 run: after-row:address:number <- get-address *move, after-row:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1491
 104 run: *after-row <- copy after-cursor-row
9999 mem: location 1486 is 2
9999 mem: location 1491 is 1125
9999 mem: storing 2 in location 1125
 104 run: after-column:address:number <- get-address *move, after-column:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1492
 104 run: *after-column <- copy after-cursor-column
9999 mem: location 1487 is 3
9999 mem: location 1492 is 1126
9999 mem: storing 3 in location 1126
9990 schedule: handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: after-top:address:address:shared:duplex-list:character <- get-address *move, after-top-of-screen:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1493
 104 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: location 1493 is 1127
9999 mem: decrementing refcount of 1180: 18 -> 17
9999 mem: storing 1180 in location 1127
9999 mem: incrementing refcount of 1180: 17 -> 18
 104 run: jump +done-adding-move-operation:label
9998 run: jumping to instruction 755
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1446 is 1012
9999 mem: location 1447 is 1158
9999 mem: location 1452 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 116 -> 115
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 115 -> 116
9999 mem: decrementing refcount of 1158: 15 -> 14
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 14 -> 15
9999 mem: storing 0 in location 1375
 103 run: jump-unless go-render?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1366
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1367
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 2
9999 mem: location 1367 is 3
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 116 -> 117
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1278
 104 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 104 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 104 run: *column <- copy new-column
9999 mem: location 1278 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 117 -> 116
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 116 -> 117
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1357
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1357 in location 1311
9999 mem: incrementing refcount of 1357: 4 -> 5
 104 run: jump-unless console, 
9999 mem: location 1311 is 1357
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 3
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1358
9999 mem: storing 1358 in location 1312
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 3
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1359
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1359 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 3 -> 4
 104 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 4 in location 1314
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 3
9999 mem: location 1314 is 4
9999 mem: storing 0 in location 1315
 104 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 104 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9998 run: base address is 1340
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 3
9998 run: address to copy is 1353
9998 run: its type is event
9999 mem: location 1353 is 1
9999 mem: location 1354 is 65517
9999 mem: location 1355 is 0
9999 mem: location 1356 is 0
9999 mem: storing 1 in location 1317
9999 mem: storing 65517 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 104 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 3
9999 mem: location 1312 is 1358
9999 mem: storing 4 in location 1358
 104 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 1
9999 mem: location 1318 is 65517
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1357
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1357
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1368
9999 mem: storing 65517 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1357: 5 -> 4
9999 mem: storing 1357 in location 1364
9999 mem: incrementing refcount of 1357: 4 -> 5
9999 mem: storing 1 in location 1372
9999 mem: storing 0 in location 1373
 103 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 103 run: trace 10, [app], [next-event]
  10 app: next-event 
 103 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1368 is 1
9999 mem: location 1369 is 65517
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 mem: storing 0 in location 1374
 103 run: jump-unless t, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 18
 103 run: jump-if t, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 103 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 mem: location 1368 is 1
9999 mem: location 1369 is 65517
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 117 -> 118
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 15 -> 16
 104 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1448
9999 mem: storing 65517 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 104 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1452
 104 run: jump-if editor, 1:offset
9999 mem: location 1447 is 1158
9998 run: jumping to instruction 7
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 118 -> 119
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: width <- get *screen, num-columns:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1202
 105 run: reply width:number
9999 mem: location 1202 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1453
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 119 -> 120
 105 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 105 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1454
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1455
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1456
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1457
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1458
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1459
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1460
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1461
 104 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65517
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 0 in location 1462
 104 run: jump-unless c, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 438
 104 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65517
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 1449 in location 1516
 104 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1516 is 1449
 104 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65517
9999 mem: storing 0 in location 1479
 104 run: jump-unless page-up?, 
9999 mem: location 1479 is 0
9998 run: jumping to instruction 482
 104 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65517
9999 mem: storing 0 in location 1495
 104 run: jump-unless page-down?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 523
 104 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65517
9999 mem: storing 0 in location 1502
 104 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1502 is 0
9998 run: jumping to instruction 561
 104 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65517
9999 mem: storing 0 in location 1503
 104 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1503 is 0
9998 run: jumping to instruction 599
 104 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65517
9999 mem: storing 0 in location 1517
 104 run: jump-unless move-to-next-line?, 
9999 mem: location 1517 is 0
9998 run: jumping to instruction 636
 104 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1516 is 1449
9999 mem: location 1449 is 65517
9999 mem: storing 1 in location 1518
 104 run: jump-unless move-to-previous-line?, 
9999 mem: location 1518 is 1
9998 run: jump-unless fell through
 104 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1482
 104 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1483
 104 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1484
9999 mem: incrementing refcount of 1180: 18 -> 19
 104 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1447 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1556
9999 mem: storing 20 in location 1557
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1559
9999 mem: incrementing refcount of 1158: 16 -> 17
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1560
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1561
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1562
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1563
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1559 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1564
 105 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1560 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1565
 105 run: jump-if already-at-top?, 
9999 mem: location 1565 is 0
9998 run: jump-if fell through
 105 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1562 is 1162
9999 mem: location 1162 is 1223
9999 mem: storing 1223 in location 1566
9999 mem: incrementing refcount of 1223: 22 -> 23
 105 run: old:address:shared:duplex-list:character <- copy curr
9999 mem: location 1566 is 1223
9999 mem: storing 1223 in location 1567
9999 mem: incrementing refcount of 1223: 23 -> 24
 105 run: c2:character <- get *curr, value:offset
9999 mem: location 1566 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1566 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1568
 105 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1568 is 102
9999 mem: storing 0 in location 1569
 105 run: jump-if at-newline?, 
9999 mem: location 1569 is 0
9998 run: jump-if fell through
 105 run: curr:address:shared:duplex-list:character <- before-previous-line curr, editor
9999 mem: location 1566 is 1223
9999 mem: location 1559 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 mem: new alloc: 1578
9999 mem: storing 13 in location 1579
 106 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1581
9999 mem: incrementing refcount of 1223: 24 -> 25
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1582
9999 mem: incrementing refcount of 1158: 17 -> 18
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1581 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1581 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1583
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1584
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1585
 106 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1585 is 9
9999 mem: location 1584 is 0
9999 mem: storing 9 in location 1586
 106 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1180
9999 mem: storing 1180 in location 1587
9999 mem: incrementing refcount of 1180: 19 -> 20
 106 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1581 is 1223
9999 mem: location 1587 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1174
9999 mem: incrementing refcount of 1223: 25 -> 26
 107 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1175
9999 mem: incrementing refcount of 1180: 20 -> 21
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1176
 107 run: jump-if curr, 1:offset
9999 mem: location 1174 is 1223
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1223
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1177 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1223
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 26 -> 27
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1226
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1226 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 22 -> 23
 108 run: reply result
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1223: 27 -> 26
9999 mem: storing 1219 in location 1174
9999 mem: incrementing refcount of 1219: 23 -> 24
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1219
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1219
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1174 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1178
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 101
9999 mem: storing 0 in location 1179
 107 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1219
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 24 -> 25
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 19 -> 20
 108 run: reply result
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1219: 25 -> 24
9999 mem: storing 1215 in location 1174
9999 mem: incrementing refcount of 1215: 20 -> 21
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1215
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1215
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1174 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1178
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 100
9999 mem: storing 0 in location 1179
 107 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1215
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 21 -> 22
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 18 -> 19
 108 run: reply result
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1215: 22 -> 21
9999 mem: storing 1211 in location 1174
9999 mem: incrementing refcount of 1211: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1211
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1211
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1174 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1178
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 10
9999 mem: storing 1 in location 1179
 107 run: jump-if at-newline?, 
9999 mem: location 1179 is 1
9998 run: jumping to instruction 19
 107 run: reply result:number
9999 mem: location 1176 is 2
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2
9999 mem: storing 2 in location 1588
 106 run: jump-if len, 
9999 mem: location 1588 is 2
9998 run: jumping to instruction 15
 106 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1588 is 2
9999 mem: location 1586 is 9
9999 mem: storing 2 in location 1590
 106 run: jump-if max, 
9999 mem: location 1590 is 2
9998 run: jumping to instruction 20
 106 run: max <- add max, 1
9999 mem: location 1590 is 2
9999 mem: storing 3 in location 1590
 106 run: count:number <- copy 0
9999 mem: storing 0 in location 1591
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 0
9999 mem: location 1590 is 3
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1226
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1226 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 24 -> 25
 107 run: reply result
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1589
9999 mem: incrementing refcount of 1219: 25 -> 26
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1219
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1219
9999 mem: decrementing refcount of 1223: 27 -> 26
9999 mem: storing 1219 in location 1581
9999 mem: incrementing refcount of 1219: 26 -> 27
 106 run: count <- add count, 1
9999 mem: location 1591 is 0
9999 mem: storing 1 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 1
9999 mem: location 1590 is 3
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 21 -> 22
 107 run: reply result
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1219: 28 -> 27
9999 mem: storing 1215 in location 1589
9999 mem: incrementing refcount of 1215: 22 -> 23
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1215
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1215
9999 mem: decrementing refcount of 1219: 27 -> 26
9999 mem: storing 1215 in location 1581
9999 mem: incrementing refcount of 1215: 23 -> 24
 106 run: count <- add count, 1
9999 mem: location 1591 is 1
9999 mem: storing 2 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 2
9999 mem: location 1590 is 3
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 20 -> 21
 107 run: reply result
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1215: 25 -> 24
9999 mem: storing 1211 in location 1589
9999 mem: incrementing refcount of 1211: 21 -> 22
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1211
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1211
9999 mem: decrementing refcount of 1215: 24 -> 23
9999 mem: storing 1211 in location 1581
9999 mem: incrementing refcount of 1211: 22 -> 23
 106 run: count <- add count, 1
9999 mem: location 1591 is 2
9999 mem: storing 3 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 3
9999 mem: location 1590 is 3
9999 mem: storing 1 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 1
9998 run: jumping to instruction 31
 106 run: reply curr
9999 mem: location 1581 is 1211
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1223: 26 -> 25
9999 mem: storing 1211 in location 1566
9999 mem: incrementing refcount of 1211: 23 -> 24
 105 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1566 is 1211
9999 mem: location 1567 is 1223
9999 mem: storing 0 in location 1570
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: jump-unless no-motion?, 1:offset
9999 mem: location 1570 is 0
9998 run: jumping to instruction 21
 105 run: old <- copy curr
9999 mem: location 1566 is 1211
9999 mem: decrementing refcount of 1223: 25 -> 24
9999 mem: storing 1211 in location 1567
9999 mem: incrementing refcount of 1211: 24 -> 25
 105 run: curr <- before-previous-line curr, editor
9999 mem: location 1566 is 1211
9999 mem: location 1559 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 abandon: picking up space from free-list of size 15
 106 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1581
9999 mem: incrementing refcount of 1211: 25 -> 26
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1582
9999 mem: incrementing refcount of 1158: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1581 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1581 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1583
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1584
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1585
 106 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1585 is 9
9999 mem: location 1584 is 0
9999 mem: storing 9 in location 1586
 106 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1582 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1180
9999 mem: storing 1180 in location 1587
9999 mem: incrementing refcount of 1180: 21 -> 22
 106 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1581 is 1211
9999 mem: location 1587 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1174
9999 mem: incrementing refcount of 1211: 26 -> 27
 107 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1175
9999 mem: incrementing refcount of 1180: 22 -> 23
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1176
 107 run: jump-if curr, 1:offset
9999 mem: location 1174 is 1211
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1211
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1177 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1211
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 27 -> 28
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 18 -> 19
 108 run: reply result
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1211: 28 -> 27
9999 mem: storing 1207 in location 1174
9999 mem: incrementing refcount of 1207: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1207
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1207
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1174 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1178
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 99
9999 mem: storing 0 in location 1179
 107 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1207
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 18 -> 19
 108 run: reply result
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1207: 21 -> 20
9999 mem: storing 1203 in location 1174
9999 mem: incrementing refcount of 1203: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1203
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1203
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1174 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1178
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 98
9999 mem: storing 0 in location 1179
 107 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1203
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 18 -> 19
 108 run: reply result
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1203: 21 -> 20
9999 mem: storing 1194 in location 1174
9999 mem: incrementing refcount of 1194: 19 -> 20
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1194
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1194
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1174 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1178
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 97
9999 mem: storing 0 in location 1179
 107 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1174 is 1194
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 20 -> 21
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1180
9999 mem: storing 1180 in location 1202
9999 mem: incrementing refcount of 1180: 23 -> 24
 108 run: reply result
9999 mem: location 1202 is 1180
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1180
9999 mem: decrementing refcount of 1194: 21 -> 20
9999 mem: storing 1180 in location 1174
9999 mem: incrementing refcount of 1180: 24 -> 25
 107 run: jump-unless curr, 
9999 mem: location 1174 is 1180
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1180
9999 mem: location 1175 is 1180
9999 mem: storing 1 in location 1177
 107 run: jump-if at-start?, 
9999 mem: location 1177 is 1
9998 run: jumping to instruction 19
 107 run: reply result:number
9999 mem: location 1176 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 3
9999 mem: storing 3 in location 1588
 106 run: jump-if len, 
9999 mem: location 1588 is 3
9998 run: jumping to instruction 15
 106 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1588 is 3
9999 mem: location 1586 is 9
9999 mem: storing 3 in location 1590
 106 run: jump-if max, 
9999 mem: location 1590 is 3
9998 run: jumping to instruction 20
 106 run: max <- add max, 1
9999 mem: location 1590 is 3
9999 mem: storing 4 in location 1590
 106 run: count:number <- copy 0
9999 mem: storing 0 in location 1591
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 0
9999 mem: location 1590 is 4
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 20 -> 21
 107 run: reply result
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1589
9999 mem: incrementing refcount of 1207: 21 -> 22
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1207
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1207
9999 mem: decrementing refcount of 1211: 28 -> 27
9999 mem: storing 1207 in location 1581
9999 mem: incrementing refcount of 1207: 22 -> 23
 106 run: count <- add count, 1
9999 mem: location 1591 is 0
9999 mem: storing 1 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 1
9999 mem: location 1590 is 4
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1210 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 20 -> 21
 107 run: reply result
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1207: 24 -> 23
9999 mem: storing 1203 in location 1589
9999 mem: incrementing refcount of 1203: 21 -> 22
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1203
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1203
9999 mem: decrementing refcount of 1207: 23 -> 22
9999 mem: storing 1203 in location 1581
9999 mem: incrementing refcount of 1203: 22 -> 23
 106 run: count <- add count, 1
9999 mem: location 1591 is 1
9999 mem: storing 2 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 2
9999 mem: location 1590 is 4
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1206 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 20 -> 21
 107 run: reply result
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1203: 24 -> 23
9999 mem: storing 1194 in location 1589
9999 mem: incrementing refcount of 1194: 21 -> 22
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1194
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1194
9999 mem: decrementing refcount of 1203: 23 -> 22
9999 mem: storing 1194 in location 1581
9999 mem: incrementing refcount of 1194: 22 -> 23
 106 run: count <- add count, 1
9999 mem: location 1591 is 2
9999 mem: storing 3 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 3
9999 mem: location 1590 is 4
9999 mem: storing 0 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 0
9998 run: jump-if fell through
 106 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1581 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1197 is 1180
9999 mem: storing 1180 in location 1202
9999 mem: incrementing refcount of 1180: 25 -> 26
 107 run: reply result
9999 mem: location 1202 is 1180
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1180
9999 mem: decrementing refcount of 1194: 24 -> 23
9999 mem: storing 1180 in location 1589
9999 mem: incrementing refcount of 1180: 26 -> 27
 106 run: jump-unless prev, 
9999 mem: location 1589 is 1180
9998 run: jump-unless fell through
 106 run: curr <- copy prev
9999 mem: location 1589 is 1180
9999 mem: decrementing refcount of 1194: 23 -> 22
9999 mem: storing 1180 in location 1581
9999 mem: incrementing refcount of 1180: 27 -> 28
 106 run: count <- add count, 1
9999 mem: location 1591 is 3
9999 mem: storing 4 in location 1591
 106 run: jump 
9998 run: jumping to instruction 24
 106 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1591 is 4
9999 mem: location 1590 is 4
9999 mem: storing 1 in location 1592
 106 run: jump-if done?, 
9999 mem: location 1592 is 1
9998 run: jumping to instruction 31
 106 run: reply curr
9999 mem: location 1581 is 1180
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1180
9999 mem: decrementing refcount of 1211: 27 -> 26
9999 mem: storing 1180 in location 1566
9999 mem: incrementing refcount of 1180: 28 -> 29
 105 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1566 is 1180
9999 mem: location 1567 is 1211
9999 mem: storing 0 in location 1570
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: jump-unless no-motion?, 1:offset
9999 mem: location 1570 is 0
9998 run: jumping to instruction 29
 105 run: *before-cursor <- copy curr
9999 mem: location 1566 is 1180
9999 mem: location 1562 is 1162
9999 mem: decrementing refcount of 1223: 24 -> 23
9999 mem: storing 1180 in location 1162
9999 mem: incrementing refcount of 1180: 29 -> 30
 105 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1560 is 1166
9999 mem: location 1166 is 2
9999 mem: location 1560 is 1166
9999 mem: storing 1 in location 1166
 105 run: target-column:number <- copy *cursor-column
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1572
 105 run: *cursor-column <- copy left
9999 mem: location 1563 is 0
9999 mem: location 1561 is 1167
9999 mem: storing 0 in location 1167
 105 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1572 is 3
9999 mem: storing 0 in location 1573
 105 run: jump-if done?, 
9999 mem: location 1573 is 0
9998 run: jump-if fell through
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1562 is 1162
9999 mem: location 1162 is 1180
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 30 -> 31
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 22 -> 23
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 31 -> 30
9999 mem: storing 1194 in location 1566
9999 mem: incrementing refcount of 1194: 23 -> 24
 105 run: jump-unless curr, 
9999 mem: location 1566 is 1194
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1566 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1566 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1574
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1574 is 97
9999 mem: storing 0 in location 1569
 105 run: jump-if at-newline?, 
9999 mem: location 1569 is 0
9998 run: jump-if fell through
 105 run: *before-cursor <- copy curr
9999 mem: location 1566 is 1194
9999 mem: location 1562 is 1162
9999 mem: decrementing refcount of 1180: 30 -> 29
9999 mem: storing 1194 in location 1162
9999 mem: incrementing refcount of 1194: 24 -> 25
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1561 is 1167
9999 mem: storing 1 in location 1167
 105 run: jump 
9998 run: jumping to instruction 35
 105 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 1
9999 mem: location 1572 is 3
9999 mem: storing 0 in location 1573
 105 run: jump-if done?, 
9999 mem: location 1573 is 0
9998 run: jump-if fell through
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1562 is 1162
9999 mem: location 1162 is 1194
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 25 -> 26
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 22 -> 23
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 26 -> 25
9999 mem: storing 1203 in location 1566
9999 mem: incrementing refcount of 1203: 23 -> 24
 105 run: jump-unless curr, 
9999 mem: location 1566 is 1203
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1566 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1566 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1574
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1574 is 98
9999 mem: storing 0 in location 1569
 105 run: jump-if at-newline?, 
9999 mem: location 1569 is 0
9998 run: jump-if fell through
 105 run: *before-cursor <- copy curr
9999 mem: location 1566 is 1203
9999 mem: location 1562 is 1162
9999 mem: decrementing refcount of 1194: 25 -> 24
9999 mem: storing 1203 in location 1162
9999 mem: incrementing refcount of 1203: 24 -> 25
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 1
9999 mem: location 1561 is 1167
9999 mem: storing 2 in location 1167
 105 run: jump 
9998 run: jumping to instruction 35
 105 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 2
9999 mem: location 1572 is 3
9999 mem: storing 0 in location 1573
 105 run: jump-if done?, 
9999 mem: location 1573 is 0
9998 run: jump-if fell through
 105 run: curr:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1562 is 1162
9999 mem: location 1162 is 1203
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 25 -> 26
 106 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 22 -> 23
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 26 -> 25
9999 mem: storing 1207 in location 1566
9999 mem: incrementing refcount of 1207: 23 -> 24
 105 run: jump-unless curr, 
9999 mem: location 1566 is 1207
9998 run: jump-unless fell through
 105 run: currc:character <- get *curr, value:offset
9999 mem: location 1566 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1566 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1574
 105 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1574 is 99
9999 mem: storing 0 in location 1569
 105 run: jump-if at-newline?, 
9999 mem: location 1569 is 0
9998 run: jump-if fell through
 105 run: *before-cursor <- copy curr
9999 mem: location 1566 is 1207
9999 mem: location 1562 is 1162
9999 mem: decrementing refcount of 1203: 25 -> 24
9999 mem: storing 1207 in location 1162
9999 mem: incrementing refcount of 1207: 24 -> 25
 105 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 2
9999 mem: location 1561 is 1167
9999 mem: storing 3 in location 1167
 105 run: jump 
9998 run: jumping to instruction 35
 105 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1561 is 1167
9999 mem: location 1167 is 3
9999 mem: location 1572 is 3
9999 mem: storing 1 in location 1573
 105 run: jump-if done?, 
9999 mem: location 1573 is 1
9998 run: jumping to instruction 45
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1571
 105 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1559 is 1158
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1158: 19 -> 18
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 18 -> 19
9999 mem: storing 0 in location 1452
 104 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1485
 104 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1486
 104 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1487
 104 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1488
9999 mem: incrementing refcount of 1180: 29 -> 30
 104 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1485 is 3
9998 run: jump-unless fell through
 104 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1466
 104 run: jump-unless *undo, 
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9998 run: jump-unless fell through
 104 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1553 in location 1201
9999 mem: incrementing refcount of 1553: 3 -> 4
 105 run: result <- get *in, value:offset
9999 mem: location 1201 is 1553
9999 mem: skipping refcount at 1553
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1554 is 1120
9999 mem: location 1555 is 1440
9999 mem: location 1201 is 1553
9999 mem: skipping refcount at 1553
9998 run: address to copy is 1554
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1554 is 1120
9999 mem: storing 1120 in location 1202
9999 mem: incrementing refcount of 1120: 6 -> 7
 105 run: reply result:_elem
9999 mem: location 1202 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1465
9999 mem: incrementing refcount of 1120: 7 -> 8
 104 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1471
 104 run: jump-unless move, 
9999 mem: location 1471 is 1122
9998 run: jump-unless fell through
 104 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1128
9998 run: its type is number
9999 mem: location 1128 is 2
9999 mem: storing 2 in location 1489
 104 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1485 is 3
9999 mem: location 1489 is 2
9999 mem: storing 0 in location 1490
 104 run: jump-unless coalesce?, 
9999 mem: location 1490 is 0
9998 run: jumping to instruction 666
 104 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1593
9999 mem: decrementing refcount of 1120: 8 -> 7
9999 mem: storing 1593 in location 1465
9999 mem: incrementing refcount of 1593: 0 -> 1
 104 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1482 is 2
9999 mem: location 1483 is 3
9999 mem: location 1484 is 1180
9999 mem: location 1486 is 1
9999 mem: location 1487 is 3
9999 mem: location 1488 is 1180
9999 mem: location 1485 is 3
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: storing 1 in location 1594
9999 mem: storing 2 in location 1595
9999 mem: storing 3 in location 1596
9999 mem: storing 1180 in location 1597
9999 mem: storing 1 in location 1598
9999 mem: storing 3 in location 1599
9999 mem: storing 1180 in location 1600
9999 mem: storing 3 in location 1601
 104 run: editor <- add-operation editor, op
9999 mem: location 1447 is 1158
9999 mem: location 1465 is 1593
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1436
9999 mem: incrementing refcount of 1158: 19 -> 20
 105 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1593 in location 1437
9999 mem: incrementing refcount of 1593: 1 -> 2
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1438
 105 run: *undo <- push_4 op, *undo
9999 mem: location 1437 is 1593
9999 mem: location 1438 is 1169
9999 mem: location 1169 is 1553
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1593 in location 1276
9999 mem: incrementing refcount of 1593: 2 -> 3
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1553 in location 1277
9999 mem: incrementing refcount of 1553: 4 -> 5
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1605
9999 mem: storing 1605 in location 1278
9999 mem: incrementing refcount of 1605: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1605
9999 mem: skipping refcount at 1605
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1606 is 0
9999 mem: location 1607 is 0
9999 mem: location 1278 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1606
9999 mem: storing 1606 in location 1279
 106 run: *val <- copy x
9999 mem: location 1276 is 1593
9999 mem: location 1279 is 1606
9999 mem: storing 1593 in location 1606
9999 mem: incrementing refcount of 1593: 3 -> 4
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1605
9999 mem: skipping refcount at 1605
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1606 is 1593
9999 mem: location 1607 is 0
9999 mem: location 1278 is 1605
9999 mem: skipping refcount at 1605
9999 type: type deduced to be address$
9998 run: address to copy is 1607
9999 mem: storing 1607 in location 1280
 106 run: *next <- copy in
9999 mem: location 1277 is 1553
9999 mem: location 1280 is 1607
9999 mem: storing 1553 in location 1607
9999 mem: incrementing refcount of 1553: 5 -> 6
 106 run: reply result
9999 mem: location 1278 is 1605
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1605
9999 mem: location 1438 is 1169
9999 mem: decrementing refcount of 1553: 6 -> 5
9999 mem: storing 1605 in location 1169
9999 mem: incrementing refcount of 1605: 1 -> 2
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1436 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1439
 105 run: *redo <- copy 0
9999 mem: location 1439 is 1170
9999 mem: storing 0 in location 1170
 105 run: reply editor/same-as-ingredient:0
9999 mem: location 1436 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 20 -> 19
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 19 -> 20
 104 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1446 is 1012
9999 mem: location 1447 is 1158
9999 mem: location 1452 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 120 -> 119
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 119 -> 120
9999 mem: decrementing refcount of 1158: 20 -> 19
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 19 -> 20
9999 mem: storing 0 in location 1375
 103 run: jump-unless go-render?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 25
 103 run: jump 
9998 run: jumping to instruction 5
 103 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1366
 103 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1367
 103 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 1
9999 mem: location 1367 is 3
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 120 -> 121
 104 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 104 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1278
 104 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 104 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 104 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 104 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 104 run: *column <- copy new-column
9999 mem: location 1278 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 121 -> 120
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 120 -> 121
 103 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1357
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9990 schedule: read-event/editor-event-loop/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1357 in location 1311
9999 mem: incrementing refcount of 1357: 5 -> 6
 104 run: jump-unless console, 
9999 mem: location 1311 is 1357
9998 run: jump-unless fell through
 104 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 4
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1358
9999 mem: storing 1358 in location 1312
 104 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9999 mem: location 1358 is 4
9999 mem: location 1359 is 1339
9999 mem: location 1311 is 1357
9999 mem: skipping refcount at 1357
9998 run: address to copy is 1359
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1359 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 4 -> 5
 104 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 4 in location 1314
 104 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1358
9999 mem: location 1358 is 4
9999 mem: location 1314 is 4
9999 mem: storing 1 in location 1315
 104 run: jump-unless done?, 
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 104 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1198 in location 1316
9999 mem: incrementing refcount of 1198: 0 -> 1
 104 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1316 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1311 is 1357
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1357
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1357: 6 -> 5
9999 mem: storing 1357 in location 1364
9999 mem: incrementing refcount of 1357: 5 -> 6
9999 mem: storing 1 in location 1372
9999 mem: storing 1 in location 1373
 103 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 103 run: jump-if quit?, 
9999 mem: location 1373 is 1
9998 run: jumping to instruction 28
 103 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1363 is 1012
9999 mem: location 1364 is 1357
9999 mem: location 1365 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 3
 102 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 4
 102 run: memory-should-contain [
    3 <- 1
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-z": <>}
9992 load: after rewriting: press ctrl-z
9999 mem: storing 'press' event starting at 1610
9999 mem: storing console in 1614
9999 mem: storing console data in 1616
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1614
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 121 -> 122
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1614 in location 1364
9999 mem: incrementing refcount of 1614: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 20 -> 21
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1366
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1367
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 1
9999 mem: location 1367 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 122 -> 123
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 123 -> 122
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 122 -> 123
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1614
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1614 in location 1311
9999 mem: incrementing refcount of 1614: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1311 is 1614
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9999 mem: location 1615 is 0
9999 mem: location 1616 is 1608
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9998 run: address to copy is 1615
9999 mem: storing 1615 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9999 mem: location 1615 is 0
9999 mem: location 1616 is 1608
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9998 run: address to copy is 1616
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1616 is 1608
9999 mem: storing 1608 in location 1313
9999 mem: incrementing refcount of 1608: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1608
9999 mem: skipping refcount at 1608
9999 mem: storing 1 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1615
9999 mem: location 1615 is 0
9999 mem: location 1314 is 1
9999 mem: storing 0 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1608
9999 mem: skipping refcount at 1608
9998 run: base address is 1609
9999 mem: location 1312 is 1615
9999 mem: location 1615 is 0
9998 run: address to copy is 1610
9998 run: its type is event
9999 mem: location 1610 is 0
9999 mem: location 1611 is 26
9999 mem: location 1612 is 0
9999 mem: location 1613 is 0
9999 mem: storing 0 in location 1317
9999 mem: storing 26 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1615
9999 mem: location 1615 is 0
9999 mem: location 1312 is 1615
9999 mem: storing 1 in location 1615
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 0
9999 mem: location 1318 is 26
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1614
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1614
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1368
9999 mem: storing 26 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1614: 2 -> 1
9999 mem: storing 1614 in location 1364
9999 mem: incrementing refcount of 1614: 1 -> 2
9999 mem: storing 1 in location 1372
9999 mem: storing 0 in location 1373
 104 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1368 is 0
9999 mem: location 1369 is 26
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 mem: storing 0 in location 1374
 104 run: jump-unless t, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 mem: location 1368 is 0
9999 mem: location 1369 is 26
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 123 -> 124
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 21 -> 22
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1448
9999 mem: storing 26 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1452
 105 run: jump-if editor, 1:offset
9999 mem: location 1447 is 1158
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1617
9999 mem: storing 3 in location 1618
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1620
9999 mem: incrementing refcount of 1012: 124 -> 125
 106 run: jump-unless screen, 
9999 mem: location 1620 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1621
 106 run: reply width:number
9999 mem: location 1621 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1453
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1620
9999 mem: incrementing refcount of 1012: 125 -> 126
 106 run: jump-unless screen, 
9999 mem: location 1620 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1621
 106 run: reply height:number
9999 mem: location 1621 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1454
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1455
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1456
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1457
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1458
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1459
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1460
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1461
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1448 is 0
9999 mem: location 1449 is 26
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 1449 in location 1462
 105 run: jump-unless c, 
9999 mem: location 1462 is 1449
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1462 is 1449
9999 mem: location 1449 is 26
9999 mem: storing 0 in location 1463
 105 run: jump-unless redo?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1462 is 1449
9999 mem: location 1449 is 26
9999 mem: storing 1 in location 1474
 105 run: jump-unless undo?, 
9999 mem: location 1474 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1605
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1466
 105 run: jump-unless *undo, 
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1605
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1605
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1620
9999 mem: incrementing refcount of 1605: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1620 is 1605
9999 mem: skipping refcount at 1605
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1606 is 1593
9999 mem: location 1607 is 1553
9999 mem: location 1620 is 1605
9999 mem: skipping refcount at 1605
9998 run: address to copy is 1606
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1606 is 1593
9999 mem: storing 1593 in location 1621
9999 mem: incrementing refcount of 1593: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1621 is 1593
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1593
9999 mem: storing 1593 in location 1465
9999 mem: incrementing refcount of 1593: 5 -> 6
 105 run: *undo <- rest_2 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1605
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1605 in location 1620
9999 mem: incrementing refcount of 1605: 3 -> 4
 106 run: result <- get *in, next:offset
9999 mem: location 1620 is 1605
9999 mem: skipping refcount at 1605
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1606 is 1593
9999 mem: location 1607 is 1553
9999 mem: location 1620 is 1605
9999 mem: skipping refcount at 1605
9999 type: type deduced to be address$
9998 run: address to copy is 1607
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1607 is 1553
9999 mem: storing 1553 in location 1621
9999 mem: incrementing refcount of 1553: 5 -> 6
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1621 is 1553
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1553
9999 mem: location 1466 is 1169
9999 mem: decrementing refcount of 1605: 4 -> 3
9999 mem: storing 1553 in location 1169
9999 mem: incrementing refcount of 1553: 6 -> 7
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 0
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1464
 105 run: *redo <- push_4 op, *redo
9999 mem: location 1465 is 1593
9999 mem: location 1464 is 1170
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1593 in location 1276
9999 mem: incrementing refcount of 1593: 6 -> 7
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1622
9999 mem: storing 1622 in location 1278
9999 mem: incrementing refcount of 1622: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1622
9999 mem: skipping refcount at 1622
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1623 is 0
9999 mem: location 1624 is 0
9999 mem: location 1278 is 1622
9999 mem: skipping refcount at 1622
9998 run: address to copy is 1623
9999 mem: storing 1623 in location 1279
 106 run: *val <- copy x
9999 mem: location 1276 is 1593
9999 mem: location 1279 is 1623
9999 mem: storing 1593 in location 1623
9999 mem: incrementing refcount of 1593: 7 -> 8
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1622
9999 mem: skipping refcount at 1622
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1623 is 1593
9999 mem: location 1624 is 0
9999 mem: location 1278 is 1622
9999 mem: skipping refcount at 1622
9999 type: type deduced to be address$
9998 run: address to copy is 1624
9999 mem: storing 1624 in location 1280
 106 run: *next <- copy in
9999 mem: location 1277 is 0
9999 mem: location 1280 is 1624
9999 mem: storing 0 in location 1624
 106 run: reply result
9999 mem: location 1278 is 1622
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1622
9999 mem: location 1464 is 1170
9999 mem: storing 1622 in location 1170
9999 mem: incrementing refcount of 1622: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: location 1594 is 1
9999 mem: location 1595 is 2
9999 mem: location 1596 is 3
9999 mem: location 1597 is 1180
9999 mem: location 1598 is 1
9999 mem: location 1599 is 3
9999 mem: location 1600 is 1180
9999 mem: location 1601 is 3
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: storing 0 in location 1467
 105 run: jump-unless deletion, 
9999 mem: location 1467 is 0
9998 run: jumping to instruction 86
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: location 1594 is 1
9999 mem: location 1595 is 2
9999 mem: location 1596 is 3
9999 mem: location 1597 is 1180
9999 mem: location 1598 is 1
9999 mem: location 1599 is 3
9999 mem: location 1600 is 1180
9999 mem: location 1601 is 3
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: storing 1595 in location 1471
 105 run: jump-unless move, 
9999 mem: location 1471 is 1595
9998 run: jump-unless fell through
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1470
 105 run: *cursor-row <- get *move, before-row:offset
9999 mem: location 1471 is 1595
9999 mem: location 1595 is 2
9999 mem: location 1596 is 3
9999 mem: location 1597 is 1180
9999 mem: location 1598 is 1
9999 mem: location 1599 is 3
9999 mem: location 1600 is 1180
9999 mem: location 1601 is 3
9999 mem: location 1471 is 1595
9998 run: address to copy is 1595
9998 run: its type is number
9999 mem: location 1595 is 2
9999 mem: location 1458 is 1166
9999 mem: storing 2 in location 1166
 105 run: *cursor-column <- get *move, before-column:offset
9999 mem: location 1471 is 1595
9999 mem: location 1595 is 2
9999 mem: location 1596 is 3
9999 mem: location 1597 is 1180
9999 mem: location 1598 is 1
9999 mem: location 1599 is 3
9999 mem: location 1600 is 1180
9999 mem: location 1601 is 3
9999 mem: location 1471 is 1595
9998 run: address to copy is 1596
9998 run: its type is number
9999 mem: location 1596 is 3
9999 mem: location 1459 is 1167
9999 mem: storing 3 in location 1167
 105 run: *top <- get *move, before-top-of-screen:offset
9999 mem: location 1471 is 1595
9999 mem: location 1595 is 2
9999 mem: location 1596 is 3
9999 mem: location 1597 is 1180
9999 mem: location 1598 is 1
9999 mem: location 1599 is 3
9999 mem: location 1600 is 1180
9999 mem: location 1601 is 3
9999 mem: location 1471 is 1595
9998 run: address to copy is 1597
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1597 is 1180
9999 mem: location 1470 is 1160
9999 mem: decrementing refcount of 1180: 30 -> 29
9999 mem: storing 1180 in location 1160
9999 mem: incrementing refcount of 1180: 29 -> 30
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: location 1594 is 1
9999 mem: location 1595 is 2
9999 mem: location 1596 is 3
9999 mem: location 1597 is 1180
9999 mem: location 1598 is 1
9999 mem: location 1599 is 3
9999 mem: location 1600 is 1180
9999 mem: location 1601 is 3
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1465 is 1593
9999 mem: skipping refcount at 1593
9999 mem: storing 0 in location 1472
 105 run: jump-unless typing, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 106
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1446 is 1012
9999 mem: location 1447 is 1158
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 126 -> 125
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 125 -> 126
9999 mem: decrementing refcount of 1158: 22 -> 21
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 21 -> 22
9999 mem: storing 1 in location 1375
 104 run: jump-unless go-render?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1174
9999 mem: incrementing refcount of 1012: 126 -> 127
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1175
9999 mem: incrementing refcount of 1158: 22 -> 23
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1176
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1177
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1174 is 1012
9999 mem: location 1175 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 127 -> 128
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1247
9999 mem: incrementing refcount of 1158: 23 -> 24
 106 run: jump-if editor, 1:offset
9999 mem: location 1247 is 1158
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1248
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1246 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1620
9999 mem: incrementing refcount of 1012: 128 -> 129
 107 run: jump-unless screen, 
9999 mem: location 1620 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1621
 107 run: reply height:number
9999 mem: location 1621 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1249
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1250
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1251
9999 mem: incrementing refcount of 1180: 30 -> 31
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1251 is 1180
9999 mem: storing 1180 in location 1252
9999 mem: incrementing refcount of 1180: 31 -> 32
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1620
9999 mem: incrementing refcount of 1180: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1620 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1621
9999 mem: incrementing refcount of 1194: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 33 -> 32
9999 mem: storing 1194 in location 1251
9999 mem: incrementing refcount of 1194: 25 -> 26
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1253
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1254
 106 run: column:number <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1256
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1257
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1207
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1258
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 1
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 129 -> 130
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 130 -> 129
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 129 -> 130
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1194
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1625
9999 mem: storing 10 in location 1626
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 97
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 97
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 97
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 97
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 130 -> 131
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 65 -> 66
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 10
9999 mem: storing 1040 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 97
9999 mem: location 1304 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1620
9999 mem: incrementing refcount of 1194: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1620 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1621
9999 mem: incrementing refcount of 1203: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 27 -> 26
9999 mem: storing 1203 in location 1251
9999 mem: incrementing refcount of 1203: 25 -> 26
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1620
9999 mem: incrementing refcount of 1180: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1620 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1621
9999 mem: incrementing refcount of 1194: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 33 -> 32
9999 mem: storing 1194 in location 1252
9999 mem: incrementing refcount of 1194: 27 -> 28
 106 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 98
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 98
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 98
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 98
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 131 -> 132
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 66 -> 67
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 11
9999 mem: storing 1042 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 98
9999 mem: location 1304 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1620
9999 mem: incrementing refcount of 1203: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1620 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1621
9999 mem: incrementing refcount of 1207: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 27 -> 26
9999 mem: storing 1207 in location 1251
9999 mem: incrementing refcount of 1207: 26 -> 27
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1620
9999 mem: incrementing refcount of 1194: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1620 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1621
9999 mem: incrementing refcount of 1203: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 29 -> 28
9999 mem: storing 1203 in location 1252
9999 mem: incrementing refcount of 1203: 27 -> 28
 106 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 99
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 99
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 99
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 99
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 132 -> 133
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 67 -> 68
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 12
9999 mem: storing 1044 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 99
9999 mem: location 1304 is 1044
9999 mem: storing 99 in location 1044
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1620
9999 mem: incrementing refcount of 1207: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1620 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1621
9999 mem: incrementing refcount of 1211: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 28 -> 27
9999 mem: storing 1211 in location 1251
9999 mem: incrementing refcount of 1211: 27 -> 28
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1620
9999 mem: incrementing refcount of 1203: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1620 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1621
9999 mem: incrementing refcount of 1207: 27 -> 28
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 29 -> 28
9999 mem: storing 1207 in location 1252
9999 mem: incrementing refcount of 1207: 28 -> 29
 106 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 133 -> 134
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 107 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 134 -> 135
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 68 -> 69
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 13
9999 mem: storing 1046 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 135 -> 134
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 134 -> 135
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 135 -> 136
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 69 -> 70
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 14
9999 mem: storing 1048 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 136 -> 135
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 135 -> 136
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 136 -> 137
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 70 -> 71
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 15
9999 mem: storing 1050 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1050
9999 mem: storing 32 in location 1050
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1051
9999 mem: storing 7 in location 1051
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 137 -> 136
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 136 -> 137
 107 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 137 -> 138
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 71 -> 72
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 16
9999 mem: storing 1052 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 138 -> 137
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 137 -> 138
 107 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 138 -> 139
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 72 -> 73
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 17
9999 mem: storing 1054 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 139 -> 138
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 138 -> 139
 107 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 139 -> 140
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 73 -> 74
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 18
9999 mem: storing 1056 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 140 -> 139
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 139 -> 140
 107 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 140 -> 141
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 74 -> 75
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 19
9999 mem: storing 1058 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 141 -> 140
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 140 -> 141
 107 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1254 is 1
9999 mem: storing 2 in location 1254
 106 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 2
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 141 -> 142
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 142 -> 141
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 141 -> 142
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1620
9999 mem: incrementing refcount of 1211: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1620 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1621
9999 mem: incrementing refcount of 1215: 23 -> 24
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 29 -> 28
9999 mem: storing 1215 in location 1251
9999 mem: incrementing refcount of 1215: 24 -> 25
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1620
9999 mem: incrementing refcount of 1207: 29 -> 30
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1620 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1621
9999 mem: incrementing refcount of 1211: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 30 -> 29
9999 mem: storing 1211 in location 1252
9999 mem: incrementing refcount of 1211: 29 -> 30
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 0
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 0 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 100
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 100
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 100
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 100
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 142 -> 143
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 75 -> 76
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 20
9999 mem: storing 1060 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 100
9999 mem: location 1304 is 1060
9999 mem: storing 100 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1620
9999 mem: incrementing refcount of 1215: 25 -> 26
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1620 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1621
9999 mem: incrementing refcount of 1219: 26 -> 27
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 26 -> 25
9999 mem: storing 1219 in location 1251
9999 mem: incrementing refcount of 1219: 27 -> 28
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1620
9999 mem: incrementing refcount of 1211: 30 -> 31
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1620 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1621
9999 mem: incrementing refcount of 1215: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 31 -> 30
9999 mem: storing 1215 in location 1252
9999 mem: incrementing refcount of 1215: 26 -> 27
 106 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 1
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 0 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 101
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 101
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 101
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 101
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 143 -> 144
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 76 -> 77
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 21
9999 mem: storing 1062 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 101
9999 mem: location 1304 is 1062
9999 mem: storing 101 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1620
9999 mem: incrementing refcount of 1219: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1620 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1621
9999 mem: incrementing refcount of 1223: 23 -> 24
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 29 -> 28
9999 mem: storing 1223 in location 1251
9999 mem: incrementing refcount of 1223: 24 -> 25
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1620
9999 mem: incrementing refcount of 1215: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1620 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1621
9999 mem: incrementing refcount of 1219: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 28 -> 27
9999 mem: storing 1219 in location 1252
9999 mem: incrementing refcount of 1219: 29 -> 30
 106 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1223
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 2
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 0 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 102
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 102
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 102
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 102
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 144 -> 145
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 77 -> 78
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 22
9999 mem: storing 1064 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 102
9999 mem: location 1304 is 1064
9999 mem: storing 102 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1620
9999 mem: incrementing refcount of 1223: 25 -> 26
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1620 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1621
9999 mem: incrementing refcount of 1227: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 26 -> 25
9999 mem: storing 1227 in location 1251
9999 mem: incrementing refcount of 1227: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1620
9999 mem: incrementing refcount of 1219: 30 -> 31
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1620 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1621
9999 mem: incrementing refcount of 1223: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 31 -> 30
9999 mem: storing 1223 in location 1252
9999 mem: incrementing refcount of 1223: 26 -> 27
 106 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1227
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 1 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1252 is 1223
9999 mem: location 1258 is 1162
9999 mem: decrementing refcount of 1207: 29 -> 28
9999 mem: storing 1223 in location 1162
9999 mem: incrementing refcount of 1223: 27 -> 28
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 0 in location 1264
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 145 -> 146
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 107 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 146 -> 147
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 78 -> 79
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 23
9999 mem: storing 1066 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1066
9999 mem: storing 32 in location 1066
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1067
9999 mem: storing 7 in location 1067
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 147 -> 146
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 146 -> 147
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 147 -> 148
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 79 -> 80
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 24
9999 mem: storing 1068 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1068
9999 mem: storing 32 in location 1068
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1069
9999 mem: storing 7 in location 1069
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 148 -> 147
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 147 -> 148
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 148 -> 149
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 80 -> 81
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 25
9999 mem: storing 1070 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1070
9999 mem: storing 32 in location 1070
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1071
9999 mem: storing 7 in location 1071
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 149 -> 148
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 148 -> 149
 107 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 149 -> 150
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 81 -> 82
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 26
9999 mem: storing 1072 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1072
9999 mem: storing 32 in location 1072
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1073
9999 mem: storing 7 in location 1073
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 150 -> 149
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 149 -> 150
 107 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 150 -> 151
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 82 -> 83
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 27
9999 mem: storing 1074 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1074
9999 mem: storing 32 in location 1074
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1075
9999 mem: storing 7 in location 1075
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 151 -> 150
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 150 -> 151
 107 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 151 -> 152
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 83 -> 84
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 28
9999 mem: storing 1076 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1076
9999 mem: storing 32 in location 1076
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1077
9999 mem: storing 7 in location 1077
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 152 -> 151
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 151 -> 152
 107 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 152 -> 153
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 84 -> 85
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 29
9999 mem: storing 1078 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1078
9999 mem: storing 32 in location 1078
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1079
9999 mem: storing 7 in location 1079
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 153 -> 152
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 152 -> 153
 107 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1254 is 2
9999 mem: storing 3 in location 1254
 106 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 3
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 153 -> 154
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 154 -> 153
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 153 -> 154
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1620
9999 mem: incrementing refcount of 1227: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1227
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1620 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1621
9999 mem: incrementing refcount of 1231: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 21 -> 20
9999 mem: storing 1231 in location 1251
9999 mem: incrementing refcount of 1231: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1620
9999 mem: incrementing refcount of 1223: 28 -> 29
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1620 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1621
9999 mem: incrementing refcount of 1227: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 29 -> 28
9999 mem: storing 1227 in location 1252
9999 mem: incrementing refcount of 1227: 21 -> 22
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1231
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 103
9999 mem: storing 103 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 103
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 103
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 103
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 103
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 154 -> 155
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 103
  90 print-character: 103 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 85 -> 86
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 30
9999 mem: storing 1080 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 103
9999 mem: location 1304 is 1080
9999 mem: storing 103 in location 1080
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1081
9999 mem: storing 7 in location 1081
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1620
9999 mem: incrementing refcount of 1231: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1231
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1620 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1621
9999 mem: incrementing refcount of 1235: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 21 -> 20
9999 mem: storing 1235 in location 1251
9999 mem: incrementing refcount of 1235: 19 -> 20
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1620
9999 mem: incrementing refcount of 1227: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1227
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1620 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1621
9999 mem: incrementing refcount of 1231: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 23 -> 22
9999 mem: storing 1231 in location 1252
9999 mem: incrementing refcount of 1231: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1235
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 104
9999 mem: storing 104 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 104
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 104
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 104
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 104
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 155 -> 156
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 104
  90 print-character: 104 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 86 -> 87
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 31
9999 mem: storing 1082 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 104
9999 mem: location 1304 is 1082
9999 mem: storing 104 in location 1082
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1083
9999 mem: storing 7 in location 1083
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1620
9999 mem: incrementing refcount of 1235: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1235
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1620 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1621
9999 mem: incrementing refcount of 1239: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 21 -> 20
9999 mem: storing 1239 in location 1251
9999 mem: incrementing refcount of 1239: 17 -> 18
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1620
9999 mem: incrementing refcount of 1231: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1231
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1620 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1621
9999 mem: incrementing refcount of 1235: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 23 -> 22
9999 mem: storing 1235 in location 1252
9999 mem: incrementing refcount of 1235: 21 -> 22
 106 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1239
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 105
9999 mem: storing 105 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 105
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 105
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 105
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 105
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 156 -> 157
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 105
  90 print-character: 105 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 87 -> 88
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 32
9999 mem: storing 1084 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 105
9999 mem: location 1304 is 1084
9999 mem: storing 105 in location 1084
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1085
9999 mem: storing 7 in location 1085
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1239
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1620
9999 mem: incrementing refcount of 1239: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1239
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1620 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1621
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1239: 19 -> 18
9999 mem: storing 0 in location 1251
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1620
9999 mem: incrementing refcount of 1235: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1620 is 1235
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1620 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1620 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1621
9999 mem: incrementing refcount of 1239: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1621 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 23 -> 22
9999 mem: storing 1239 in location 1252
9999 mem: incrementing refcount of 1239: 19 -> 20
 106 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1267
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1251 is 0
9999 mem: location 1267 is 1161
9999 mem: storing 0 in location 1161
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 1 in location 1268
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1260 is 0
9999 mem: location 1268 is 1
9999 mem: storing 0 in location 1269
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1270
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 106 run: jump-unless before-cursor?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1272
 106 run: *bottom <- copy row
9999 mem: location 1254 is 3
9999 mem: location 1272 is 1165
9999 mem: storing 3 in location 1165
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1246 is 1012
9999 mem: location 1247 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 3
9999 mem: storing 3 in location 1178
9999 mem: storing 3 in location 1179
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1174 is 1012
9999 mem: location 1179 is 3
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 157 -> 158
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 106 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 158 -> 159
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 88 -> 89
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 33
9999 mem: storing 1086 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1303 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1086
9999 mem: storing 32 in location 1086
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1303 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1087
9999 mem: storing 7 in location 1087
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 159 -> 158
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 158 -> 159
 106 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 159 -> 160
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 89 -> 90
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 34
9999 mem: storing 1088 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1303 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1088
9999 mem: storing 32 in location 1088
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1303 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1089
9999 mem: storing 7 in location 1089
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 160 -> 159
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 159 -> 160
 106 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 160 -> 161
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 90 -> 91
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 35
9999 mem: storing 1090 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1303 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1090
9999 mem: storing 32 in location 1090
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1303 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1091
9999 mem: storing 7 in location 1091
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 161 -> 160
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 160 -> 161
 106 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 161 -> 162
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 91 -> 92
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 36
9999 mem: storing 1092 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1303 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1092
9999 mem: storing 32 in location 1092
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1303 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1093
9999 mem: storing 7 in location 1093
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 162 -> 161
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 161 -> 162
 106 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 162 -> 163
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 92 -> 93
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 37
9999 mem: storing 1094 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1303 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1094
9999 mem: storing 32 in location 1094
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1303 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1095
9999 mem: storing 7 in location 1095
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 163 -> 162
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 162 -> 163
 106 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 163 -> 164
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 93 -> 94
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 38
9999 mem: storing 1096 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1303 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1096
9999 mem: storing 32 in location 1096
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1303 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1097
9999 mem: storing 7 in location 1097
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 164 -> 163
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 163 -> 164
 106 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 164 -> 165
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 94 -> 95
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 39
9999 mem: storing 1098 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1303 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1098
9999 mem: storing 32 in location 1098
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1303 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1099
9999 mem: storing 7 in location 1099
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 165 -> 164
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 164 -> 165
 106 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1174 is 1012
9999 mem: location 1178 is 4
9999 mem: location 1176 is 0
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 165 -> 166
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1312
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1313
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1314
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1315
9999 mem: storing 1 in location 1316
 106 run: jump-if style-found?, 
9999 mem: location 1316 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
 106 run: jump-if color-found?, 
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1317
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 106 run: jump-if bg-color-found?, 
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1319
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1311 is 1012
9999 mem: location 1312 is 4
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 166 -> 167
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 167 -> 166
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 166 -> 167
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 0
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 167 -> 168
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 95 -> 96
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 40
9999 mem: storing 1100 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1303 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1100
9999 mem: storing 9480 in location 1100
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1303 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1101
9999 mem: storing 245 in location 1101
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 0
9999 mem: storing 1 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 1
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 168 -> 169
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 96 -> 97
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 41
9999 mem: storing 1102 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1303 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1102
9999 mem: storing 9480 in location 1102
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1303 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1103
9999 mem: storing 245 in location 1103
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 1
9999 mem: storing 2 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 2
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 169 -> 170
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 97 -> 98
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 42
9999 mem: storing 1104 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1303 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1104
9999 mem: storing 9480 in location 1104
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1303 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1105
9999 mem: storing 245 in location 1105
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 2
9999 mem: storing 3 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 3
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 170 -> 171
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 98 -> 99
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 43
9999 mem: storing 1106 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1303 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1106
9999 mem: storing 9480 in location 1106
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1303 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1107
9999 mem: storing 245 in location 1107
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 3
9999 mem: storing 4 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 4
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 171 -> 172
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 99 -> 100
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 44
9999 mem: storing 1108 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1303 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1108
9999 mem: storing 9480 in location 1108
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1303 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1109
9999 mem: storing 245 in location 1109
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 4
9999 mem: storing 5 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 5
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 172 -> 173
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 100 -> 101
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 45
9999 mem: storing 1110 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1303 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1110
9999 mem: storing 9480 in location 1110
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1303 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1111
9999 mem: storing 245 in location 1111
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 5
9999 mem: storing 6 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 6
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 173 -> 174
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 101 -> 102
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 46
9999 mem: storing 1112 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1303 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1112
9999 mem: storing 9480 in location 1112
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1303 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1113
9999 mem: storing 245 in location 1113
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 6
9999 mem: storing 7 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 7
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 174 -> 175
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 102 -> 103
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 47
9999 mem: storing 1114 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1303 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1114
9999 mem: storing 9480 in location 1114
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1303 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1115
9999 mem: storing 245 in location 1115
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 7
9999 mem: storing 8 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 8
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 175 -> 176
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 103 -> 104
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 48
9999 mem: storing 1116 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 245
9999 mem: location 1303 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1116
9999 mem: storing 9480 in location 1116
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 245
9999 mem: location 1303 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1117
9999 mem: storing 245 in location 1117
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 8
9999 mem: storing 9 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 9
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 176 -> 177
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 104 -> 105
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 49
9999 mem: storing 1118 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 245
9999 mem: location 1303 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1118
9999 mem: storing 9480 in location 1118
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 245
9999 mem: location 1303 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1119
9999 mem: storing 245 in location 1119
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 9
9999 mem: storing 10 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 10
9999 mem: location 1314 is 9
9999 mem: storing 0 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1311 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1174 is 1012
9999 mem: location 1178 is 5
9999 mem: location 1176 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 177 -> 178
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1277
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1279
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1280
 106 run: jump-if screen, 
9999 mem: location 1276 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1276 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1278 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 178 -> 179
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1326
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
 107 run: jump-unless screen, 
9999 mem: location 1325 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1328
 107 run: *row <- copy new-row
9999 mem: location 1326 is 5
9999 mem: location 1328 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1329
 107 run: *column <- copy new-column
9999 mem: location 1327 is 0
9999 mem: location 1329 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1325 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 179 -> 178
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 178 -> 179
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1276 is 1012
9999 mem: location 1278 is 0
9999 mem: location 1280 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 179 -> 180
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 107 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 180 -> 181
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 181 -> 180
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 180 -> 181
 107 run: column <- add column, 1
9999 mem: location 1188 is 0
9999 mem: storing 1 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 181 -> 182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 182 -> 181
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 181 -> 182
 107 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 182 -> 183
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 183 -> 182
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 182 -> 183
 107 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 183 -> 184
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 184 -> 183
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 183 -> 184
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 184 -> 185
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 185 -> 184
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 184 -> 185
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 185 -> 186
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 186 -> 185
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 185 -> 186
 107 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 186 -> 187
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 187 -> 186
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 186 -> 187
 107 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 187 -> 188
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 188 -> 187
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 187 -> 188
 107 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 188 -> 189
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 189 -> 188
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 188 -> 189
 107 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 189 -> 190
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 190 -> 189
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 189 -> 190
 107 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1276 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1279 is 0
9999 mem: location 1280 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 190 -> 191
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1334
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1335
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1336
 107 run: row <- add row, 1
9999 mem: location 1334 is 5
9999 mem: storing 6 in location 1334
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1333 is 1012
9999 mem: location 1334 is 6
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 191 -> 192
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1326
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
 108 run: jump-unless screen, 
9999 mem: location 1325 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1328
 108 run: *row <- copy new-row
9999 mem: location 1326 is 6
9999 mem: location 1328 is 1015
9999 mem: storing 6 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1329
 108 run: *column <- copy new-column
9999 mem: location 1327 is 0
9999 mem: location 1329 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1325 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 192 -> 191
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 191 -> 192
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1620
9999 mem: incrementing refcount of 1012: 192 -> 193
 108 run: jump-unless screen, 
9999 mem: location 1620 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1620 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1621
 108 run: reply height:number
9999 mem: location 1621 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1337
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1334 is 6
9999 mem: location 1337 is 5
9999 mem: storing 1 in location 1338
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1338 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1333 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1174 is 1012
9999 mem: location 1175 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 193 -> 192
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 192 -> 193
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1366
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1367
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 2
9999 mem: location 1367 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 193 -> 194
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 194 -> 193
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 193 -> 194
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1614
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1614 in location 1311
9999 mem: incrementing refcount of 1614: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1311 is 1614
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9999 mem: location 1615 is 1
9999 mem: location 1616 is 1608
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9998 run: address to copy is 1615
9999 mem: storing 1615 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9999 mem: location 1615 is 1
9999 mem: location 1616 is 1608
9999 mem: location 1311 is 1614
9999 mem: skipping refcount at 1614
9998 run: address to copy is 1616
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1616 is 1608
9999 mem: storing 1608 in location 1313
9999 mem: incrementing refcount of 1608: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1608
9999 mem: skipping refcount at 1608
9999 mem: storing 1 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1615
9999 mem: location 1615 is 1
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1617 in location 1316
9999 mem: incrementing refcount of 1617: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1316 is 1617
9999 mem: skipping refcount at 1617
9999 mem: location 1618 is 0
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: location 1621 is 0
9999 mem: location 1311 is 1614
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1614
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1614: 3 -> 2
9999 mem: storing 1614 in location 1364
9999 mem: incrementing refcount of 1614: 2 -> 3
9999 mem: storing 1 in location 1372
9999 mem: storing 1 in location 1373
9990 schedule: editor-event-loop/run_1001/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 104 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1373 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1363 is 1012
9999 mem: location 1364 is 1614
9999 mem: location 1365 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 3
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console [
    press ctrl-z
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-z": <>}
9992 load: after rewriting: press ctrl-z
9999 mem: storing 'press' event starting at 1639
9999 mem: storing console in 1643
9999 mem: storing console data in 1645
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1643
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 194 -> 195
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1643 in location 1364
9999 mem: incrementing refcount of 1643: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 24 -> 25
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1366
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1367
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 2
9999 mem: location 1367 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 195 -> 196
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 196 -> 195
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 195 -> 196
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1643
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1643 in location 1311
9999 mem: incrementing refcount of 1643: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1311 is 1643
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9999 mem: location 1644 is 0
9999 mem: location 1645 is 1637
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9998 run: address to copy is 1644
9999 mem: storing 1644 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9999 mem: location 1644 is 0
9999 mem: location 1645 is 1637
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9998 run: address to copy is 1645
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1645 is 1637
9999 mem: storing 1637 in location 1313
9999 mem: incrementing refcount of 1637: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1637
9999 mem: skipping refcount at 1637
9999 mem: storing 1 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1644
9999 mem: location 1644 is 0
9999 mem: location 1314 is 1
9999 mem: storing 0 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1637
9999 mem: skipping refcount at 1637
9998 run: base address is 1638
9999 mem: location 1312 is 1644
9999 mem: location 1644 is 0
9998 run: address to copy is 1639
9998 run: its type is event
9999 mem: location 1639 is 0
9999 mem: location 1640 is 26
9999 mem: location 1641 is 0
9999 mem: location 1642 is 0
9999 mem: storing 0 in location 1317
9999 mem: storing 26 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1644
9999 mem: location 1644 is 0
9999 mem: location 1312 is 1644
9999 mem: storing 1 in location 1644
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 0
9999 mem: location 1318 is 26
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1643
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1643
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1368
9999 mem: storing 26 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1643: 2 -> 1
9999 mem: storing 1643 in location 1364
9999 mem: incrementing refcount of 1643: 1 -> 2
9999 mem: storing 1 in location 1372
9999 mem: storing 0 in location 1373
 104 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1373 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1368 is 0
9999 mem: location 1369 is 26
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 mem: storing 0 in location 1374
 104 run: jump-unless t, 
9999 mem: location 1374 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 mem: location 1368 is 0
9999 mem: location 1369 is 26
9999 mem: location 1370 is 0
9999 mem: location 1371 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1446
9999 mem: incrementing refcount of 1012: 196 -> 197
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1447
9999 mem: incrementing refcount of 1158: 25 -> 26
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1448
9999 mem: storing 26 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1452
 105 run: jump-if editor, 1:offset
9999 mem: location 1447 is 1158
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1646
9999 mem: storing 3 in location 1647
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1649
9999 mem: incrementing refcount of 1012: 197 -> 198
 106 run: jump-unless screen, 
9999 mem: location 1649 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1650
 106 run: reply width:number
9999 mem: location 1650 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1453
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1446 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1649
9999 mem: incrementing refcount of 1012: 198 -> 199
 106 run: jump-unless screen, 
9999 mem: location 1649 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1650
 106 run: reply height:number
9999 mem: location 1650 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1454
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1455
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1456
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1457
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1458
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1459
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1458 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1460
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1459 is 1167
9999 mem: location 1167 is 3
9999 mem: storing 3 in location 1461
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1448 is 0
9999 mem: location 1449 is 26
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: storing 1449 in location 1462
 105 run: jump-unless c, 
9999 mem: location 1462 is 1449
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1462 is 1449
9999 mem: location 1449 is 26
9999 mem: storing 0 in location 1463
 105 run: jump-unless redo?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1462 is 1449
9999 mem: location 1449 is 26
9999 mem: storing 1 in location 1474
 105 run: jump-unless undo?, 
9999 mem: location 1474 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1553
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1466
 105 run: jump-unless *undo, 
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1553 in location 1649
9999 mem: incrementing refcount of 1553: 7 -> 8
 106 run: result <- get *in, value:offset
9999 mem: location 1649 is 1553
9999 mem: skipping refcount at 1553
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1554 is 1120
9999 mem: location 1555 is 1440
9999 mem: location 1649 is 1553
9999 mem: skipping refcount at 1553
9998 run: address to copy is 1554
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1554 is 1120
9999 mem: storing 1120 in location 1650
9999 mem: incrementing refcount of 1120: 7 -> 8
 106 run: reply result:_elem
9999 mem: location 1650 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1465
9999 mem: incrementing refcount of 1120: 8 -> 9
 105 run: *undo <- rest_2 *undo
9999 mem: location 1466 is 1169
9999 mem: location 1169 is 1553
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1553 in location 1649
9999 mem: incrementing refcount of 1553: 8 -> 9
 106 run: result <- get *in, next:offset
9999 mem: location 1649 is 1553
9999 mem: skipping refcount at 1553
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1554 is 1120
9999 mem: location 1555 is 1440
9999 mem: location 1649 is 1553
9999 mem: skipping refcount at 1553
9999 type: type deduced to be address$
9998 run: address to copy is 1555
9998 run: its type is <address : <shared : <list : <address : <shared : <operation : <>>>>>>>
9999 mem: location 1555 is 1440
9999 mem: storing 1440 in location 1650
9999 mem: incrementing refcount of 1440: 4 -> 5
 106 run: reply result:address:shared:list:_elem/contained-in:in
9999 mem: location 1650 is 1440
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1440
9999 mem: location 1466 is 1169
9999 mem: decrementing refcount of 1553: 9 -> 8
9999 mem: storing 1440 in location 1169
9999 mem: incrementing refcount of 1440: 5 -> 6
 105 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1622
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1464
 105 run: *redo <- push_4 op, *redo
9999 mem: location 1465 is 1120
9999 mem: location 1464 is 1170
9999 mem: location 1170 is 1622
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1276
9999 mem: incrementing refcount of 1120: 9 -> 10
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1622 in location 1277
9999 mem: incrementing refcount of 1622: 2 -> 3
 106 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1651
9999 mem: storing 1651 in location 1278
9999 mem: incrementing refcount of 1651: 0 -> 1
 106 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1651
9999 mem: skipping refcount at 1651
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1652 is 0
9999 mem: location 1653 is 0
9999 mem: location 1278 is 1651
9999 mem: skipping refcount at 1651
9998 run: address to copy is 1652
9999 mem: storing 1652 in location 1279
 106 run: *val <- copy x
9999 mem: location 1276 is 1120
9999 mem: location 1279 is 1652
9999 mem: storing 1120 in location 1652
9999 mem: incrementing refcount of 1120: 10 -> 11
 106 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1651
9999 mem: skipping refcount at 1651
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1652 is 1120
9999 mem: location 1653 is 0
9999 mem: location 1278 is 1651
9999 mem: skipping refcount at 1651
9999 type: type deduced to be address$
9998 run: address to copy is 1653
9999 mem: storing 1653 in location 1280
 106 run: *next <- copy in
9999 mem: location 1277 is 1622
9999 mem: location 1280 is 1653
9999 mem: storing 1622 in location 1653
9999 mem: incrementing refcount of 1622: 3 -> 4
 106 run: reply result
9999 mem: location 1278 is 1651
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1651
9999 mem: location 1464 is 1170
9999 mem: decrementing refcount of 1622: 4 -> 3
9999 mem: storing 1651 in location 1170
9999 mem: incrementing refcount of 1651: 1 -> 2
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1467
 105 run: jump-unless deletion, 
9999 mem: location 1467 is 0
9998 run: jumping to instruction 86
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1471
 105 run: jump-unless move, 
9999 mem: location 1471 is 1122
9998 run: jump-unless fell through
 105 run: top:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 3
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1447 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1470
 105 run: *cursor-row <- get *move, before-row:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 2
9999 mem: location 1458 is 1166
9999 mem: storing 2 in location 1166
 105 run: *cursor-column <- get *move, before-column:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1123
9998 run: its type is number
9999 mem: location 1123 is 1
9999 mem: location 1459 is 1167
9999 mem: storing 1 in location 1167
 105 run: *top <- get *move, before-top-of-screen:offset
9999 mem: location 1471 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1471 is 1122
9998 run: address to copy is 1124
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1124 is 1180
9999 mem: location 1470 is 1160
9999 mem: decrementing refcount of 1180: 32 -> 31
9999 mem: storing 1180 in location 1160
9999 mem: incrementing refcount of 1180: 31 -> 32
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 2
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1465 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1472
 105 run: jump-unless typing, 
9999 mem: location 1472 is 0
9998 run: jumping to instruction 106
 105 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1446 is 1012
9999 mem: location 1447 is 1158
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 199 -> 198
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 198 -> 199
9999 mem: decrementing refcount of 1158: 26 -> 25
9999 mem: storing 1158 in location 1365
9999 mem: incrementing refcount of 1158: 25 -> 26
9999 mem: storing 1 in location 1375
 104 run: jump-unless go-render?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1363 is 1012
9999 mem: location 1365 is 1158
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1174
9999 mem: incrementing refcount of 1012: 199 -> 200
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1175
9999 mem: incrementing refcount of 1158: 26 -> 27
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1176
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1175 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1177
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1174 is 1012
9999 mem: location 1175 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 200 -> 201
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1247
9999 mem: incrementing refcount of 1158: 27 -> 28
 106 run: jump-if editor, 1:offset
9999 mem: location 1247 is 1158
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1248
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1246 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1649
9999 mem: incrementing refcount of 1012: 201 -> 202
 107 run: jump-unless screen, 
9999 mem: location 1649 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1650
 107 run: reply height:number
9999 mem: location 1650 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1249
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1250
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1251
9999 mem: incrementing refcount of 1180: 32 -> 33
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1251 is 1180
9999 mem: storing 1180 in location 1252
9999 mem: incrementing refcount of 1180: 33 -> 34
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1649
9999 mem: incrementing refcount of 1180: 34 -> 35
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1649 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1650
9999 mem: incrementing refcount of 1194: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 35 -> 34
9999 mem: storing 1194 in location 1251
9999 mem: incrementing refcount of 1194: 29 -> 30
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1253
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1254
 106 run: column:number <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1256
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1257
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1223
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1258
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 1
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 202 -> 203
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 203 -> 202
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 202 -> 203
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1194
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1251 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 97
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 97
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 97
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 97
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 203 -> 204
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 105 -> 106
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 10
9999 mem: storing 1040 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 97
9999 mem: location 1304 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1303 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1649
9999 mem: incrementing refcount of 1194: 30 -> 31
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1649 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1650
9999 mem: incrementing refcount of 1203: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 31 -> 30
9999 mem: storing 1203 in location 1251
9999 mem: incrementing refcount of 1203: 29 -> 30
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1649
9999 mem: incrementing refcount of 1180: 34 -> 35
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1649 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1650
9999 mem: incrementing refcount of 1194: 30 -> 31
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 35 -> 34
9999 mem: storing 1194 in location 1252
9999 mem: incrementing refcount of 1194: 31 -> 32
 106 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1251 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 98
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 98
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 98
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 98
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 204 -> 205
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 106 -> 107
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 11
9999 mem: storing 1042 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 98
9999 mem: location 1304 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1303 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1649
9999 mem: incrementing refcount of 1203: 30 -> 31
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1649 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1650
9999 mem: incrementing refcount of 1207: 28 -> 29
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 31 -> 30
9999 mem: storing 1207 in location 1251
9999 mem: incrementing refcount of 1207: 29 -> 30
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1649
9999 mem: incrementing refcount of 1194: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1649 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1650
9999 mem: incrementing refcount of 1203: 30 -> 31
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 33 -> 32
9999 mem: storing 1203 in location 1252
9999 mem: incrementing refcount of 1203: 31 -> 32
 106 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1251 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 99
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 99
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 99
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 99
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 205 -> 206
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 107 -> 108
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 12
9999 mem: storing 1044 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 99
9999 mem: location 1304 is 1044
9999 mem: storing 99 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1303 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1207
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1649
9999 mem: incrementing refcount of 1207: 30 -> 31
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1649 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1650
9999 mem: incrementing refcount of 1211: 30 -> 31
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 31 -> 30
9999 mem: storing 1211 in location 1251
9999 mem: incrementing refcount of 1211: 31 -> 32
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1649
9999 mem: incrementing refcount of 1203: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1649 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1650
9999 mem: incrementing refcount of 1207: 30 -> 31
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 33 -> 32
9999 mem: storing 1207 in location 1252
9999 mem: incrementing refcount of 1207: 31 -> 32
 106 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 1
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1251 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 1
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 206 -> 207
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 107 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 207 -> 208
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 108 -> 109
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 13
9999 mem: storing 1046 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1303 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 208 -> 207
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 207 -> 208
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 208 -> 209
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 109 -> 110
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 14
9999 mem: storing 1048 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1303 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 209 -> 208
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 208 -> 209
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 209 -> 210
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 110 -> 111
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 15
9999 mem: storing 1050 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1050
9999 mem: storing 32 in location 1050
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1303 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1051
9999 mem: storing 7 in location 1051
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 210 -> 209
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 209 -> 210
 107 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 210 -> 211
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 111 -> 112
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 16
9999 mem: storing 1052 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1303 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 211 -> 210
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 210 -> 211
 107 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 211 -> 212
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 112 -> 113
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 17
9999 mem: storing 1054 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1303 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 212 -> 211
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 211 -> 212
 107 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 212 -> 213
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 113 -> 114
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 18
9999 mem: storing 1056 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1303 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 213 -> 212
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 212 -> 213
 107 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 213 -> 214
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 10
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 114 -> 115
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 19
9999 mem: storing 1058 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1303 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 214 -> 213
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 213 -> 214
 107 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1254 is 1
9999 mem: storing 2 in location 1254
 106 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 2
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 214 -> 215
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 215 -> 214
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 214 -> 215
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1649
9999 mem: incrementing refcount of 1211: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1649 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1650
9999 mem: incrementing refcount of 1215: 27 -> 28
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 33 -> 32
9999 mem: storing 1215 in location 1251
9999 mem: incrementing refcount of 1215: 28 -> 29
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1649
9999 mem: incrementing refcount of 1207: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1649 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1650
9999 mem: incrementing refcount of 1211: 32 -> 33
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 33 -> 32
9999 mem: storing 1211 in location 1252
9999 mem: incrementing refcount of 1211: 33 -> 34
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 0
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1251 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 100
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 100
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 100
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 100
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 215 -> 216
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 115 -> 116
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 20
9999 mem: storing 1060 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 100
9999 mem: location 1304 is 1060
9999 mem: storing 100 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1649
9999 mem: incrementing refcount of 1215: 29 -> 30
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1649 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1650
9999 mem: incrementing refcount of 1219: 30 -> 31
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 30 -> 29
9999 mem: storing 1219 in location 1251
9999 mem: incrementing refcount of 1219: 31 -> 32
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1649
9999 mem: incrementing refcount of 1211: 34 -> 35
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1649 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1650
9999 mem: incrementing refcount of 1215: 29 -> 30
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 35 -> 34
9999 mem: storing 1215 in location 1252
9999 mem: incrementing refcount of 1215: 30 -> 31
 106 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 1
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1252 is 1215
9999 mem: location 1258 is 1162
9999 mem: decrementing refcount of 1223: 28 -> 27
9999 mem: storing 1215 in location 1162
9999 mem: incrementing refcount of 1215: 31 -> 32
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1251 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 101
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 101
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 101
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 101
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 216 -> 217
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 116 -> 117
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 21
9999 mem: storing 1062 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 101
9999 mem: location 1304 is 1062
9999 mem: storing 101 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1649
9999 mem: incrementing refcount of 1219: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1649 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1650
9999 mem: incrementing refcount of 1223: 27 -> 28
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 33 -> 32
9999 mem: storing 1223 in location 1251
9999 mem: incrementing refcount of 1223: 28 -> 29
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1649
9999 mem: incrementing refcount of 1215: 32 -> 33
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1649 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1650
9999 mem: incrementing refcount of 1219: 32 -> 33
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 33 -> 32
9999 mem: storing 1219 in location 1252
9999 mem: incrementing refcount of 1219: 33 -> 34
 106 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1223
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 2
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1251 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 102
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 102
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 102
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 102
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 217 -> 218
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 117 -> 118
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 22
9999 mem: storing 1064 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 102
9999 mem: location 1304 is 1064
9999 mem: storing 102 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1649
9999 mem: incrementing refcount of 1223: 29 -> 30
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1649 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1650
9999 mem: incrementing refcount of 1227: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 30 -> 29
9999 mem: storing 1227 in location 1251
9999 mem: incrementing refcount of 1227: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1649
9999 mem: incrementing refcount of 1219: 34 -> 35
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1649 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1650
9999 mem: incrementing refcount of 1223: 29 -> 30
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 35 -> 34
9999 mem: storing 1223 in location 1252
9999 mem: incrementing refcount of 1223: 30 -> 31
 106 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1227
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 2
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1261
 106 run: jump-unless at-cursor?, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1251 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 10
9999 mem: storing 1 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 2
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 1 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1264
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1264 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1246 is 1012
9999 mem: location 1255 is 3
9999 mem: location 1250 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 218 -> 219
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 107 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 219 -> 220
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 118 -> 119
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 23
9999 mem: storing 1066 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1066
9999 mem: storing 32 in location 1066
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1067
9999 mem: storing 7 in location 1067
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 220 -> 219
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 219 -> 220
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 220 -> 221
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 119 -> 120
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 24
9999 mem: storing 1068 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1068
9999 mem: storing 32 in location 1068
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1303 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1069
9999 mem: storing 7 in location 1069
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 221 -> 220
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 220 -> 221
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 221 -> 222
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 120 -> 121
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 25
9999 mem: storing 1070 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1070
9999 mem: storing 32 in location 1070
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1303 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1071
9999 mem: storing 7 in location 1071
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 222 -> 221
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 221 -> 222
 107 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 222 -> 223
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 121 -> 122
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 26
9999 mem: storing 1072 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1072
9999 mem: storing 32 in location 1072
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1303 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1073
9999 mem: storing 7 in location 1073
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 223 -> 222
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 222 -> 223
 107 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 223 -> 224
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 122 -> 123
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 27
9999 mem: storing 1074 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1074
9999 mem: storing 32 in location 1074
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1303 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1075
9999 mem: storing 7 in location 1075
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 224 -> 223
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 223 -> 224
 107 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 224 -> 225
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 123 -> 124
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 28
9999 mem: storing 1076 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1076
9999 mem: storing 32 in location 1076
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1303 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1077
9999 mem: storing 7 in location 1077
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 225 -> 224
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 224 -> 225
 107 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 225 -> 226
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 108 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 108 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1298
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 124 -> 125
 108 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 29
9999 mem: storing 1078 in location 1303
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1304
 108 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1078
9999 mem: storing 32 in location 1078
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1303 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1305
 108 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1079
9999 mem: storing 7 in location 1079
 108 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 108 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 226 -> 225
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 225 -> 226
 107 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1254 is 2
9999 mem: storing 3 in location 1254
 106 run: column <- copy left
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1255
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1246 is 1012
9999 mem: location 1254 is 3
9999 mem: location 1255 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 226 -> 227
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 227 -> 226
9999 mem: storing 1012 in location 1246
9999 mem: incrementing refcount of 1012: 226 -> 227
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1649
9999 mem: incrementing refcount of 1227: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1227
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1649 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1650
9999 mem: incrementing refcount of 1231: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 25 -> 24
9999 mem: storing 1231 in location 1251
9999 mem: incrementing refcount of 1231: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1649
9999 mem: incrementing refcount of 1223: 31 -> 32
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1649 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1650
9999 mem: incrementing refcount of 1227: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 32 -> 31
9999 mem: storing 1227 in location 1252
9999 mem: incrementing refcount of 1227: 25 -> 26
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1231
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1251 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 103
9999 mem: storing 103 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 103
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 103
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 103
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 0
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 103
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 227 -> 228
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 103
  90 print-character: 103 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 125 -> 126
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 30
9999 mem: storing 1080 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 103
9999 mem: location 1304 is 1080
9999 mem: storing 103 in location 1080
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1080
9999 mem: location 1080 is 103
9999 mem: location 1081 is 7
9999 mem: location 1303 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1081
9999 mem: storing 7 in location 1081
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1649
9999 mem: incrementing refcount of 1231: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1231
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1649 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1650
9999 mem: incrementing refcount of 1235: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 25 -> 24
9999 mem: storing 1235 in location 1251
9999 mem: incrementing refcount of 1235: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1649
9999 mem: incrementing refcount of 1227: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1227
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1649 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1650
9999 mem: incrementing refcount of 1231: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 27 -> 26
9999 mem: storing 1231 in location 1252
9999 mem: incrementing refcount of 1231: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1255 is 0
9999 mem: storing 1 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1235
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1251 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 104
9999 mem: storing 104 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 104
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 104
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 104
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 1
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 104
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 228 -> 229
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 104
  90 print-character: 104 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 126 -> 127
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 104
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 31
9999 mem: storing 1082 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 104
9999 mem: location 1304 is 1082
9999 mem: storing 104 in location 1082
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1082
9999 mem: location 1082 is 104
9999 mem: location 1083 is 7
9999 mem: location 1303 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1083
9999 mem: storing 7 in location 1083
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1649
9999 mem: incrementing refcount of 1235: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1235
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1649 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1650
9999 mem: incrementing refcount of 1239: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 25 -> 24
9999 mem: storing 1239 in location 1251
9999 mem: incrementing refcount of 1239: 21 -> 22
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1649
9999 mem: incrementing refcount of 1231: 26 -> 27
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1231
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1649 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1650
9999 mem: incrementing refcount of 1235: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 27 -> 26
9999 mem: storing 1235 in location 1252
9999 mem: incrementing refcount of 1235: 25 -> 26
 106 run: column <- add column, 1
9999 mem: location 1255 is 1
9999 mem: storing 2 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 1239
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1254 is 3
9999 mem: location 1249 is 5
9999 mem: storing 0 in location 1259
 106 run: jump-if off-screen?, 
9999 mem: location 1259 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1251 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 105
9999 mem: storing 105 in location 1262
 106 run: color <- get-color color, c
9999 mem: location 1253 is 7
9999 mem: location 1262 is 105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1629
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1629 is 105
9999 mem: storing 0 in location 1631
 107 run: jump-unless starting-comment?, 
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1629 is 105
9999 mem: storing 0 in location 1634
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless color-is-red?, 
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1253
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1262 is 105
9999 mem: storing 0 in location 1263
 106 run: jump-unless newline?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1255 is 2
9999 mem: location 1250 is 9
9999 mem: storing 0 in location 1265
 106 run: jump-unless at-right?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1246 is 1012
9999 mem: location 1262 is 105
9999 mem: location 1253 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 229 -> 230
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 105
  90 print-character: 105 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 127 -> 128
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 105
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 32
9999 mem: storing 1084 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 105
9999 mem: location 1304 is 1084
9999 mem: storing 105 in location 1084
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1084
9999 mem: location 1084 is 105
9999 mem: location 1085 is 7
9999 mem: location 1303 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1085
9999 mem: storing 7 in location 1085
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1251 is 1239
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1649
9999 mem: incrementing refcount of 1239: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1239
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1649 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1650
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1239: 23 -> 22
9999 mem: storing 0 in location 1251
 106 run: prev <- next_2 prev
9999 mem: location 1252 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1649
9999 mem: incrementing refcount of 1235: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1649 is 1235
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1649 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1649 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1650
9999 mem: incrementing refcount of 1239: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1650 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 27 -> 26
9999 mem: storing 1239 in location 1252
9999 mem: incrementing refcount of 1239: 23 -> 24
 106 run: column <- add column, 1
9999 mem: location 1255 is 2
9999 mem: storing 3 in location 1255
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1267
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1251 is 0
9999 mem: location 1267 is 1161
9999 mem: storing 0 in location 1161
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1260
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1255 is 3
9999 mem: location 1257 is 1167
9999 mem: location 1167 is 1
9999 mem: storing 0 in location 1268
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1260 is 0
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1269
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1254 is 3
9999 mem: location 1256 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 0 in location 1270
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 106 run: jump-unless before-cursor?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1247 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1272
 106 run: *bottom <- copy row
9999 mem: location 1254 is 3
9999 mem: location 1272 is 1165
9999 mem: storing 3 in location 1165
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1254 is 3
9999 mem: location 1255 is 3
9999 mem: location 1246 is 1012
9999 mem: location 1247 is 1158
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 3
9999 mem: storing 3 in location 1178
9999 mem: storing 3 in location 1179
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1174 is 1012
9999 mem: location 1179 is 3
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 230 -> 231
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 106 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 231 -> 232
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 128 -> 129
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 33
9999 mem: storing 1086 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1303 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1086
9999 mem: storing 32 in location 1086
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1303 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1087
9999 mem: storing 7 in location 1087
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 232 -> 231
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 231 -> 232
 106 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 232 -> 233
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 129 -> 130
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 34
9999 mem: storing 1088 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1303 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1088
9999 mem: storing 32 in location 1088
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1303 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1089
9999 mem: storing 7 in location 1089
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 233 -> 232
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 232 -> 233
 106 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 233 -> 234
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 130 -> 131
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 35
9999 mem: storing 1090 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1303 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1090
9999 mem: storing 32 in location 1090
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1303 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1091
9999 mem: storing 7 in location 1091
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 234 -> 233
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 233 -> 234
 106 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 234 -> 235
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 131 -> 132
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 36
9999 mem: storing 1092 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1303 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1092
9999 mem: storing 32 in location 1092
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1303 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1093
9999 mem: storing 7 in location 1093
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 235 -> 234
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 234 -> 235
 106 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 235 -> 236
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 132 -> 133
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 37
9999 mem: storing 1094 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1303 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1094
9999 mem: storing 32 in location 1094
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1303 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1095
9999 mem: storing 7 in location 1095
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 236 -> 235
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 235 -> 236
 106 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 236 -> 237
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 133 -> 134
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 38
9999 mem: storing 1096 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1303 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1096
9999 mem: storing 32 in location 1096
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1303 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1097
9999 mem: storing 7 in location 1097
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 237 -> 236
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 236 -> 237
 106 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 237 -> 238
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1002/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1290 is 10
9999 mem: storing 30 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 30
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 134 -> 135
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 39
9999 mem: storing 1098 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1303 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 32
9999 mem: location 1304 is 1098
9999 mem: storing 32 in location 1098
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1303 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1099
9999 mem: storing 7 in location 1099
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 238 -> 237
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 237 -> 238
 106 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 106 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1174 is 1012
9999 mem: location 1178 is 4
9999 mem: location 1176 is 0
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 238 -> 239
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1312
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1313
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1314
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1315
9999 mem: storing 1 in location 1316
 106 run: jump-if style-found?, 
9999 mem: location 1316 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
 106 run: jump-if color-found?, 
9999 mem: location 1318 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1317
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 106 run: jump-if bg-color-found?, 
9999 mem: location 1320 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1319
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1311 is 1012
9999 mem: location 1312 is 4
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 239 -> 240
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 240 -> 239
9999 mem: storing 1012 in location 1311
9999 mem: incrementing refcount of 1012: 239 -> 240
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 0
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 240 -> 241
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 135 -> 136
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 40
9999 mem: storing 1100 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1303 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1100
9999 mem: storing 9480 in location 1100
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1100
9999 mem: location 1100 is 9480
9999 mem: location 1101 is 245
9999 mem: location 1303 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1101
9999 mem: storing 245 in location 1101
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 0
9999 mem: storing 1 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 1
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 241 -> 242
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 136 -> 137
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 41
9999 mem: storing 1102 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1303 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1102
9999 mem: storing 9480 in location 1102
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1102
9999 mem: location 1102 is 9480
9999 mem: location 1103 is 245
9999 mem: location 1303 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1103
9999 mem: storing 245 in location 1103
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 1
9999 mem: storing 2 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 2
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 242 -> 243
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 137 -> 138
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 42
9999 mem: storing 1104 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1303 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1104
9999 mem: storing 9480 in location 1104
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1104
9999 mem: location 1104 is 9480
9999 mem: location 1105 is 245
9999 mem: location 1303 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1105
9999 mem: storing 245 in location 1105
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 2
9999 mem: storing 3 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 3
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 243 -> 244
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 138 -> 139
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 43
9999 mem: storing 1106 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1303 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1106
9999 mem: storing 9480 in location 1106
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1106
9999 mem: location 1106 is 9480
9999 mem: location 1107 is 245
9999 mem: location 1303 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1107
9999 mem: storing 245 in location 1107
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 3
9999 mem: storing 4 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 4
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 244 -> 245
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 139 -> 140
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 44
9999 mem: storing 1108 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1303 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1108
9999 mem: storing 9480 in location 1108
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1108
9999 mem: location 1108 is 9480
9999 mem: location 1109 is 245
9999 mem: location 1303 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1109
9999 mem: storing 245 in location 1109
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1294 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 4
9999 mem: storing 5 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 5
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 245 -> 246
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 140 -> 141
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 45
9999 mem: storing 1110 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1303 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1110
9999 mem: storing 9480 in location 1110
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1110
9999 mem: location 1110 is 9480
9999 mem: location 1111 is 245
9999 mem: location 1303 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1111
9999 mem: storing 245 in location 1111
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1294 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 5
9999 mem: storing 6 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 6
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 246 -> 247
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 141 -> 142
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 46
9999 mem: storing 1112 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1303 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1112
9999 mem: storing 9480 in location 1112
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1112
9999 mem: location 1112 is 9480
9999 mem: location 1113 is 245
9999 mem: location 1303 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1113
9999 mem: storing 245 in location 1113
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1294 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 6
9999 mem: storing 7 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 7
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 247 -> 248
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 142 -> 143
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 47
9999 mem: storing 1114 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1303 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1114
9999 mem: storing 9480 in location 1114
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1114
9999 mem: location 1114 is 9480
9999 mem: location 1115 is 245
9999 mem: location 1303 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1115
9999 mem: storing 245 in location 1115
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1294 is 1016
9999 mem: storing 8 in location 1016
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1002/scenario_editor-can-undo-multiple-arrows-in-the-same-direction
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 7
9999 mem: storing 8 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 8
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 248 -> 249
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 143 -> 144
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 48
9999 mem: storing 1116 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 245
9999 mem: location 1303 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1116
9999 mem: storing 9480 in location 1116
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1116
9999 mem: location 1116 is 9480
9999 mem: location 1117 is 245
9999 mem: location 1303 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1117
9999 mem: storing 245 in location 1117
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1294 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 8
9999 mem: storing 9 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 9
9999 mem: location 1314 is 9
9999 mem: storing 1 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1311 is 1012
9999 mem: location 1315 is 9480
9999 mem: location 1317 is 245
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 249 -> 250
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1286
9999 mem: storing 1 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1290 is 10
9999 mem: storing 40 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 40
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 144 -> 145
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 49
9999 mem: storing 1118 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 245
9999 mem: location 1303 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 9480
9999 mem: location 1304 is 1118
9999 mem: storing 9480 in location 1118
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1118
9999 mem: location 1118 is 9480
9999 mem: location 1119 is 245
9999 mem: location 1303 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 245
9999 mem: location 1305 is 1119
9999 mem: storing 245 in location 1119
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1306 is 9
9999 mem: storing 1 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1313 is 9
9999 mem: storing 10 in location 1313
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1313 is 10
9999 mem: location 1314 is 9
9999 mem: storing 0 in location 1321
 106 run: jump-unless continue?, 
9999 mem: location 1321 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1311 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1174 is 1012
9999 mem: location 1178 is 5
9999 mem: location 1176 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 250 -> 251
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1277
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1279
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1280
 106 run: jump-if screen, 
9999 mem: location 1276 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1276 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1278 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 251 -> 252
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1326
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
 107 run: jump-unless screen, 
9999 mem: location 1325 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1328
 107 run: *row <- copy new-row
9999 mem: location 1326 is 5
9999 mem: location 1328 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1329
 107 run: *column <- copy new-column
9999 mem: location 1327 is 0
9999 mem: location 1329 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1325 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 252 -> 251
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 251 -> 252
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1276 is 1012
9999 mem: location 1278 is 0
9999 mem: location 1280 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 252 -> 253
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1189
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1190
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
 107 run: jump-if bg-color-found?, 
9999 mem: location 1192 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1191
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 253 -> 254
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 254 -> 253
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 253 -> 254
 107 run: column <- add column, 1
9999 mem: location 1188 is 0
9999 mem: storing 1 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 254 -> 255
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 255 -> 254
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 254 -> 255
 107 run: column <- add column, 1
9999 mem: location 1188 is 1
9999 mem: storing 2 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 255 -> 256
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 256 -> 255
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 255 -> 256
 107 run: column <- add column, 1
9999 mem: location 1188 is 2
9999 mem: storing 3 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 3
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 256 -> 257
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 257 -> 256
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 256 -> 257
 107 run: column <- add column, 1
9999 mem: location 1188 is 3
9999 mem: storing 4 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 4
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 257 -> 258
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 258 -> 257
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 257 -> 258
 107 run: column <- add column, 1
9999 mem: location 1188 is 4
9999 mem: storing 5 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 5
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 258 -> 259
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 259 -> 258
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 258 -> 259
 107 run: column <- add column, 1
9999 mem: location 1188 is 5
9999 mem: storing 6 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 6
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 259 -> 260
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 260 -> 259
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 259 -> 260
 107 run: column <- add column, 1
9999 mem: location 1188 is 6
9999 mem: storing 7 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 7
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 260 -> 261
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 261 -> 260
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 260 -> 261
 107 run: column <- add column, 1
9999 mem: location 1188 is 7
9999 mem: storing 8 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 8
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 261 -> 262
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 262 -> 261
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 261 -> 262
 107 run: column <- add column, 1
9999 mem: location 1188 is 8
9999 mem: storing 9 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 9
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1187 is 1012
9999 mem: location 1190 is 32
9999 mem: location 1191 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 262 -> 263
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1285
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1286
9999 mem: storing 1 in location 1287
 108 run: jump-if color-found?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 1 in location 1289
 108 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1285 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1291 is 5
9999 mem: storing 0 in location 1293
 108 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 263 -> 262
9999 mem: storing 1012 in location 1187
9999 mem: incrementing refcount of 1012: 262 -> 263
 107 run: column <- add column, 1
9999 mem: location 1188 is 9
9999 mem: storing 10 in location 1188
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1188 is 10
9999 mem: location 1189 is 9
9999 mem: storing 1 in location 1193
 107 run: jump-if done?, 
9999 mem: location 1193 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1187 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1276 is 1012
9999 mem: location 1277 is 5
9999 mem: location 1279 is 0
9999 mem: location 1280 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 263 -> 264
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1334
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1335
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1336
 107 run: row <- add row, 1
9999 mem: location 1334 is 5
9999 mem: storing 6 in location 1334
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1333 is 1012
9999 mem: location 1334 is 6
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1325
9999 mem: incrementing refcount of 1012: 264 -> 265
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1326
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1327
 108 run: jump-unless screen, 
9999 mem: location 1325 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1328
 108 run: *row <- copy new-row
9999 mem: location 1326 is 6
9999 mem: location 1328 is 1015
9999 mem: storing 6 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1325 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1329
 108 run: *column <- copy new-column
9999 mem: location 1327 is 0
9999 mem: location 1329 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1325 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 265 -> 264
9999 mem: storing 1012 in location 1333
9999 mem: incrementing refcount of 1012: 264 -> 265
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1333 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1649
9999 mem: incrementing refcount of 1012: 265 -> 266
 108 run: jump-unless screen, 
9999 mem: location 1649 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1649 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1650
 108 run: reply height:number
9999 mem: location 1650 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1337
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1334 is 6
9999 mem: location 1337 is 5
9999 mem: storing 1 in location 1338
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1338 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1333 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1174 is 1012
9999 mem: location 1175 is 1158
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 266 -> 265
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 265 -> 266
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1366
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 1365 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1367
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1363 is 1012
9999 mem: location 1366 is 2
9999 mem: location 1367 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 266 -> 267
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 1
9999 mem: location 1280 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 267 -> 266
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 266 -> 267
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1364 is 1643
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1643 in location 1311
9999 mem: incrementing refcount of 1643: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1311 is 1643
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9999 mem: location 1644 is 1
9999 mem: location 1645 is 1637
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9998 run: address to copy is 1644
9999 mem: storing 1644 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9999 mem: location 1644 is 1
9999 mem: location 1645 is 1637
9999 mem: location 1311 is 1643
9999 mem: skipping refcount at 1643
9998 run: address to copy is 1645
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1645 is 1637
9999 mem: storing 1637 in location 1313
9999 mem: incrementing refcount of 1637: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1637
9999 mem: skipping refcount at 1637
9999 mem: storing 1 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1644
9999 mem: location 1644 is 1
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1646 in location 1316
9999 mem: incrementing refcount of 1646: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1316 is 1646
9999 mem: skipping refcount at 1646
9999 mem: location 1647 is 0
9999 mem: location 1648 is 0
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
9999 mem: location 1311 is 1643
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1643
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: decrementing refcount of 1643: 3 -> 2
9999 mem: storing 1643 in location 1364
9999 mem: incrementing refcount of 1643: 2 -> 3
9999 mem: storing 1 in location 1372
9999 mem: storing 1 in location 1373
 104 run: jump-unless found?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1373 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1363 is 1012
9999 mem: location 1364 is 1643
9999 mem: location 1365 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1215
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1440
9999 mem: location 1170 is 1651
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
