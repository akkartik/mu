 102 run: assume-console [
    type [abc]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9992 load: after rewriting: type [abc]
9999 mem: storing 'type' event starting at 1286
9999 mem: storing 'text' tag at 1286
9999 mem: storing character 97 at 1287
9999 mem: storing 'text' tag at 1290
9999 mem: storing character 98 at 1291
9999 mem: storing 'text' tag at 1294
9999 mem: storing character 99 at 1295
9999 mem: storing console in 1298
9999 mem: storing console data in 1300
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1298
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1301
9999 mem: storing 14 in location 1302
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 42 -> 43
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1306
9999 mem: incrementing refcount of 1147: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 43 -> 44
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 43 -> 44
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1256
9999 mem: incrementing refcount of 1298: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1256 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 3 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1259 is 3
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 0
9998 run: address to copy is 1286
9998 run: its type is event
9999 mem: location 1286 is 0
9999 mem: location 1287 is 97
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 97 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1257 is 1299
9999 mem: storing 1 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 97
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1309
9999 mem: storing 97 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 2 -> 1
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 1 -> 2
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 0
9999 mem: location 1310 is 97
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1147
9999 mem: location 1309 is 0
9999 mem: location 1310 is 97
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1317
9999 mem: storing 85 in location 1318
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 44 -> 45
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 7 -> 8
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1322
9999 mem: storing 97 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1326
 105 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 45 -> 46
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1327
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 46 -> 47
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1328
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1329
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 4
9999 mem: storing 4 in location 1330
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1331
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1332
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1333
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1332 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1334
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1333 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1335
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 0
9999 mem: location 1323 is 97
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1336
 105 run: jump-unless c, 
9999 mem: location 1336 is 1323
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-inserts-characters-into-empty-editor
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1337
 105 run: jump-unless redo?, 
9999 mem: location 1337 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1348
 105 run: jump-unless undo?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1353
 105 run: jump-unless page-up?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1369
 105 run: jump-unless page-down?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1370
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1375
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1376
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1377
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1378
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1382
 105 run: jump-unless tab?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 0 in location 1386
 105 run: jump-unless newline?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: storing 1 in location 1389
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1326
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1389 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1371
9999 mem: incrementing refcount of 1169: 8 -> 9
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1331 is 1151
9999 mem: location 1151 is 1169
9999 mem: storing 1169 in location 1383
9999 mem: incrementing refcount of 1169: 9 -> 10
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1321 is 1147
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 97
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1404
9999 mem: storing 31 in location 1405
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1407
9999 mem: incrementing refcount of 1147: 8 -> 9
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1408
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1409
9999 mem: incrementing refcount of 1012: 47 -> 48
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1169
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1410
 106 run: insert_2 c, *before-cursor
9999 mem: location 1408 is 97
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1163
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1164
9999 mem: incrementing refcount of 1169: 10 -> 11
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1437
9999 mem: storing 1437 in location 1165
9999 mem: incrementing refcount of 1437: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 0
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: location 1165 is 1437
9999 mem: skipping refcount at 1437
9998 run: address to copy is 1438
9999 mem: storing 1438 in location 1166
 107 run: *val <- copy x
9999 mem: location 1163 is 97
9999 mem: location 1166 is 1438
9999 mem: storing 97 in location 1438
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1167
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1164 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1168
 107 run: *y <- copy new-node
9999 mem: location 1165 is 1437
9999 mem: location 1168 is 1171
9999 mem: storing 1437 in location 1171
9999 mem: incrementing refcount of 1437: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: location 1165 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9999 mem: storing 1440 in location 1168
 107 run: *y <- copy in
9999 mem: location 1164 is 1169
9999 mem: location 1168 is 1440
9999 mem: storing 1169 in location 1440
9999 mem: incrementing refcount of 1169: 11 -> 12
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1169
9999 mem: location 1165 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1439
9999 mem: storing 1439 in location 1168
 107 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1439
9999 mem: storing 0 in location 1439
 107 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1169
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1437
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1437
9999 mem: storing 1437 in location 1217
9999 mem: incrementing refcount of 1437: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1437
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1437
9999 mem: location 1410 is 1151
9999 mem: decrementing refcount of 1169: 13 -> 12
9999 mem: storing 1437 in location 1151
9999 mem: incrementing refcount of 1437: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1411
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1412
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1413
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 4
9999 mem: storing 4 in location 1414
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1411 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1415
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1416
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1409 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 48 -> 49
 107 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 107 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1417
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1409 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 49 -> 50
 107 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 107 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1418
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1414 is 4
9999 mem: storing 3 in location 1419
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1419 is 3
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-wrap?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1412 is 1156
9999 mem: storing 1 in location 1156
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1437
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1216
9999 mem: incrementing refcount of 1437: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1437
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1169
9999 mem: location 1216 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1439
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1439 is 0
9999 mem: storing 0 in location 1217
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1427
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1427 is 0
9999 mem: storing 1 in location 1428
 106 run: jump-unless at-end?, 
9999 mem: location 1428 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1418 is 5
9999 mem: storing 4 in location 1429
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1415 is 1
9999 mem: location 1429 is 4
9999 mem: storing 0 in location 1430
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1416 is 0
9999 mem: location 1414 is 4
9999 mem: storing 0 in location 1431
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: storing 0 in location 1432
 106 run: jump-if overflow?, 
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1409 is 1012
9999 mem: location 1415 is 1
9999 mem: location 1416 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 50 -> 51
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 0
9999 mem: location 1225 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1409 is 1012
9999 mem: location 1408 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 51 -> 52
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 97
  90 print-character: 97 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 22 -> 23
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 97
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 10
9999 mem: storing 1040 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 97
9999 mem: location 1249 is 1040
9999 mem: storing 97 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1248 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1239 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1426
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1407 is 1147
9999 mem: location 1409 is 1012
9999 mem: location 1426 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 9 -> 8
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 8 -> 9
9999 mem: decrementing refcount of 1012: 52 -> 51
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 51 -> 52
9999 mem: storing 0 in location 1326
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1373
9999 mem: incrementing refcount of 1169: 12 -> 13
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1340
 105 run: jump-unless *undo, 
9999 mem: location 1340 is 1158
9999 mem: location 1158 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1383 is 1169
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1216
9999 mem: incrementing refcount of 1169: 13 -> 14
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1169
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 167
9999 mem: location 1171 is 1437
9999 mem: location 1172 is 0
9999 mem: location 1216 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 1437
9999 mem: storing 1437 in location 1217
9999 mem: incrementing refcount of 1437: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1437
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1437
9999 mem: storing 1437 in location 1347
9999 mem: incrementing refcount of 1437: 6 -> 7
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1347 is 1437
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1216
9999 mem: incrementing refcount of 1437: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1437
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1169
9999 mem: location 1216 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1439
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1439 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1385
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1339
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1334 is 1
9999 mem: location 1335 is 0
9999 mem: location 1371 is 1169
9999 mem: location 1332 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1333 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1373 is 1169
9999 mem: location 1347 is 1437
9999 mem: location 1385 is 0
9999 mem: location 1339 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1339 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1169 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1169 in location 1007
9999 mem: storing 1437 in location 1008
9999 mem: storing 0 in location 1009
9999 mem: storing 1 in location 1010
 105 run: editor <- add-operation editor, op
9999 mem: location 1321 is 1147
9999 mem: location 1339 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1441
9999 mem: storing 5 in location 1442
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1444
9999 mem: incrementing refcount of 1147: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1445
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1444 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1444 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1446
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1445 is 1000
9999 mem: location 1446 is 1158
9999 mem: location 1158 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1221
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1222
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1448
9999 mem: storing 1448 in location 1223
9999 mem: incrementing refcount of 1448: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1223 is 1448
9999 mem: skipping refcount at 1448
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1223 is 1448
9999 mem: skipping refcount at 1448
9998 run: address to copy is 1449
9999 mem: storing 1449 in location 1224
 107 run: *val <- copy x
9999 mem: location 1221 is 1000
9999 mem: location 1224 is 1449
9999 mem: storing 1000 in location 1449
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1223 is 1448
9999 mem: skipping refcount at 1448
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1449 is 1000
9999 mem: location 1450 is 0
9999 mem: location 1223 is 1448
9999 mem: skipping refcount at 1448
9999 type: type deduced to be address$
9998 run: address to copy is 1450
9999 mem: storing 1450 in location 1225
 107 run: *next <- copy in
9999 mem: location 1222 is 0
9999 mem: location 1225 is 1450
9999 mem: storing 0 in location 1450
 107 run: reply result
9999 mem: location 1223 is 1448
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1448
9999 mem: location 1446 is 1158
9999 mem: storing 1448 in location 1158
9999 mem: incrementing refcount of 1448: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1444 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1444 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1447
 106 run: *redo <- copy 0
9999 mem: location 1447 is 1159
9999 mem: storing 0 in location 1159
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1444 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 9 -> 10
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1320 is 1012
9999 mem: location 1321 is 1147
9999 mem: location 1326 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 52 -> 51
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 51 -> 52
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1306
9999 mem: incrementing refcount of 1147: 9 -> 10
9999 mem: storing 0 in location 1316
 104 run: jump-unless go-render?, 
9999 mem: location 1316 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 52 -> 53
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 52 -> 53
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1256
9999 mem: incrementing refcount of 1298: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1256 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 1
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 1
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 3 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 1
9999 mem: location 1259 is 3
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 1
9998 run: address to copy is 1290
9998 run: its type is event
9999 mem: location 1290 is 0
9999 mem: location 1291 is 98
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 98 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 1
9999 mem: location 1257 is 1299
9999 mem: storing 2 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 98
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1309
9999 mem: storing 98 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 3 -> 2
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 2 -> 3
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 0
9999 mem: location 1310 is 98
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1147
9999 mem: location 1309 is 0
9999 mem: location 1310 is 98
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 53 -> 54
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1322
9999 mem: storing 98 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1326
 105 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1327
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1328
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1329
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 4
9999 mem: storing 4 in location 1330
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1331
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1332
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1333
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1332 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1334
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1333 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1335
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 0
9999 mem: location 1323 is 98
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1336
 105 run: jump-unless c, 
9999 mem: location 1336 is 1323
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1337
 105 run: jump-unless redo?, 
9999 mem: location 1337 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1348
 105 run: jump-unless undo?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1353
 105 run: jump-unless page-up?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1369
 105 run: jump-unless page-down?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1370
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1375
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1376
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1377
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1378
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1382
 105 run: jump-unless tab?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 0 in location 1386
 105 run: jump-unless newline?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: storing 1 in location 1389
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1326
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1389 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1371
9999 mem: incrementing refcount of 1169: 14 -> 15
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1331 is 1151
9999 mem: location 1151 is 1437
9999 mem: storing 1437 in location 1383
9999 mem: incrementing refcount of 1437: 8 -> 9
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1321 is 1147
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 98
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1407
9999 mem: incrementing refcount of 1147: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1408
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1409
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1437
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1410
 106 run: insert_2 c, *before-cursor
9999 mem: location 1408 is 98
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1437
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1163
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1164
9999 mem: incrementing refcount of 1437: 9 -> 10
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1451
9999 mem: storing 1451 in location 1165
9999 mem: incrementing refcount of 1451: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 0
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1165 is 1451
9999 mem: skipping refcount at 1451
9998 run: address to copy is 1452
9999 mem: storing 1452 in location 1166
 107 run: *val <- copy x
9999 mem: location 1163 is 98
9999 mem: location 1166 is 1452
9999 mem: storing 98 in location 1452
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1169
9999 mem: location 1164 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1439
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1439 is 0
9999 mem: storing 0 in location 1167
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1169
9999 mem: location 1164 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1439
9999 mem: storing 1439 in location 1168
 107 run: *y <- copy new-node
9999 mem: location 1165 is 1451
9999 mem: location 1168 is 1439
9999 mem: storing 1451 in location 1439
9999 mem: incrementing refcount of 1451: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1165 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1454
9999 mem: storing 1454 in location 1168
 107 run: *y <- copy in
9999 mem: location 1164 is 1437
9999 mem: location 1168 is 1454
9999 mem: storing 1437 in location 1454
9999 mem: incrementing refcount of 1437: 10 -> 11
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1437
9999 mem: location 1165 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1453
9999 mem: storing 1453 in location 1168
 107 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1453
9999 mem: storing 0 in location 1453
 107 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1437
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1437
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1437 in location 1216
9999 mem: incrementing refcount of 1437: 11 -> 12
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1437
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1437
9999 mem: skipping refcount at 1437
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1438 is 97
9999 mem: location 1439 is 1451
9999 mem: location 1440 is 1169
9999 mem: location 1216 is 1437
9999 mem: skipping refcount at 1437
9999 type: type deduced to be character$
9998 run: address to copy is 1439
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1439 is 1451
9999 mem: storing 1451 in location 1217
9999 mem: incrementing refcount of 1451: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1451
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1451
9999 mem: location 1410 is 1151
9999 mem: decrementing refcount of 1437: 12 -> 11
9999 mem: storing 1451 in location 1151
9999 mem: incrementing refcount of 1451: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1411
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1412
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1413
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 4
9999 mem: storing 4 in location 1414
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1411 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1415
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1416
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1409 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 57 -> 58
 107 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 107 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1417
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1409 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 58 -> 59
 107 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 107 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1418
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1414 is 4
9999 mem: storing 3 in location 1419
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1419 is 3
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-wrap?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1412 is 1156
9999 mem: storing 2 in location 1156
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1451
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1216
9999 mem: incrementing refcount of 1451: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1451
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1437
9999 mem: location 1216 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1217
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1427
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1427 is 0
9999 mem: storing 1 in location 1428
 106 run: jump-unless at-end?, 
9999 mem: location 1428 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1418 is 5
9999 mem: storing 4 in location 1429
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1415 is 1
9999 mem: location 1429 is 4
9999 mem: storing 0 in location 1430
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1416 is 1
9999 mem: location 1414 is 4
9999 mem: storing 0 in location 1431
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: storing 0 in location 1432
 106 run: jump-if overflow?, 
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1409 is 1012
9999 mem: location 1415 is 1
9999 mem: location 1416 is 1
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 1
9999 mem: location 1225 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1409 is 1012
9999 mem: location 1408 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 23 -> 24
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 98
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 11
9999 mem: storing 1042 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 98
9999 mem: location 1249 is 1042
9999 mem: storing 98 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1248 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1239 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1426
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1407 is 1147
9999 mem: location 1409 is 1012
9999 mem: location 1426 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 12 -> 11
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 11 -> 12
9999 mem: decrementing refcount of 1012: 61 -> 60
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 60 -> 61
9999 mem: storing 0 in location 1326
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1373
9999 mem: incrementing refcount of 1169: 15 -> 16
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1340
 105 run: jump-unless *undo, 
9999 mem: location 1340 is 1158
9999 mem: location 1158 is 1448
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1340 is 1158
9999 mem: location 1158 is 1448
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1448 in location 1216
9999 mem: incrementing refcount of 1448: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1216 is 1448
9999 mem: skipping refcount at 1448
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1449 is 1000
9999 mem: location 1450 is 0
9999 mem: location 1216 is 1448
9999 mem: skipping refcount at 1448
9998 run: address to copy is 1449
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1449 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1339
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1339 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1339 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1346
 105 run: jump-unless typing, 
9999 mem: location 1346 is 1002
9998 run: jump-unless fell through
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-inserts-characters-into-empty-editor
 105 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1363
 105 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1363 is 1
9998 run: jump-unless fell through
 105 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1384
 105 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1331 is 1151
9999 mem: location 1151 is 1451
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1216
9999 mem: incrementing refcount of 1451: 5 -> 6
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1451
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1437
9999 mem: location 1216 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1384 is 1009
9999 mem: storing 0 in location 1009
 105 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1365
 105 run: *after-row <- copy *cursor-row
9999 mem: location 1332 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1365 is 1005
9999 mem: storing 1 in location 1005
 105 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1366
 105 run: *after-column <- copy *cursor-column
9999 mem: location 1333 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1366 is 1006
9999 mem: storing 2 in location 1006
 105 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1367
 105 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1367 is 1007
9999 mem: decrementing refcount of 1169: 16 -> 15
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 15 -> 16
 105 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1320 is 1012
9999 mem: location 1321 is 1147
9999 mem: location 1326 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 61 -> 60
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 60 -> 61
9999 mem: decrementing refcount of 1147: 12 -> 11
9999 mem: storing 1147 in location 1306
9999 mem: incrementing refcount of 1147: 11 -> 12
9999 mem: storing 0 in location 1316
 104 run: jump-unless go-render?, 
9999 mem: location 1316 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 61 -> 62
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 62 -> 61
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 61 -> 62
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1256
9999 mem: incrementing refcount of 1298: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1256 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 3 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 2
9999 mem: location 1259 is 3
9999 mem: storing 0 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9998 run: base address is 1285
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 2
9998 run: address to copy is 1294
9998 run: its type is event
9999 mem: location 1294 is 0
9999 mem: location 1295 is 99
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1262
9999 mem: storing 99 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 2
9999 mem: location 1257 is 1299
9999 mem: storing 3 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1262 is 0
9999 mem: location 1263 is 99
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1256 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1309
9999 mem: storing 99 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 4 -> 3
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 3 -> 4
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 0
9999 mem: location 1310 is 99
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1147
9999 mem: location 1309 is 0
9999 mem: location 1310 is 99
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 62 -> 63
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 12 -> 13
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1322
9999 mem: storing 99 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1326
 105 run: jump-if editor, 1:offset
9999 mem: location 1321 is 1147
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 63 -> 64
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 106 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1327
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 64 -> 65
 106 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 106 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1328
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1329
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 4
9999 mem: storing 4 in location 1330
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1331
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1332
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1333
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1332 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1334
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1333 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1335
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1322 is 0
9999 mem: location 1323 is 99
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1323 in location 1336
 105 run: jump-unless c, 
9999 mem: location 1336 is 1323
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1337
 105 run: jump-unless redo?, 
9999 mem: location 1337 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1348
 105 run: jump-unless undo?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1353
 105 run: jump-unless page-up?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1369
 105 run: jump-unless page-down?, 
9999 mem: location 1369 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1370
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1375
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1376
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1377
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1378
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1382
 105 run: jump-unless tab?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 0 in location 1386
 105 run: jump-unless newline?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: storing 1 in location 1389
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1326
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1389 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1371
9999 mem: incrementing refcount of 1169: 16 -> 17
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1331 is 1151
9999 mem: location 1151 is 1451
9999 mem: storing 1451 in location 1383
9999 mem: incrementing refcount of 1451: 6 -> 7
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1321 is 1147
9999 mem: location 1336 is 1323
9999 mem: location 1323 is 99
9999 mem: location 1320 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1407
9999 mem: incrementing refcount of 1147: 13 -> 14
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1408
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1409
9999 mem: incrementing refcount of 1012: 65 -> 66
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1451
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1410
 106 run: insert_2 c, *before-cursor
9999 mem: location 1408 is 99
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1451
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1163
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1164
9999 mem: incrementing refcount of 1451: 7 -> 8
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1455
9999 mem: storing 1455 in location 1165
9999 mem: incrementing refcount of 1455: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1165 is 1455
9999 mem: skipping refcount at 1455
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1165 is 1455
9999 mem: skipping refcount at 1455
9998 run: address to copy is 1456
9999 mem: storing 1456 in location 1166
 107 run: *val <- copy x
9999 mem: location 1163 is 99
9999 mem: location 1166 is 1456
9999 mem: storing 99 in location 1456
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1164 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1437
9999 mem: location 1164 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1453 is 0
9999 mem: storing 0 in location 1167
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1164 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 0
9999 mem: location 1454 is 1437
9999 mem: location 1164 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1453
9999 mem: storing 1453 in location 1168
 107 run: *y <- copy new-node
9999 mem: location 1165 is 1455
9999 mem: location 1168 is 1453
9999 mem: storing 1455 in location 1453
9999 mem: incrementing refcount of 1455: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1165 is 1455
9999 mem: skipping refcount at 1455
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1456 is 99
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1165 is 1455
9999 mem: skipping refcount at 1455
9999 type: type deduced to be character$
9998 run: address to copy is 1458
9999 mem: storing 1458 in location 1168
 107 run: *y <- copy in
9999 mem: location 1164 is 1451
9999 mem: location 1168 is 1458
9999 mem: storing 1451 in location 1458
9999 mem: incrementing refcount of 1451: 8 -> 9
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1165 is 1455
9999 mem: skipping refcount at 1455
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1456 is 99
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1451
9999 mem: location 1165 is 1455
9999 mem: skipping refcount at 1455
9999 type: type deduced to be character$
9998 run: address to copy is 1457
9999 mem: storing 1457 in location 1168
 107 run: *y <- copy next-node
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1457
9999 mem: storing 0 in location 1457
 107 run: jump-if next-node, 1:offset
9999 mem: location 1167 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1164 is 1451
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1451
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1216
9999 mem: incrementing refcount of 1451: 9 -> 10
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1451
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1451
9999 mem: skipping refcount at 1451
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1452 is 98
9999 mem: location 1453 is 1455
9999 mem: location 1454 is 1437
9999 mem: location 1216 is 1451
9999 mem: skipping refcount at 1451
9999 type: type deduced to be character$
9998 run: address to copy is 1453
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1453 is 1455
9999 mem: storing 1455 in location 1217
9999 mem: incrementing refcount of 1455: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 1455
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1455
9999 mem: location 1410 is 1151
9999 mem: decrementing refcount of 1451: 10 -> 9
9999 mem: storing 1455 in location 1151
9999 mem: incrementing refcount of 1455: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1411
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1412
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is number
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1413
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1407 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is number
9999 mem: location 1153 is 4
9999 mem: storing 4 in location 1414
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1411 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1415
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1416
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1409 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 66 -> 67
 107 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1217
 107 run: reply width:number
9999 mem: location 1217 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1417
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1409 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1216
9999 mem: incrementing refcount of 1012: 67 -> 68
 107 run: jump-unless screen, 
9999 mem: location 1216 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1216 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1217
 107 run: reply height:number
9999 mem: location 1217 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1418
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1414 is 4
9999 mem: storing 3 in location 1419
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1419 is 3
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-wrap?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1412 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1412 is 1156
9999 mem: storing 3 in location 1156
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1410 is 1151
9999 mem: location 1151 is 1455
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1455 in location 1216
9999 mem: incrementing refcount of 1455: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1216 is 1455
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1216 is 1455
9999 mem: skipping refcount at 1455
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1456 is 99
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1451
9999 mem: location 1216 is 1455
9999 mem: skipping refcount at 1455
9999 type: type deduced to be character$
9998 run: address to copy is 1457
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1457 is 0
9999 mem: storing 0 in location 1217
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1427
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1427 is 0
9999 mem: storing 1 in location 1428
 106 run: jump-unless at-end?, 
9999 mem: location 1428 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1418 is 5
9999 mem: storing 4 in location 1429
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1415 is 1
9999 mem: location 1429 is 4
9999 mem: storing 0 in location 1430
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1416 is 2
9999 mem: location 1414 is 4
9999 mem: storing 0 in location 1431
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: storing 0 in location 1432
 106 run: jump-if overflow?, 
9999 mem: location 1432 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1409 is 1012
9999 mem: location 1415 is 1
9999 mem: location 1416 is 2
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 68 -> 69
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1223
 107 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 107 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 107 run: *column <- copy new-column
9999 mem: location 1223 is 2
9999 mem: location 1225 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1409 is 1012
9999 mem: location 1408 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1229
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1230
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 107 run: jump-if bg-color-found?, 
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 107 run: trace 90, [print-character], c
9999 mem: location 1230 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1229 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1235
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1236
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1237
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1239
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 107 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1240
 107 run: jump-unless newline?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 107 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1243
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1229 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1244
9999 mem: incrementing refcount of 1018: 24 -> 25
 107 run: len:number <- length *buf
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1245
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 99
9999 mem: storing 0 in location 1246
 107 run: jump-unless backspace?, 
9999 mem: location 1246 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1243 is 12
9999 mem: storing 1044 in location 1248
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1249
 107 run: *cursor-contents <- copy c
9999 mem: location 1230 is 99
9999 mem: location 1249 is 1044
9999 mem: storing 99 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1248 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1250
 107 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if at-right?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1239 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1239 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1229 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1426
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1407 is 1147
9999 mem: location 1409 is 1012
9999 mem: location 1426 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1321
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 69 -> 70
9999 mem: storing 0 in location 1326
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: storing 1169 in location 1373
9999 mem: incrementing refcount of 1169: 17 -> 18
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1340
 105 run: jump-unless *undo, 
9999 mem: location 1340 is 1158
9999 mem: location 1158 is 1448
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1340 is 1158
9999 mem: location 1158 is 1448
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1448 in location 1216
9999 mem: incrementing refcount of 1448: 3 -> 4
 106 run: result <- get *in, value:offset
9999 mem: location 1216 is 1448
9999 mem: skipping refcount at 1448
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1449 is 1000
9999 mem: location 1450 is 0
9999 mem: location 1216 is 1448
9999 mem: skipping refcount at 1448
9998 run: address to copy is 1449
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1449 is 1000
9999 mem: storing 1000 in location 1217
9999 mem: incrementing refcount of 1000: 6 -> 7
 106 run: reply result:_elem
9999 mem: location 1217 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1339
9999 mem: incrementing refcount of 1000: 7 -> 8
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1339 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1339 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1346
 105 run: jump-unless typing, 
9999 mem: location 1346 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1363
 105 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1363 is 1
9998 run: jump-unless fell through
 105 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1384
 105 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1331 is 1151
9999 mem: location 1151 is 1455
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1455 in location 1216
9999 mem: incrementing refcount of 1455: 5 -> 6
 106 run: jump-if in, 1:offset
9999 mem: location 1216 is 1455
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1216 is 1455
9999 mem: skipping refcount at 1455
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1456 is 99
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1451
9999 mem: location 1216 is 1455
9999 mem: skipping refcount at 1455
9999 type: type deduced to be character$
9998 run: address to copy is 1457
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1457 is 0
9999 mem: storing 0 in location 1217
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1217 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1384 is 1009
9999 mem: storing 0 in location 1009
 105 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1365
 105 run: *after-row <- copy *cursor-row
9999 mem: location 1332 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1365 is 1005
9999 mem: storing 1 in location 1005
 105 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1366
 105 run: *after-column <- copy *cursor-column
9999 mem: location 1333 is 1156
9999 mem: location 1156 is 3
9999 mem: location 1366 is 1006
9999 mem: storing 3 in location 1006
 105 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1346 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1169
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1169
9999 mem: location 1008 is 1437
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1346 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1367
 105 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1321 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1149 is 1169
9999 mem: location 1367 is 1007
9999 mem: decrementing refcount of 1169: 18 -> 17
9999 mem: storing 1169 in location 1007
9999 mem: incrementing refcount of 1169: 17 -> 18
 105 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1320 is 1012
9999 mem: location 1321 is 1147
9999 mem: location 1326 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 69 -> 70
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1306
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: storing 0 in location 1316
 104 run: jump-unless go-render?, 
9999 mem: location 1316 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is number
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1169
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1455
9999 mem: location 1152 is 0
9999 mem: location 1153 is 4
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1448
9999 mem: location 1159 is 0
9999 mem: location 1306 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is number
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1221
9999 mem: incrementing refcount of 1012: 70 -> 71
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1222
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1223
 105 run: jump-unless screen, 
9999 mem: location 1221 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1224
 105 run: *row <- copy new-row
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1221 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1225
 105 run: *column <- copy new-column
9999 mem: location 1223 is 3
9999 mem: location 1225 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1221 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 70 -> 71
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1256
9999 mem: incrementing refcount of 1298: 4 -> 5
 105 run: jump-unless console, 
9999 mem: location 1256 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 3
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1257
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 3
9999 mem: location 1300 is 1284
9999 mem: location 1256 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1284
9999 mem: storing 1284 in location 1258
9999 mem: incrementing refcount of 1284: 3 -> 4
 105 run: max:number <- length *buf
9999 mem: location 1258 is 1284
9999 mem: skipping refcount at 1284
9999 mem: storing 3 in location 1259
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1257 is 1299
9999 mem: location 1299 is 3
9999 mem: location 1259 is 3
9999 mem: storing 1 in location 1260
 105 run: jump-unless done?, 
9999 mem: location 1260 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1213 in location 1261
9999 mem: incrementing refcount of 1213: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1261 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1256 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 5 -> 4
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 4 -> 5
9999 mem: storing 1 in location 1313
9999 mem: storing 1 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1304 is 1012
9999 mem: location 1305 is 1298
9999 mem: location 1306 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .┈┈┈┈┈     .
    .          .
  ]
 102 run: check-trace-count-for-label 3, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
