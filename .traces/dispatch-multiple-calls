schedule: main
run: -- nil
run: 1 main 0: ((1 tagged-value-address) <- new-tagged-value (boolean literal) (t literal))
run: -- nil
run: 2 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (boolean t)
run: boolean => (1 type)
setm: (1 type) <= boolean
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1000
setm: size of (1 type) is 1
setm: (1 type): setting 1001 to boolean
run: -- ((1000 30) (1001 boolean))
run: 4 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1000
sizeof: boolean
run: 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
setm: size of (2 integer) is 1
setm: (2 integer): setting 1002 to 1
run: -- ((1000 30) (1001 boolean) (1002 1))
run: 5 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1000
run: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1000
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1003 to t
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t))
run: 6 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1000
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t))
run: 7 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1031 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1031
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1000
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1004 to 1031
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031))
run: 8 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1000
addr: deref 1004 => 1031
record-info: initial base 1031 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1031
run: 1031 => (5 location)
setm: (5 location) <= 1031
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
setm: size of (5 location) is 1
setm: (5 location): setting 1005 to 1031
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031))
run: 9 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1000
run: boolean => (5 location deref)
setm: (5 location deref) <= boolean
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1000
sz: (1031 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1000
addr: deref 1005 => 1031
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1031 to boolean
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1031 boolean))
run: 10 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1000
addr: deref 1004 => 1031
record-info: initial base 1031 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1032
run: 1032 => (6 location)
setm: (6 location) <= 1032
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1000
setm: size of (6 location) is 1
setm: (6 location): setting 1006 to 1032
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean))
run: 11 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (boolean t)
run: t => (6 location deref)
setm: (6 location deref) <= t
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1000
sz: (1032 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1000
addr: deref 1006 => 1032
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1032 to t
run: -- ((1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t))
run: 12 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1000
reply: ((4 tagged-value-address)) ((1 tagged-value-address))
reply: 1031 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1031
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1 to 1031
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t))
run: 13 main 1: ((2 tagged-value-address) <- new-tagged-value (boolean literal) (nil literal))
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t))
run: 14 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1033 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30))
run: 15 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (boolean nil)
run: boolean => (1 type)
setm: (1 type) <= boolean
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1033
setm: size of (1 type) is 1
setm: (1 type): setting 1034 to boolean
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean))
run: 16 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1033
sizeof: boolean
run: 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1033
setm: size of (2 integer) is 1
setm: (2 integer): setting 1035 to 1
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1))
run: 17 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1033
run: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1033
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1036 to t
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t))
run: 18 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1033
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t))
run: 19 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1064 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1064
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1033
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1037 to 1064
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064))
run: 20 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1033
addr: deref 1037 => 1064
record-info: initial base 1064 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1064
run: 1064 => (5 location)
setm: (5 location) <= 1064
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1033
setm: size of (5 location) is 1
setm: (5 location): setting 1038 to 1064
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064))
run: 21 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1033
run: boolean => (5 location deref)
setm: (5 location deref) <= boolean
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1033
sz: (1064 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1033
addr: deref 1038 => 1064
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1064 to boolean
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1064 boolean))
run: 22 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1033
addr: deref 1037 => 1064
record-info: initial base 1064 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1065
run: 1065 => (6 location)
setm: (6 location) <= 1065
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1033
setm: size of (6 location) is 1
setm: (6 location): setting 1039 to 1065
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean))
run: 23 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (boolean nil)
run: nil => (6 location deref)
setm: (6 location deref) <= nil
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1033
sz: (1065 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1033
addr: deref 1039 => 1065
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1065 to nil
run: -- ((1 1031) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean))
run: 24 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1033
reply: ((4 tagged-value-address)) ((2 tagged-value-address))
reply: 1064 => (2 tagged-value-address)
setm: (2 tagged-value-address) <= 1064
sz: (2 tagged-value-address)
addr: (2 tagged-value-address)
addr: initial result: 2
setm: size of (2 tagged-value-address) is 1
setm: (2 tagged-value-address): setting 2 to 1064
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean))
run: 25 main 2: ((3 boolean) <- test1 (1 tagged-value-address) (2 tagged-value-address))
m: (1 tagged-value-address)
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
m: (2 tagged-value-address)
sz: (2 tagged-value-address)
addr: (2 tagged-value-address)
addr: initial result: 2
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean))
run: 26 test1 0: ((default-scope scope-address) <- new (scope literal) (20 literal))
sizeof: location
run: 1066 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20))
run: 27 test1 1: ((1 tagged-value-address) <- arg)
arg: nil 0 (1031 1064)
run: 1031 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1031
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1066
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1067 to 1031
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031))
run: 28 test1 2: ((2 integer) (3 boolean) <- maybe-coerce (1 tagged-value-address deref) (integer literal))
m: (1 tagged-value-address deref)
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1066
sz: (1031 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1066
addr: deref 1067 => 1031
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031))
run: 29 maybe-coerce 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1087 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30))
run: 30 maybe-coerce 1: ((1 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1118 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1118
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1087
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1088 to 1118
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30) (1088 1118))
run: 31 maybe-coerce 2: ((1 tagged-value-address deref) <- arg)
arg: nil 0 (#(tagged record (boolean t . nil)) integer)
run: #(tagged record (boolean t . nil)) => (1 tagged-value-address deref)
setm: (1 tagged-value-address deref) <= #(tagged record (boolean t . nil))
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1087
sz: (1118 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1087
addr: deref 1088 => 1118
setm: size of (1 tagged-value-address deref) is 2
setm: (1 tagged-value-address deref): setting 1118 to boolean
setm: (1 tagged-value-address deref): setting 1119 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30) (1088 1118) (1118 boolean) (1119 t))
run: 32 maybe-coerce 3: ((2 type) <- arg)
arg: nil 1 (#(tagged record (boolean t . nil)) integer)
run: integer => (2 type)
setm: (2 type) <= integer
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1087
setm: size of (2 type) is 1
setm: (2 type): setting 1089 to integer
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30) (1088 1118) (1089 integer) (1118 boolean) (1119 t))
run: 33 maybe-coerce 4: ((3 type) <- get (1 tagged-value-address deref) (0 offset))
record-info: (1 tagged-value-address deref) (0 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1087
addr: deref 1088 => 1118
record-info: initial base 1118 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (0 offset) => 1118 type
m: (1118 type global)
sz: (1118 type global)
addr: (1118 type global)
addr: initial result: 1118
run: boolean => (3 type)
setm: (3 type) <= boolean
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1087
setm: size of (3 type) is 1
setm: (3 type): setting 1090 to boolean
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t))
run: 34 maybe-coerce 5: ((4 boolean) <- eq (3 type) (2 type))
m: (3 type)
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1087
m: (2 type)
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1087
run: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1087
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1091 to nil
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t))
run: 35 maybe-coerce 6: (jump-if (4 boolean) (1 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1087
jump: checking that nil is t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t))
run: 36 maybe-coerce 7: (reply (0 literal) (nil literal))
reply: ((0 literal) (nil literal)) ((2 integer) (3 boolean))
reply: 0 => (2 integer)
setm: (2 integer) <= 0
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1066
setm: size of (2 integer) is 1
setm: (2 integer): setting 1068 to 0
reply: nil => (3 boolean)
setm: (3 boolean) <= nil
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1066
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1069 to nil
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t))
run: 37 test1 3: (jump-unless (3 boolean) (4 offset))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1066
jump: checking that nil is not t
jump: jumping to 8
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t))
run: 38 test1 8: ((2 boolean) (3 boolean) <- maybe-coerce (1 tagged-value-address deref) (boolean literal))
m: (1 tagged-value-address deref)
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1066
sz: (1031 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1066
addr: deref 1067 => 1031
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t))
run: 39 maybe-coerce 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1120 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30))
run: 40 maybe-coerce 1: ((1 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1151 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1151
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1120
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1121 to 1151
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151))
run: 41 maybe-coerce 2: ((1 tagged-value-address deref) <- arg)
arg: nil 0 (#(tagged record (boolean t . nil)) boolean)
run: #(tagged record (boolean t . nil)) => (1 tagged-value-address deref)
setm: (1 tagged-value-address deref) <= #(tagged record (boolean t . nil))
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1120
sz: (1151 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1120
addr: deref 1121 => 1151
setm: size of (1 tagged-value-address deref) is 2
setm: (1 tagged-value-address deref): setting 1151 to boolean
setm: (1 tagged-value-address deref): setting 1152 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1151 boolean) (1152 t))
run: 42 maybe-coerce 3: ((2 type) <- arg)
arg: nil 1 (#(tagged record (boolean t . nil)) boolean)
run: boolean => (2 type)
setm: (2 type) <= boolean
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1120
setm: size of (2 type) is 1
setm: (2 type): setting 1122 to boolean
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1151 boolean) (1152 t))
run: 43 maybe-coerce 4: ((3 type) <- get (1 tagged-value-address deref) (0 offset))
record-info: (1 tagged-value-address deref) (0 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1120
addr: deref 1121 => 1151
record-info: initial base 1151 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (0 offset) => 1151 type
m: (1151 type global)
sz: (1151 type global)
addr: (1151 type global)
addr: initial result: 1151
run: boolean => (3 type)
setm: (3 type) <= boolean
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1120
setm: size of (3 type) is 1
setm: (3 type): setting 1123 to boolean
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1151 boolean) (1152 t))
run: 44 maybe-coerce 5: ((4 boolean) <- eq (3 type) (2 type))
m: (3 type)
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1120
m: (2 type)
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1120
run: t => (4 boolean)
setm: (4 boolean) <= t
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1120
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1124 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1151 boolean) (1152 t))
run: 45 maybe-coerce 6: (jump-if (4 boolean) (1 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1120
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1151 boolean) (1152 t))
run: 46 maybe-coerce 8: ((5 location) <- get (1 tagged-value-address deref) (1 offset))
record-info: (1 tagged-value-address deref) (1 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1120
addr: deref 1121 => 1151
record-info: initial base 1151 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (1 offset) => 1152 location
m: (1152 location global)
sz: (1152 location global)
addr: (1152 location global)
addr: initial result: 1152
run: t => (5 location)
setm: (5 location) <= t
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1120
setm: size of (5 location) is 1
setm: (5 location): setting 1125 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 0) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t))
run: 47 maybe-coerce 9: (reply (5 location) (4 boolean))
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1120
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1120
reply: ((5 location) (4 boolean)) ((2 boolean) (3 boolean))
reply: t => (2 boolean)
setm: (2 boolean) <= t
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
addr: incrementing by 1066
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 1068 to t
reply: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1066
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1069 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t))
run: 48 test1 9: (jump-unless (3 boolean) (4 offset))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1066
jump: checking that t is not t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t))
run: 49 test1 10: ((4 tagged-value-address) <- arg)
arg: nil 1 (1031 1064)
run: 1064 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1064
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1066
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1070 to 1064
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t))
run: 50 test1 11: ((5 boolean) <- maybe-coerce (4 tagged-value-address deref) (boolean literal))
m: (4 tagged-value-address deref)
sz: (4 tagged-value-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1066
sz: (1064 tagged-value)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1066
addr: deref 1070 => 1064
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t))
run: 51 maybe-coerce 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1153 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30))
run: 52 maybe-coerce 1: ((1 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1184 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1184
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1153
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1154 to 1184
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184))
run: 53 maybe-coerce 2: ((1 tagged-value-address deref) <- arg)
arg: nil 0 (#(tagged record (boolean nil . nil)) boolean)
run: #(tagged record (boolean nil . nil)) => (1 tagged-value-address deref)
setm: (1 tagged-value-address deref) <= #(tagged record (boolean nil . nil))
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1153
sz: (1184 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1153
addr: deref 1154 => 1184
setm: size of (1 tagged-value-address deref) is 2
setm: (1 tagged-value-address deref): setting 1184 to boolean
setm: (1 tagged-value-address deref): setting 1185 to nil
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1184 boolean))
run: 54 maybe-coerce 3: ((2 type) <- arg)
arg: nil 1 (#(tagged record (boolean nil . nil)) boolean)
run: boolean => (2 type)
setm: (2 type) <= boolean
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1153
setm: size of (2 type) is 1
setm: (2 type): setting 1155 to boolean
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1184 boolean))
run: 55 maybe-coerce 4: ((3 type) <- get (1 tagged-value-address deref) (0 offset))
record-info: (1 tagged-value-address deref) (0 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1153
addr: deref 1154 => 1184
record-info: initial base 1184 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (0 offset) => 1184 type
m: (1184 type global)
sz: (1184 type global)
addr: (1184 type global)
addr: initial result: 1184
run: boolean => (3 type)
setm: (3 type) <= boolean
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1153
setm: size of (3 type) is 1
setm: (3 type): setting 1156 to boolean
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1184 boolean))
run: 56 maybe-coerce 5: ((4 boolean) <- eq (3 type) (2 type))
m: (3 type)
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1153
m: (2 type)
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1153
run: t => (4 boolean)
setm: (4 boolean) <= t
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1153
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1157 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 57 maybe-coerce 6: (jump-if (4 boolean) (1 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1153
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 58 maybe-coerce 8: ((5 location) <- get (1 tagged-value-address deref) (1 offset))
record-info: (1 tagged-value-address deref) (1 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1153
addr: deref 1154 => 1184
record-info: initial base 1184 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (1 offset) => 1185 location
m: (1185 location global)
sz: (1185 location global)
addr: (1185 location global)
addr: initial result: 1185
run: nil => (5 location)
setm: (5 location) <= nil
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1153
setm: size of (5 location) is 1
setm: (5 location): setting 1158 to nil
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 59 maybe-coerce 9: (reply (5 location) (4 boolean))
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1153
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1153
reply: ((5 location) (4 boolean)) ((5 boolean))
reply: nil => (5 boolean)
setm: (5 boolean) <= nil
sz: (5 boolean)
addr: (5 boolean)
addr: initial result: 5
addr: incrementing by 1066
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 1071 to nil
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 60 test1 12: ((6 boolean) <- or (2 boolean) (5 boolean))
m: (2 boolean)
sz: (2 boolean)
addr: (2 boolean)
addr: initial result: 2
addr: incrementing by 1066
run: t => (6 boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
addr: (6 boolean)
addr: initial result: 6
addr: incrementing by 1066
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1072 to t
run: -- ((1 1031) (2 1064) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 61 test1 13: (reply (6 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1066
reply: ((6 integer)) ((3 boolean))
reply: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 3 to t
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 62 main 3: ((10 tagged-value-address) <- new-tagged-value (integer literal) (34 literal))
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean))
run: 63 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1186 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30))
run: 64 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer 34)
run: integer => (1 type)
setm: (1 type) <= integer
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1186
setm: size of (1 type) is 1
setm: (1 type): setting 1187 to integer
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer))
run: 65 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1186
sizeof: integer
run: 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1186
setm: size of (2 integer) is 1
setm: (2 integer): setting 1188 to 1
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1))
run: 66 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1186
run: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1186
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1189 to t
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t))
run: 67 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1186
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t))
run: 68 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1217 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1217
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1186
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1190 to 1217
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217))
run: 69 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1186
addr: deref 1190 => 1217
record-info: initial base 1217 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1217
run: 1217 => (5 location)
setm: (5 location) <= 1217
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1186
setm: size of (5 location) is 1
setm: (5 location): setting 1191 to 1217
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217))
run: 70 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1186
run: integer => (5 location deref)
setm: (5 location deref) <= integer
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1186
sz: (1217 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1186
addr: deref 1191 => 1217
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1217 to integer
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1217 integer))
run: 71 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1186
addr: deref 1190 => 1217
record-info: initial base 1217 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1218
run: 1218 => (6 location)
setm: (6 location) <= 1218
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1186
setm: size of (6 location) is 1
setm: (6 location): setting 1192 to 1218
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer))
run: 72 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer 34)
run: 34 => (6 location deref)
setm: (6 location deref) <= 34
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1186
sz: (1218 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1186
addr: deref 1192 => 1218
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1218 to 34
run: -- ((1 1031) (2 1064) (3 t) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34))
run: 73 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1186
reply: ((4 tagged-value-address)) ((10 tagged-value-address))
reply: 1217 => (10 tagged-value-address)
setm: (10 tagged-value-address) <= 1217
sz: (10 tagged-value-address)
addr: (10 tagged-value-address)
addr: initial result: 10
setm: size of (10 tagged-value-address) is 1
setm: (10 tagged-value-address): setting 10 to 1217
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34))
run: 74 main 4: ((11 tagged-value-address) <- new-tagged-value (integer literal) (3 literal))
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34))
run: 75 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1219 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30))
run: 76 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer 3)
run: integer => (1 type)
setm: (1 type) <= integer
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1219
setm: size of (1 type) is 1
setm: (1 type): setting 1220 to integer
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer))
run: 77 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1219
sizeof: integer
run: 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1219
setm: size of (2 integer) is 1
setm: (2 integer): setting 1221 to 1
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1))
run: 78 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1219
run: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1219
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1222 to t
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t))
run: 79 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1219
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t))
run: 80 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1250 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1250
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1219
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1223 to 1250
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250))
run: 81 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1219
addr: deref 1223 => 1250
record-info: initial base 1250 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1250
run: 1250 => (5 location)
setm: (5 location) <= 1250
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1219
setm: size of (5 location) is 1
setm: (5 location): setting 1224 to 1250
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250))
run: 82 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
addr: (1 type)
addr: initial result: 1
addr: incrementing by 1219
run: integer => (5 location deref)
setm: (5 location deref) <= integer
sz: (5 location deref)
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1219
sz: (1250 location)
addr: (5 location deref)
addr: initial result: 5
addr: incrementing by 1219
addr: deref 1224 => 1250
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1250 to integer
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1250 integer))
run: 83 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1219
addr: deref 1223 => 1250
record-info: initial base 1250 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1251
run: 1251 => (6 location)
setm: (6 location) <= 1251
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1219
setm: size of (6 location) is 1
setm: (6 location): setting 1225 to 1251
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer))
run: 84 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer 3)
run: 3 => (6 location deref)
setm: (6 location deref) <= 3
sz: (6 location deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1219
sz: (1251 location)
addr: (6 location deref)
addr: initial result: 6
addr: incrementing by 1219
addr: deref 1225 => 1251
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1251 to 3
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3))
run: 85 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1219
reply: ((4 tagged-value-address)) ((11 tagged-value-address))
reply: 1250 => (11 tagged-value-address)
setm: (11 tagged-value-address) <= 1250
sz: (11 tagged-value-address)
addr: (11 tagged-value-address)
addr: initial result: 11
setm: size of (11 tagged-value-address) is 1
setm: (11 tagged-value-address): setting 11 to 1250
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3))
run: 86 main 5: ((12 integer) <- test1 (10 tagged-value-address) (11 tagged-value-address))
m: (10 tagged-value-address)
sz: (10 tagged-value-address)
addr: (10 tagged-value-address)
addr: initial result: 10
m: (11 tagged-value-address)
sz: (11 tagged-value-address)
addr: (11 tagged-value-address)
addr: initial result: 11
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3))
run: 87 test1 0: ((default-scope scope-address) <- new (scope literal) (20 literal))
sizeof: location
run: 1252 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20))
run: 88 test1 1: ((1 tagged-value-address) <- arg)
arg: nil 0 (1217 1250)
run: 1217 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1217
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1252
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1253 to 1217
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217))
run: 89 test1 2: ((2 integer) (3 boolean) <- maybe-coerce (1 tagged-value-address deref) (integer literal))
m: (1 tagged-value-address deref)
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1252
sz: (1217 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1252
addr: deref 1253 => 1217
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217))
run: 90 maybe-coerce 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1273 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30))
run: 91 maybe-coerce 1: ((1 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1304 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1304
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1273
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1274 to 1304
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304))
run: 92 maybe-coerce 2: ((1 tagged-value-address deref) <- arg)
arg: nil 0 (#(tagged record (integer 34 . nil)) integer)
run: #(tagged record (integer 34 . nil)) => (1 tagged-value-address deref)
setm: (1 tagged-value-address deref) <= #(tagged record (integer 34 . nil))
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1273
sz: (1304 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1273
addr: deref 1274 => 1304
setm: size of (1 tagged-value-address deref) is 2
setm: (1 tagged-value-address deref): setting 1304 to integer
setm: (1 tagged-value-address deref): setting 1305 to 34
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304) (1304 integer) (1305 34))
run: 93 maybe-coerce 3: ((2 type) <- arg)
arg: nil 1 (#(tagged record (integer 34 . nil)) integer)
run: integer => (2 type)
setm: (2 type) <= integer
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1273
setm: size of (2 type) is 1
setm: (2 type): setting 1275 to integer
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304) (1275 integer) (1304 integer) (1305 34))
run: 94 maybe-coerce 4: ((3 type) <- get (1 tagged-value-address deref) (0 offset))
record-info: (1 tagged-value-address deref) (0 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1273
addr: deref 1274 => 1304
record-info: initial base 1304 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (0 offset) => 1304 type
m: (1304 type global)
sz: (1304 type global)
addr: (1304 type global)
addr: initial result: 1304
run: integer => (3 type)
setm: (3 type) <= integer
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1273
setm: size of (3 type) is 1
setm: (3 type): setting 1276 to integer
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1304 integer) (1305 34))
run: 95 maybe-coerce 5: ((4 boolean) <- eq (3 type) (2 type))
m: (3 type)
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1273
m: (2 type)
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1273
run: t => (4 boolean)
setm: (4 boolean) <= t
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1273
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1277 to t
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1304 integer) (1305 34))
run: 96 maybe-coerce 6: (jump-if (4 boolean) (1 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1273
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1304 integer) (1305 34))
run: 97 maybe-coerce 8: ((5 location) <- get (1 tagged-value-address deref) (1 offset))
record-info: (1 tagged-value-address deref) (1 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1273
addr: deref 1274 => 1304
record-info: initial base 1304 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (1 offset) => 1305 location
m: (1305 location global)
sz: (1305 location global)
addr: (1305 location global)
addr: initial result: 1305
run: 34 => (5 location)
setm: (5 location) <= 34
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1273
setm: size of (5 location) is 1
setm: (5 location): setting 1278 to 34
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34))
run: 98 maybe-coerce 9: (reply (5 location) (4 boolean))
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1273
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1273
reply: ((5 location) (4 boolean)) ((2 integer) (3 boolean))
reply: 34 => (2 integer)
setm: (2 integer) <= 34
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1252
setm: size of (2 integer) is 1
setm: (2 integer): setting 1254 to 34
reply: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1252
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1255 to t
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34))
run: 99 test1 3: (jump-unless (3 boolean) (4 offset))
m: (3 boolean)
sz: (3 boolean)
addr: (3 boolean)
addr: initial result: 3
addr: incrementing by 1252
jump: checking that t is not t
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34))
run: 100 test1 4: ((4 tagged-value-address) <- arg)
arg: nil 1 (1217 1250)
run: 1250 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1250
sz: (4 tagged-value-address)
addr: (4 tagged-value-address)
addr: initial result: 4
addr: incrementing by 1252
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1256 to 1250
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34))
run: 101 test1 5: ((5 integer) <- maybe-coerce (4 tagged-value-address deref) (integer literal))
m: (4 tagged-value-address deref)
sz: (4 tagged-value-address deref)
m: (4 location)
sz: (4 location)
addr: (4 location)
addr: initial result: 4
addr: incrementing by 1252
sz: (1250 tagged-value)
addr: (4 tagged-value-address deref)
addr: initial result: 4
addr: incrementing by 1252
addr: deref 1256 => 1250
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34))
run: 102 maybe-coerce 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1306 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30))
run: 103 maybe-coerce 1: ((1 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1337 => (1 tagged-value-address)
setm: (1 tagged-value-address) <= 1337
sz: (1 tagged-value-address)
addr: (1 tagged-value-address)
addr: initial result: 1
addr: incrementing by 1306
setm: size of (1 tagged-value-address) is 1
setm: (1 tagged-value-address): setting 1307 to 1337
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337))
run: 104 maybe-coerce 2: ((1 tagged-value-address deref) <- arg)
arg: nil 0 (#(tagged record (integer 3 . nil)) integer)
run: #(tagged record (integer 3 . nil)) => (1 tagged-value-address deref)
setm: (1 tagged-value-address deref) <= #(tagged record (integer 3 . nil))
sz: (1 tagged-value-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1306
sz: (1337 tagged-value)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1306
addr: deref 1307 => 1337
setm: size of (1 tagged-value-address deref) is 2
setm: (1 tagged-value-address deref): setting 1337 to integer
setm: (1 tagged-value-address deref): setting 1338 to 3
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1337 integer) (1338 3))
run: 105 maybe-coerce 3: ((2 type) <- arg)
arg: nil 1 (#(tagged record (integer 3 . nil)) integer)
run: integer => (2 type)
setm: (2 type) <= integer
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1306
setm: size of (2 type) is 1
setm: (2 type): setting 1308 to integer
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1337 integer) (1338 3))
run: 106 maybe-coerce 4: ((3 type) <- get (1 tagged-value-address deref) (0 offset))
record-info: (1 tagged-value-address deref) (0 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1306
addr: deref 1307 => 1337
record-info: initial base 1337 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (0 offset) => 1337 type
m: (1337 type global)
sz: (1337 type global)
addr: (1337 type global)
addr: initial result: 1337
run: integer => (3 type)
setm: (3 type) <= integer
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1306
setm: size of (3 type) is 1
setm: (3 type): setting 1309 to integer
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1309 integer) (1337 integer) (1338 3))
run: 107 maybe-coerce 5: ((4 boolean) <- eq (3 type) (2 type))
m: (3 type)
sz: (3 type)
addr: (3 type)
addr: initial result: 3
addr: incrementing by 1306
m: (2 type)
sz: (2 type)
addr: (2 type)
addr: initial result: 2
addr: incrementing by 1306
run: t => (4 boolean)
setm: (4 boolean) <= t
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1306
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1310 to t
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1309 integer) (1310 t) (1337 integer) (1338 3))
run: 108 maybe-coerce 6: (jump-if (4 boolean) (1 offset))
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1306
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1309 integer) (1310 t) (1337 integer) (1338 3))
run: 109 maybe-coerce 8: ((5 location) <- get (1 tagged-value-address deref) (1 offset))
record-info: (1 tagged-value-address deref) (1 offset)
addr: (1 tagged-value-address deref)
addr: initial result: 1
addr: incrementing by 1306
addr: deref 1307 => 1337
record-info: initial base 1337 type ((address t) (elem tagged-value) (size 1))
record-info: (1 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get: (1 tagged-value-address deref) (1 offset) => 1338 location
m: (1338 location global)
sz: (1338 location global)
addr: (1338 location global)
addr: initial result: 1338
run: 3 => (5 location)
setm: (5 location) <= 3
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1306
setm: size of (5 location) is 1
setm: (5 location): setting 1311 to 3
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1309 integer) (1310 t) (1311 3) (1337 integer) (1338 3))
run: 110 maybe-coerce 9: (reply (5 location) (4 boolean))
m: (5 location)
sz: (5 location)
addr: (5 location)
addr: initial result: 5
addr: incrementing by 1306
m: (4 boolean)
sz: (4 boolean)
addr: (4 boolean)
addr: initial result: 4
addr: incrementing by 1306
reply: ((5 location) (4 boolean)) ((5 integer))
reply: 3 => (5 integer)
setm: (5 integer) <= 3
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1252
setm: size of (5 integer) is 1
setm: (5 integer): setting 1257 to 3
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1257 3) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1309 integer) (1310 t) (1311 3) (1337 integer) (1338 3))
run: 111 test1 6: ((6 integer) <- add (2 integer) (5 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1252
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1252
add: 34 3
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1252
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1252
run: 37 => (6 integer)
setm: (6 integer) <= 37
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1252
setm: size of (6 integer) is 1
setm: (6 integer): setting 1258 to 37
run: -- ((1 1031) (2 1064) (3 t) (10 1217) (11 1250) (1000 30) (1001 boolean) (1002 1) (1003 t) (1004 1031) (1005 1031) (1006 1032) (1031 boolean) (1032 t) (1033 30) (1034 boolean) (1035 1) (1036 t) (1037 1064) (1038 1064) (1039 1065) (1064 boolean) (1066 20) (1067 1031) (1068 t) (1069 t) (1070 1064) (1072 t) (1087 30) (1088 1118) (1089 integer) (1090 boolean) (1118 boolean) (1119 t) (1120 30) (1121 1151) (1122 boolean) (1123 boolean) (1124 t) (1125 t) (1151 boolean) (1152 t) (1153 30) (1154 1184) (1155 boolean) (1156 boolean) (1157 t) (1184 boolean) (1186 30) (1187 integer) (1188 1) (1189 t) (1190 1217) (1191 1217) (1192 1218) (1217 integer) (1218 34) (1219 30) (1220 integer) (1221 1) (1222 t) (1223 1250) (1224 1250) (1225 1251) (1250 integer) (1251 3) (1252 20) (1253 1217) (1254 34) (1255 t) (1256 1250) (1257 3) (1258 37) (1273 30) (1274 1304) (1275 integer) (1276 integer) (1277 t) (1278 34) (1304 integer) (1305 34) (1306 30) (1307 1337) (1308 integer) (1309 integer) (1310 t) (1311 3) (1337 integer) (1338 3))
run: 112 test1 7: (reply (6 integer))
m: (6 integer)
sz: (6 integer)
addr: (6 integer)
addr: initial result: 6
addr: incrementing by 1252
reply: ((6 integer)) ((12 integer))
reply: 37 => (12 integer)
setm: (12 integer) <= 37
sz: (12 integer)
addr: (12 integer)
addr: initial result: 12
setm: size of (12 integer) is 1
setm: (12 integer): setting 12 to 37
schedule: done with routine
