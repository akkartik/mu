9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   product: {"a": "number"}
9992 load: after rewriting: a:number <- copy 3
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": <>}
9993 parse:   product: {"b": <"address" : <"number" : <>>>}
9992 load: after rewriting: b:address:number <- foo a
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: a:_t
9999 parse: header product: b:_t
9991 parse: --- defining foo
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": <>}
9993 parse:   product: {"b": <>}
9992 load: after rewriting: b <- copy a
9999 parse: recipe foo has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: a => number
9992 transform: a <= number
9992 transform: b => <address : <number : <>>>
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction copy
9993 transform: too few ingredients
9992 transform: checking variant 0: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 0
9993 transform: no type ingredients
9992 transform: final score: -1
9992 transform: instruction foo
9993 transform: mismatch: ingredient 0
9992 transform: checking variant 0: -1
9992 transform: checking variant 1: -1
9992 transform: checking variant 2: -1
9992 transform: checking variant 3: -1
9992 transform: checking variant 4: -1
9992 transform: checking variant 5: -1
9992 transform: checking variant 6: -1
9992 transform: checking variant 7: -1
9992 transform: checking variant 8: -1
9993 transform: mismatch: ingredient 0
9992 transform: checking variant 9: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 9
9992 transform: final score: 100
9992 transform: matches
9992 transform: found variant to specialize: 1000 foo
9993 transform: switching foo to foo_2
9993 transform: compute type names: foo_2
9994 transform:     checking {"a": "_t"}: "_t"
9993 transform: type of a is "_t"
9994 transform:     checking {"b": "_t"}: "_t"
9993 transform: type of b is "_t"
9993 transform:   instruction: a:_t <- next-ingredient 
9994 transform:     checking {"a": "_t"}: "_t"
9993 transform:   instruction: b <- copy a
9994 transform:     checking {"a": <>}: <>
9994 transform:     deducing type to "_t"
9994 transform:     checking {"b": <>}: <>
9994 transform:     deducing type to "_t"
9993 transform: adding mapping from _t to "number"
   0 error: main: no call found for 'b:address:number <- foo a'

9992 transform: transforming new specialization: foo
9991 transform: --- checking reply instructions against header for foo
9991 transform: --- fill in reply ingredients from header for recipe foo
9991 transform: --- deduce types for recipe foo
9992 transform: a => ?-1
9992 transform: a <= ?-1
9992 transform: b => ?-1
9991 transform: --- deduce types from header for foo
9993 transform: type of a is ?-1
9993 transform: type of b is ?-1
9992 transform: instruction: a:_t <- next-ingredient 
9993 transform:   product: a: ?-1 -- {"a": "_t"}
9992 transform: instruction: b <- copy a
9993 transform:   product: b: NULLNULLNULL -- {"b": <>}
9993 transform: type of b is ?-1
9992 transform: instruction: reply b:_t
9991 transform: --- checking reply instructions against header for foo
9991 transform: --- resolve ambiguous calls for recipe foo
9992 transform: instruction copy
9993 transform: too few ingredients
9992 transform: checking variant 0: -1
9992 transform: no variant found; searching for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 0
9993 transform: no type ingredients
9992 transform: final score: -1
   0 error: foo: unknown type _t in 'a:_t <- next-ingredient '

   0 error: foo: unknown type _t in 'b <- copy a'

   0 error: foo: unknown type _t in 'b <- copy a'

   0 error: foo: unknown type _t in 'reply b:_t'

9991 transform: --- compute instruction operations for recipe foo
9991 transform: --- transform braces for recipe foo
9992 transform:  ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- collect surrounding spaces for recipe foo
9991 transform: --- transform names for recipe foo
9993 name: assign a 1
9993 name: assign b 2
9991 transform: --- perform checks for recipe foo
9991 transform: --- convert 'new' to 'allocate' for recipe foo
9992 transform: new specialization: foo
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: copy ...
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9993 name: assign a 1
9993 name: assign b 2
9991 transform: --- perform checks for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: a:number <- copy 3
9999 mem: storing 3 in location 1
 102 run: b:address:number <- foo a
9999 mem: location 1 is 3
9999 trace: incrementing callstack depth to 2
   0 error: ran into unspecialized shape-shifting recipe foo

 103 run: a:_t <- next-ingredient 
   0 error: foo: wrong type for ingredient a:_t

9999 mem: storing 3 in location 1
