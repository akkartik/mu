9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   product: {"a": "number"}
9992 load: after rewriting: a:number <- copy 3
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": <>}
9993 parse:   product: {"b": <"address" : <"shared" : <"number" : <>>>>}
9992 load: after rewriting: b:address:shared:number <- foo a
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: a:_t
9999 parse: header product: b:_t
9991 parse: --- defining foo
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a": <>}
9993 parse:   product: {"b": <>}
9992 load: after rewriting: b <- copy a
9999 parse: recipe foo has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9992 transform: a => number
9992 transform: a <= number
9992 transform: b => <address : <shared : <number : <>>>>
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9993 name: assign a 1
9993 name: assign b 2
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction foo
9993 transform: mismatch: ingredient 0
9992 transform: score for base: -1
9992 transform: checking variant 25: recipe foo a:_t -> b:_t
9993 transform: mismatch: ingredient 0
9992 transform: score for variant 25: -1
9992 transform: no variant found; checking for variant with suitable type ingredients
9992 transform: checking shape-shifting variant 25: recipe foo a:_t -> b:_t
9992 transform: final score: 100
9992 transform: matches
9992 transform: found variant to specialize: 1001 foo
9993 transform: switching foo to foo_2
9993 transform: compute type names: foo_2
9994 transform:     checking {"a": "_t"}: "_t"
9993 transform: type of a is "_t"
9994 transform:     checking {"b": "_t"}: "_t"
9993 transform: type of b is "_t"
9993 transform:   instruction: a:_t <- next-ingredient-without-typechecking 
9994 transform:     checking {"a": "_t"}: "_t"
9993 transform:   instruction: b <- copy a
9994 transform:     checking {"a": <>}: <>
9994 transform:     deducing type to "_t"
9994 transform:     checking {"b": <>}: <>
9994 transform:     deducing type to "_t"
9993 transform: adding mapping from _t to "number"
   0 error: main: no call found for 'b:address:shared:number <- foo a'

9991 transform: --- compute instruction operations for recipe main
   0 error: main: instruction foo has no valid specialization

9991 transform: --- transform braces for recipe main
9992 transform: copy ...
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
   0 error: main: undefined operation in 'reply '

9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
   0 error: main: ingredient 0 has the wrong type at 'b:address:shared:number <- foo a'

   0 error: main: product 0 has the wrong type at 'b:address:shared:number <- foo a'

9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- parsing any uninitialized reagents as integers
