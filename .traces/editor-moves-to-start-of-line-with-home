 102 run: assume-console [
    left-click 2, 3
    press home
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 2, 3
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"home": <>}
9992 load: after rewriting: press home
9999 mem: storing 'left-click' event starting at 1290
9999 mem: storing 'press' event starting at 1294
9999 mem: storing console in 1298
9999 mem: storing console data in 1300
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1298
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1301
9999 mem: storing 14 in location 1302
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 22 -> 23
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1306
9999 mem: incrementing refcount of 1154: 4 -> 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 23 -> 24
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1317
9999 mem: storing 12 in location 1318
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1320
9999 mem: incrementing refcount of 1298: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1320 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1321
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1288
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: storing 2 in location 1323
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1323 is 2
9999 mem: storing 0 in location 1324
 105 run: jump-unless done?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9998 run: base address is 1289
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 0
9998 run: address to copy is 1290
9998 run: its type is event
9999 mem: location 1290 is 2
9999 mem: location 1291 is 65513
9999 mem: location 1292 is 2
9999 mem: location 1293 is 3
9999 mem: storing 2 in location 1326
9999 mem: storing 65513 in location 1327
9999 mem: storing 2 in location 1328
9999 mem: storing 3 in location 1329
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1321 is 1299
9999 mem: storing 1 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1326 is 2
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 2
9999 mem: location 1329 is 3
9999 mem: location 1320 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 3]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1309
9999 mem: storing 65513 in location 1310
9999 mem: storing 2 in location 1311
9999 mem: storing 3 in location 1312
9999 mem: decrementing refcount of 1298: 2 -> 1
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 1 -> 2
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 2
9999 mem: location 1310 is 65513
9999 mem: location 1311 is 2
9999 mem: location 1312 is 3
9999 mem: storing 1310 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 1310
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1154
9999 mem: location 1315 is 1310
9999 mem: location 1310 is 65513
9999 mem: location 1311 is 2
9999 mem: location 1312 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1331
9999 mem: storing 27 in location 1332
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1335
9999 mem: incrementing refcount of 1154: 5 -> 6
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1336
9999 mem: storing 2 in location 1337
9999 mem: storing 3 in location 1338
 105 run: jump-if editor, 1:offset
9999 mem: location 1335 is 1154
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 2
9999 mem: location 1338 is 3
9998 run: address to copy is 1337
9998 run: its type is number
9999 mem: location 1337 is 2
9999 mem: storing 2 in location 1339
 105 run: jump-if click-row, 1:offset
9999 mem: location 1339 is 2
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 2
9999 mem: location 1338 is 3
9998 run: address to copy is 1338
9998 run: its type is number
9999 mem: location 1338 is 3
9999 mem: storing 3 in location 1340
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1341
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1340 is 3
9999 mem: location 1341 is 0
9999 mem: storing 0 in location 1342
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1342 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1343
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1340 is 3
9999 mem: location 1343 is 9
9999 mem: storing 0 in location 1344
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1344 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1345
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1346
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1347
9999 mem: incrementing refcount of 1176: 9 -> 10
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1154
9999 mem: location 1339 is 2
9999 mem: location 1340 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1360
9999 mem: storing 26 in location 1361
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1364
9999 mem: incrementing refcount of 1154: 6 -> 7
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1365
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1366
 106 run: jump-if editor, 1:offset
9999 mem: location 1364 is 1154
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1367
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1368
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1363 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 26 -> 27
 107 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 107 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1369
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1370
9999 mem: incrementing refcount of 1176: 10 -> 11
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-start-of-line-with-home
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1370 is 1176
9999 mem: storing 1176 in location 1371
9999 mem: incrementing refcount of 1176: 11 -> 12
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 13 -> 12
9999 mem: storing 1190 in location 1370
9999 mem: incrementing refcount of 1190: 11 -> 12
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1372
 106 run: column:number <- copy left
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1373
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1374
 106 run: *cursor-row <- copy target-row
9999 mem: location 1365 is 2
9999 mem: location 1374 is 1162
9999 mem: storing 2 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1375
 106 run: *cursor-column <- copy target-column
9999 mem: location 1366 is 3
9999 mem: location 1375 is 1163
9999 mem: storing 3 in location 1163
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1376
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1370 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 49
9999 mem: storing 49 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 49
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 0
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 13 -> 12
9999 mem: storing 1199 in location 1370
9999 mem: incrementing refcount of 1199: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 13 -> 12
9999 mem: storing 1190 in location 1371
9999 mem: incrementing refcount of 1190: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1370 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 50
9999 mem: storing 50 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 50
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 1
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 13 -> 12
9999 mem: storing 1203 in location 1370
9999 mem: incrementing refcount of 1203: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 15 -> 14
9999 mem: storing 1199 in location 1371
9999 mem: incrementing refcount of 1199: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 1
9999 mem: storing 2 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1370 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 51
9999 mem: storing 51 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 51
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 2
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 1207 in location 1370
9999 mem: incrementing refcount of 1207: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 15 -> 14
9999 mem: storing 1203 in location 1371
9999 mem: incrementing refcount of 1203: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 2
9999 mem: storing 3 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1370 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 10
9999 mem: storing 1 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1372 is 1
9999 mem: storing 2 in location 1372
 106 run: column <- copy left
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1373
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 1211 in location 1370
9999 mem: incrementing refcount of 1211: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 15 -> 14
9999 mem: storing 1207 in location 1371
9999 mem: incrementing refcount of 1207: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 2
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1370 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 52
9999 mem: storing 52 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 52
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 0
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 13 -> 12
9999 mem: storing 1215 in location 1370
9999 mem: incrementing refcount of 1215: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 15 -> 14
9999 mem: storing 1211 in location 1371
9999 mem: incrementing refcount of 1211: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 2
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1370 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 53
9999 mem: storing 53 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 53
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 1
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 13 -> 12
9999 mem: storing 1219 in location 1370
9999 mem: incrementing refcount of 1219: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 15 -> 14
9999 mem: storing 1215 in location 1371
9999 mem: incrementing refcount of 1215: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 1
9999 mem: storing 2 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 2
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1370 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 54
9999 mem: storing 54 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 54
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 2
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1197
9999 mem: incrementing refcount of 1219: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1198
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1219: 11 -> 10
9999 mem: storing 0 in location 1370
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 15 -> 14
9999 mem: storing 1219 in location 1371
9999 mem: incrementing refcount of 1219: 11 -> 12
 106 run: column <- add column, 1
9999 mem: location 1373 is 2
9999 mem: storing 3 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 1 in location 1378
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1373 is 3
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1384
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1378 is 1
9999 mem: location 1384 is 1
9999 mem: storing 1 in location 1385
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 0 in location 1386
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1385 is 1
9999 mem: location 1386 is 0
9999 mem: storing 1 in location 1387
 106 run: jump-unless before-cursor?, 
9999 mem: location 1387 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: storing 2 in location 1162
 106 run: *cursor-column <- copy column
9999 mem: location 1373 is 3
9999 mem: location 1375 is 1163
9999 mem: storing 3 in location 1163
 106 run: *before-cursor <- copy prev
9999 mem: location 1371 is 1219
9999 mem: location 1376 is 1158
9999 mem: decrementing refcount of 1176: 12 -> 11
9999 mem: storing 1219 in location 1158
9999 mem: incrementing refcount of 1219: 12 -> 13
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1364 is 1154
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 7 -> 6
9999 mem: storing 1154 in location 1335
9999 mem: incrementing refcount of 1154: 6 -> 7
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1348
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1349
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1350
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1351
9999 mem: incrementing refcount of 1176: 11 -> 12
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1353
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1345 is 1
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1176
9999 mem: location 1349 is 2
9999 mem: location 1350 is 3
9999 mem: location 1351 is 1176
9999 mem: location 1348 is 0
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1176 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 3 in location 1006
9999 mem: storing 1176 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1335 is 1154
9999 mem: location 1353 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1388
9999 mem: storing 5 in location 1389
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1391
9999 mem: incrementing refcount of 1154: 7 -> 8
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1392
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1393
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1392 is 1000
9999 mem: location 1393 is 1165
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1256
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1395
9999 mem: storing 1395 in location 1258
9999 mem: incrementing refcount of 1395: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1396
9999 mem: storing 1396 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1000
9999 mem: location 1259 is 1396
9999 mem: storing 1000 in location 1396
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1396 is 1000
9999 mem: location 1397 is 0
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9999 type: type deduced to be address$
9998 run: address to copy is 1397
9999 mem: storing 1397 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 0
9999 mem: location 1260 is 1397
9999 mem: storing 0 in location 1397
 107 run: reply result
9999 mem: location 1258 is 1395
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1395
9999 mem: location 1393 is 1165
9999 mem: storing 1395 in location 1165
9999 mem: incrementing refcount of 1395: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1394
 106 run: *redo <- copy 0
9999 mem: location 1394 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1391 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 8 -> 7
9999 mem: storing 1154 in location 1335
9999 mem: incrementing refcount of 1154: 7 -> 8
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 2
9999 mem: location 1308 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 27 -> 28
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1320
9999 mem: incrementing refcount of 1298: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1320 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 1
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1321
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 1
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1288
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: storing 2 in location 1323
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 1
9999 mem: location 1323 is 2
9999 mem: storing 0 in location 1324
 105 run: jump-unless done?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9998 run: base address is 1289
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 1
9998 run: address to copy is 1294
9998 run: its type is event
9999 mem: location 1294 is 1
9999 mem: location 1295 is 65521
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 1 in location 1326
9999 mem: storing 65521 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 1
9999 mem: location 1321 is 1299
9999 mem: storing 2 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65521
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: location 1320 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65521, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1309
9999 mem: storing 65521 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 3 -> 2
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 2 -> 3
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 1
9999 mem: location 1310 is 65521
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1154
9999 mem: location 1309 is 1
9999 mem: location 1310 is 65521
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1398
9999 mem: storing 85 in location 1399
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1401
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1402
9999 mem: incrementing refcount of 1154: 8 -> 9
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1403
9999 mem: storing 65521 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: storing 0 in location 1406
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1407
 105 run: jump-if editor, 1:offset
9999 mem: location 1402 is 1154
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1401 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 29 -> 30
 106 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1198
 106 run: reply width:number
9999 mem: location 1198 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1401 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 30 -> 31
 106 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 106 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1410
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1411
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1412
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1413
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1414
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1413 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1415
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1414 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1416
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1403 is 1
9999 mem: location 1404 is 65521
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: storing 0 in location 1417
 105 run: jump-unless c, 
9999 mem: location 1417 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1403 is 1
9999 mem: location 1404 is 65521
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: storing 1404 in location 1471
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1471 is 1404
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1471 is 1404
9999 mem: location 1404 is 65521
9999 mem: storing 0 in location 1434
 105 run: jump-unless page-up?, 
9999 mem: location 1434 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1471 is 1404
9999 mem: location 1404 is 65521
9999 mem: storing 0 in location 1450
 105 run: jump-unless page-down?, 
9999 mem: location 1450 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1471 is 1404
9999 mem: location 1404 is 65521
9999 mem: storing 0 in location 1457
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1457 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1471 is 1404
9999 mem: location 1404 is 65521
9999 mem: storing 1 in location 1458
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1437
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1438
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1439
9999 mem: incrementing refcount of 1176: 12 -> 13
 105 run: move-to-start-of-line editor
9999 mem: location 1402 is 1154
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1485
9999 mem: storing 9 in location 1486
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1488
9999 mem: incrementing refcount of 1154: 9 -> 10
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1489
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1490
 106 run: *cursor-column <- copy left
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1163
9999 mem: storing 0 in location 1163
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1491
 106 run: init:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1219
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1488 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1176
9999 mem: storing 1176 in location 1492
9999 mem: incrementing refcount of 1176: 13 -> 14
 106 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1219
9999 mem: location 1492 is 1176
9999 mem: storing 0 in location 1493
 106 run: jump-if at-start-of-text?, 
9999 mem: location 1493 is 0
9998 run: jump-if fell through
 106 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 54
9999 mem: storing 54 in location 1494
 106 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1494 is 54
9999 mem: storing 0 in location 1495
 106 run: jump-if at-start-of-line?, 
9999 mem: location 1495 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- prev_2 *before-cursor
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1197
9999 mem: incrementing refcount of 1219: 13 -> 14
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: reply result
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: location 1491 is 1158
9999 mem: decrementing refcount of 1219: 14 -> 13
9999 mem: storing 1215 in location 1158
9999 mem: incrementing refcount of 1215: 15 -> 16
 106 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1215
 106 run: jump 
9998 run: jumping to instruction 8
 106 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1215
9999 mem: location 1492 is 1176
9999 mem: storing 0 in location 1493
 106 run: jump-if at-start-of-text?, 
9999 mem: location 1493 is 0
9998 run: jump-if fell through
 106 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 53
9999 mem: storing 53 in location 1494
 106 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1494 is 53
9999 mem: storing 0 in location 1495
 106 run: jump-if at-start-of-line?, 
9999 mem: location 1495 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- prev_2 *before-cursor
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: reply result
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: location 1491 is 1158
9999 mem: decrementing refcount of 1215: 17 -> 16
9999 mem: storing 1211 in location 1158
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1211
 106 run: jump 
9998 run: jumping to instruction 8
 106 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1211
9999 mem: location 1492 is 1176
9999 mem: storing 0 in location 1493
 106 run: jump-if at-start-of-text?, 
9999 mem: location 1493 is 0
9998 run: jump-if fell through
 106 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 52
9999 mem: storing 52 in location 1494
 106 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1494 is 52
9999 mem: storing 0 in location 1495
 106 run: jump-if at-start-of-line?, 
9999 mem: location 1495 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- prev_2 *before-cursor
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1214 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: reply result
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: location 1491 is 1158
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1207 in location 1158
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1207
 106 run: jump 
9998 run: jumping to instruction 8
 106 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1207
9999 mem: location 1492 is 1176
9999 mem: storing 0 in location 1493
 106 run: jump-if at-start-of-text?, 
9999 mem: location 1493 is 0
9998 run: jump-if fell through
 106 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1491 is 1158
9999 mem: location 1158 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1494
 106 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1494 is 10
9999 mem: storing 1 in location 1495
 106 run: jump-if at-start-of-line?, 
9999 mem: location 1495 is 1
9998 run: jumping to instruction 16
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1488 is 1154
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 5
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1440
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1441
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1442
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1443
9999 mem: incrementing refcount of 1176: 14 -> 15
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1440 is 0
9998 run: jumping to instruction 591
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1420
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1437 is 2
9999 mem: location 1438 is 3
9999 mem: location 1439 is 1176
9999 mem: location 1441 is 2
9999 mem: location 1442 is 0
9999 mem: location 1443 is 1176
9999 mem: location 1440 is 0
9999 mem: location 1420 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1420 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 3 in location 1123
9999 mem: storing 1176 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1176 in location 1127
9999 mem: storing 0 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1402 is 1154
9999 mem: location 1420 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1391
9999 mem: incrementing refcount of 1154: 10 -> 11
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1392
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1393
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1392 is 1120
9999 mem: location 1393 is 1165
9999 mem: location 1165 is 1395
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1256
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1395 in location 1257
9999 mem: incrementing refcount of 1395: 2 -> 3
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1496
9999 mem: storing 1496 in location 1258
9999 mem: incrementing refcount of 1496: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1496
9999 mem: skipping refcount at 1496
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1497 is 0
9999 mem: location 1498 is 0
9999 mem: location 1258 is 1496
9999 mem: skipping refcount at 1496
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1120
9999 mem: location 1259 is 1497
9999 mem: storing 1120 in location 1497
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1496
9999 mem: skipping refcount at 1496
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1497 is 1120
9999 mem: location 1498 is 0
9999 mem: location 1258 is 1496
9999 mem: skipping refcount at 1496
9999 type: type deduced to be address$
9998 run: address to copy is 1498
9999 mem: storing 1498 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 1395
9999 mem: location 1260 is 1498
9999 mem: storing 1395 in location 1498
9999 mem: incrementing refcount of 1395: 3 -> 4
 107 run: reply result
9999 mem: location 1258 is 1496
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1496
9999 mem: location 1393 is 1165
9999 mem: decrementing refcount of 1395: 4 -> 3
9999 mem: storing 1496 in location 1165
9999 mem: incrementing refcount of 1496: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1496
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1394
 106 run: *redo <- copy 0
9999 mem: location 1394 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1391 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 11 -> 10
9999 mem: storing 1154 in location 1402
9999 mem: incrementing refcount of 1154: 10 -> 11
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1407
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1401 is 1012
9999 mem: location 1402 is 1154
9999 mem: location 1407 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 31 -> 30
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 30 -> 31
9999 mem: decrementing refcount of 1154: 11 -> 10
9999 mem: storing 1154 in location 1306
9999 mem: incrementing refcount of 1154: 10 -> 11
9999 mem: storing 0 in location 1316
 104 run: jump-unless go-render?, 
9999 mem: location 1316 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1496
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1496
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 2
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 32 -> 31
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 31 -> 32
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1320
9999 mem: incrementing refcount of 1298: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1320 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1321
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1288
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: storing 2 in location 1323
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 2
9999 mem: location 1323 is 2
9999 mem: storing 1 in location 1324
 105 run: jump-unless done?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1194 in location 1325
9999 mem: incrementing refcount of 1194: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1325 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1320 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 4 -> 3
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 3 -> 4
9999 mem: storing 1 in location 1313
9999 mem: storing 1 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1304 is 1012
9999 mem: location 1305 is 1298
9999 mem: location 1306 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1496
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1207
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1496
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 4
9990 schedule: run1001/scenario-editor-moves-to-start-of-line-with-home
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
