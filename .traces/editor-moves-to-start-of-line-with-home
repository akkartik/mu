 101 run: assume-console [
    left-click 2, 3
    press 65521  # 'home'
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65521", properties: ["65521": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1266
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1268
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1270
 102 run: console:address <- next-ingredient 
9999 mem: storing 1266 in location 1271
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1272
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1271 is 1266
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1281
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1266 in location 1283
 103 run: break-unless x, 
9999 mem: location 1283 is 1266
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1266
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1257
9999 mem: location 1283 is 1266
9999 run: address to copy is 1266
9999 mem: storing 1266 in location 1284
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1266
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1257
9999 mem: location 1283 is 1266
9999 run: address to copy is 1267
9999 run: its type is address
9999 mem: location 1267 is 1257
9999 mem: storing 1257 in location 1285
 103 run: max:number <- length *buf
9999 mem: location 1285 is 1257
9999 mem: storing 2 in location 1286
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 0
9999 mem: location 1286 is 2
9999 mem: storing 0 in location 1287
 103 run: break-unless done?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1285 is 1257
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 0
9999 run: address to copy is 1258
9999 run: its type is event
9999 mem: location 1258 is 2
9999 mem: location 1259 is 65513
9999 mem: location 1260 is 2
9999 mem: location 1261 is 3
9999 mem: storing 2 in location 1289
9999 mem: storing 65513 in location 1290
9999 mem: storing 2 in location 1291
9999 mem: storing 3 in location 1292
 103 run: *idx <- add *idx, 1
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 0
9999 mem: location 1284 is 1266
9999 mem: storing 1 in location 1266
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1289 is 2
9999 mem: location 1290 is 65513
9999 mem: location 1291 is 2
9999 mem: location 1292 is 3
9999 mem: location 1283 is 1266
9999 run: result 0 is [2, 65513, 2, 3]
9999 run: result 1 is 1266
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1273
9999 mem: storing 65513 in location 1274
9999 mem: storing 2 in location 1275
9999 mem: storing 3 in location 1276
9999 mem: storing 1266 in location 1271
9999 mem: storing 1 in location 1277
9999 mem: storing 0 in location 1278
 102 run: loop-unless found?, 
9999 mem: location 1277 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1278 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1273 is 2
9999 mem: location 1274 is 65513
9999 mem: location 1275 is 2
9999 mem: location 1276 is 3
9999 mem: storing 1274 in location 1279
 102 run: break-unless t, 
9999 mem: location 1279 is 1274
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1270 is 1009
9999 mem: location 1272 is 1000
9999 mem: location 1279 is 1274
9999 mem: location 1274 is 65513
9999 mem: location 1275 is 2
9999 mem: location 1276 is 3
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1283
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1284
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1285
9999 mem: storing 2 in location 1286
9999 mem: storing 3 in location 1287
 103 run: jump-if editor, 1:offset
9999 mem: location 1284 is 1000
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1285 is 65513
9999 mem: location 1286 is 2
9999 mem: location 1287 is 3
9999 run: address to copy is 1287
9999 run: its type is number
9999 mem: location 1287 is 3
9999 mem: storing 3 in location 1288
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1284 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1284 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1289
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1288 is 3
9999 mem: location 1289 is 0
9999 mem: storing 0 in location 1290
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1290 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1284 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1284 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1291
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1288 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1292 is 0
9999 run: jumping to instruction 15
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1285 is 65513
9999 mem: location 1286 is 2
9999 mem: location 1287 is 3
9999 run: address to copy is 1286
9999 run: its type is number
9999 mem: location 1286 is 2
9999 mem: storing 2 in location 1293
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1285 is 65513
9999 mem: location 1286 is 2
9999 mem: location 1287 is 3
9999 run: address to copy is 1287
9999 run: its type is number
9999 mem: location 1287 is 3
9999 mem: storing 3 in location 1288
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1283 is 1009
9999 mem: location 1284 is 1000
9999 mem: location 1293 is 2
9999 mem: location 1288 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1193
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1194
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1195
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 3 in location 1196
 104 run: jump-if editor, 1:offset
9999 mem: location 1194 is 1000
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1197
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1198
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1193 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 105 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 105 run: reply height
9999 mem: location 1172 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1199
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1200
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1200 is 1154
9999 mem: storing 1154 in location 1201
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1200
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1202
 104 run: column:number <- copy left
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1203
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1204
 104 run: *cursor-row <- copy target-row
9999 mem: location 1195 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1204 is 1006
9999 mem: storing 2 in location 1006
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1205
 104 run: *cursor-column <- copy target-column
9999 mem: location 1196 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1205 is 1007
9999 mem: storing 3 in location 1007
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1206
 104 run: break-unless curr, 
9999 mem: location 1200 is 1166
9999 run: jump-unless fell through
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-start-of-line-with-home
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1166
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1200 is 1166
9999 run: address to copy is 1166
9999 run: its type is number
9999 mem: location 1166 is 49
9999 mem: storing 49 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 49
9999 mem: storing 0 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 0
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 104 run: break-unless at-right?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1166
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1166
9999 run: result 0 is 1166
9999 mem: storing 1166 in location 1201
 104 run: column <- add column, 1
9999 mem: location 1203 is 0
9999 mem: storing 1 in location 1203
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1200 is 1173
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1173
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1200 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 50
9999 mem: storing 50 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 50
9999 mem: storing 0 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 1
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 104 run: break-unless at-right?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1166
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1166 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 run: address to copy is 1167
9999 run: its type is address
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1201
 104 run: column <- add column, 1
9999 mem: location 1203 is 1
9999 mem: storing 2 in location 1203
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1200 is 1176
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1176
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1200 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 51
9999 mem: storing 51 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 51
9999 mem: storing 0 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 2
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 104 run: break-unless at-right?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1201
 104 run: column <- add column, 1
9999 mem: location 1203 is 2
9999 mem: storing 3 in location 1203
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1200 is 1179
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1179
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1200 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 10
9999 mem: storing 1 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: column <- copy left
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1203
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1201
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1200 is 1182
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 0
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1209
 104 run: break-unless at-cursor?, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1182
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1200 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 52
9999 mem: storing 52 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 52
9999 mem: storing 0 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 0
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 104 run: break-unless at-right?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1182
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1201
 104 run: column <- add column, 1
9999 mem: location 1203 is 0
9999 mem: storing 1 in location 1203
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1200 is 1185
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 1
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1209
 104 run: break-unless at-cursor?, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1185
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1200 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 53
9999 mem: storing 53 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 53
9999 mem: storing 0 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 1
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 104 run: break-unless at-right?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1185
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1182
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1185
9999 run: result 0 is 1185
9999 mem: storing 1185 in location 1201
 104 run: column <- add column, 1
9999 mem: location 1203 is 1
9999 mem: storing 2 in location 1203
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1200 is 1188
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 104 run: break-if off-screen?, 
9999 mem: location 1207 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1208
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 2
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1209
 104 run: break-unless at-cursor?, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1188
9999 mem: location 1188 is 54
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1200 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 54
9999 mem: storing 54 in location 1210
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 54
9999 mem: storing 0 in location 1211
 104 run: break-unless newline?, 
9999 mem: location 1211 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 2
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 104 run: break-unless at-right?, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1200 is 1188
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1188
9999 mem: location 1188 is 54
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 run: address to copy is 1189
9999 run: its type is address
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1172
 105 run: reply result
9999 mem: location 1172 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1200
 104 run: prev <- next-duplex prev
9999 mem: location 1201 is 1185
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 run: address to copy is 1186
9999 run: its type is address
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1188
9999 run: result 0 is 1188
9999 mem: storing 1188 in location 1201
 104 run: column <- add column, 1
9999 mem: location 1203 is 2
9999 mem: storing 3 in location 1203
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 1 in location 1208
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1214
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1208 is 1
9999 mem: location 1214 is 1
9999 mem: storing 1 in location 1215
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 2
9999 mem: storing 0 in location 1216
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1215 is 1
9999 mem: location 1216 is 0
9999 mem: storing 1 in location 1217
 104 run: break-unless before-cursor?, 
9999 mem: location 1217 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1204 is 1006
9999 mem: storing 2 in location 1006
 104 run: *cursor-column <- copy column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1205 is 1007
9999 mem: storing 3 in location 1007
 104 run: *before-cursor <- copy prev
9999 mem: location 1201 is 1188
9999 mem: location 1206 is 1003
9999 mem: location 1206 is 1003
9999 mem: storing 1188 in location 1003
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1194 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1284
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1271 is 1266
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1266 in location 1283
 103 run: break-unless x, 
9999 mem: location 1283 is 1266
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1266
9999 mem: location 1266 is 1
9999 mem: location 1267 is 1257
9999 mem: location 1283 is 1266
9999 run: address to copy is 1266
9999 mem: storing 1266 in location 1284
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1266
9999 mem: location 1266 is 1
9999 mem: location 1267 is 1257
9999 mem: location 1283 is 1266
9999 run: address to copy is 1267
9999 run: its type is address
9999 mem: location 1267 is 1257
9999 mem: storing 1257 in location 1285
 103 run: max:number <- length *buf
9999 mem: location 1285 is 1257
9999 mem: storing 2 in location 1286
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 1
9999 mem: location 1286 is 2
9999 mem: storing 0 in location 1287
 103 run: break-unless done?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1285 is 1257
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 1
9999 run: address to copy is 1262
9999 run: its type is event
9999 mem: location 1262 is 1
9999 mem: location 1263 is 65521
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: storing 1 in location 1289
9999 mem: storing 65521 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
 103 run: *idx <- add *idx, 1
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 1
9999 mem: location 1284 is 1266
9999 mem: storing 2 in location 1266
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1289 is 1
9999 mem: location 1290 is 65521
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1283 is 1266
9999 run: result 0 is [1, 65521, 0, 0]
9999 run: result 1 is 1266
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1273
9999 mem: storing 65521 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1266 in location 1271
9999 mem: storing 1 in location 1277
9999 mem: storing 0 in location 1278
 102 run: loop-unless found?, 
9999 mem: location 1277 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1278 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1273 is 1
9999 mem: location 1274 is 65521
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: storing 0 in location 1279
 102 run: break-unless t, 
9999 mem: location 1279 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1279 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1270 is 1009
9999 mem: location 1272 is 1000
9999 mem: location 1273 is 1
9999 mem: location 1274 is 65521
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 61
9999 mem: new alloc: 1294
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1296
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1297
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1298
9999 mem: storing 65521 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
 103 run: jump-if editor, 1:offset
9999 mem: location 1297 is 1000
9999 run: jumping to instruction 6
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1296 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 104 run: break-unless sc, 
9999 mem: location 1171 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 104 run: reply height
9999 mem: location 1172 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1302
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1297 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1297 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1303
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1297 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1297 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1304
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1297 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1297 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1305
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1297 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1297 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1306
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1297 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1297 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1307
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1306 is 1006
9999 mem: location 1006 is 2
9999 mem: location 1306 is 1006
9999 mem: location 1306 is 1006
9999 mem: storing 2 in location 1308
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1307 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1307 is 1007
9999 mem: location 1307 is 1007
9999 mem: storing 3 in location 1309
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65521
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1310
 103 run: break-unless c, 
9999 mem: location 1310 is 0
9999 run: jumping to instruction 74
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65521
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: storing 1299 in location 1322
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1322 is 1299
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1322 is 1299
9999 mem: location 1299 is 65521
9999 mem: storing 0 in location 1323
 103 run: break-unless page-up?, 
9999 mem: location 1323 is 0
9999 run: jumping to instruction 83
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1322 is 1299
9999 mem: location 1299 is 65521
9999 mem: storing 0 in location 1324
 103 run: break-unless page-down?, 
9999 mem: location 1324 is 0
9999 run: jumping to instruction 89
 103 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1322 is 1299
9999 mem: location 1299 is 65521
9999 mem: storing 0 in location 1325
 103 run: break-unless end?, 
9999 mem: location 1325 is 0
9999 run: jumping to instruction 95
 103 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1322 is 1299
9999 mem: location 1299 is 65521
9999 mem: storing 1 in location 1326
 103 run: break-unless home?, 
9999 mem: location 1326 is 1
9999 run: jump-unless fell through
 103 run: move-to-start-of-line editor
9999 mem: location 1297 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1356
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1358
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1358 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1358 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1359
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1358 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1358 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1360
 104 run: *cursor-column <- copy left
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1007
9999 mem: location 1360 is 1007
9999 mem: storing 0 in location 1007
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1358 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1358 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1361
 104 run: init:address:duplex-list <- get *editor, data:offset
9999 mem: location 1358 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1358 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1154
9999 mem: storing 1154 in location 1362
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1188
9999 mem: location 1362 is 1154
9999 mem: storing 0 in location 1363
 104 run: break-if at-start-of-text?, 
9999 mem: location 1363 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1188
9999 mem: location 1188 is 54
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1188
9999 run: address to copy is 1188
9999 run: its type is number
9999 mem: location 1188 is 54
9999 mem: storing 54 in location 1364
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1364 is 54
9999 mem: storing 0 in location 1365
 104 run: break-if at-start-of-line?, 
9999 mem: location 1365 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1188
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1188 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1171 is 1188
9999 mem: location 1188 is 54
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1185
9999 mem: storing 1185 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1185
9999 run: result 0 is 1185
9999 mem: location 1361 is 1003
9999 mem: storing 1185 in location 1003
 104 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1185
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1185
9999 mem: location 1362 is 1154
9999 mem: storing 0 in location 1363
 104 run: break-if at-start-of-text?, 
9999 mem: location 1363 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1185
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1185
9999 run: address to copy is 1185
9999 run: its type is number
9999 mem: location 1185 is 53
9999 mem: storing 53 in location 1364
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1364 is 53
9999 mem: storing 0 in location 1365
 104 run: break-if at-start-of-line?, 
9999 mem: location 1365 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1185
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1185 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1171 is 1185
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1182
9999 mem: storing 1182 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1182
9999 run: result 0 is 1182
9999 mem: location 1361 is 1003
9999 mem: storing 1182 in location 1003
 104 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1182
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1182
9999 mem: location 1362 is 1154
9999 mem: storing 0 in location 1363
 104 run: break-if at-start-of-text?, 
9999 mem: location 1363 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1182
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 52
9999 mem: storing 52 in location 1364
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1364 is 52
9999 mem: storing 0 in location 1365
 104 run: break-if at-start-of-line?, 
9999 mem: location 1365 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1182
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1171
 105 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1171 is 1182
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1179
9999 mem: storing 1179 in location 1172
 105 run: reply result
9999 mem: location 1172 is 1179
9999 run: result 0 is 1179
9999 mem: location 1361 is 1003
9999 mem: storing 1179 in location 1003
 104 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1179
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1179
9999 mem: location 1362 is 1154
9999 mem: storing 0 in location 1363
 104 run: break-if at-start-of-text?, 
9999 mem: location 1363 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1179
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1361 is 1003
9999 mem: location 1003 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1364
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1364 is 10
9999 mem: storing 1 in location 1365
 104 run: break-if at-start-of-line?, 
9999 mem: location 1365 is 1
9999 run: jumping to instruction 16
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1296 is 1009
9999 mem: location 1297 is 1000
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1270
9999 mem: storing 1000 in location 1272
9999 mem: storing 0 in location 1280
 102 run: break-unless go-render?, 
9999 mem: location 1280 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1271 is 1266
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1266 in location 1283
 103 run: break-unless x, 
9999 mem: location 1283 is 1266
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1283 is 1266
9999 mem: location 1266 is 2
9999 mem: location 1267 is 1257
9999 mem: location 1283 is 1266
9999 run: address to copy is 1266
9999 mem: storing 1266 in location 1284
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1283 is 1266
9999 mem: location 1266 is 2
9999 mem: location 1267 is 1257
9999 mem: location 1283 is 1266
9999 run: address to copy is 1267
9999 run: its type is address
9999 mem: location 1267 is 1257
9999 mem: storing 1257 in location 1285
 103 run: max:number <- length *buf
9999 mem: location 1285 is 1257
9999 mem: storing 2 in location 1286
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1284 is 1266
9999 mem: location 1266 is 2
9999 mem: location 1286 is 2
9999 mem: storing 1 in location 1287
 103 run: break-unless done?, 
9999 mem: location 1287 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1169 in location 1288
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1288 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1283 is 1266
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1266
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1266 in location 1271
9999 mem: storing 1 in location 1277
9999 mem: storing 1 in location 1278
 102 run: loop-unless found?, 
9999 mem: location 1277 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1278 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1006
9999 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1179
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1007
9999 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 4
 100 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: check-trace-count-for-label 0, [print-character]
