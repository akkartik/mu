 101 run: assume-console [
    left-click 2, 3
    press 65521  # 'home'
  ]
parse: instruction: left-click
parse:   ingredient: {name: "2", properties: ["2": "literal"]}
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "65521", properties: ["65521": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1268
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1270
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1272
 102 run: console:address <- next-ingredient 
9999 mem: storing 1268 in location 1273
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1274
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1273 is 1268
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1290
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1268 in location 1292
 103 run: break-unless x, 
9999 mem: location 1292 is 1268
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1292 is 1268
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1259
9999 mem: location 1292 is 1268
9999 run: address to copy is 1268
9999 mem: storing 1268 in location 1293
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1292 is 1268
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1259
9999 mem: location 1292 is 1268
9999 run: address to copy is 1269
9999 run: its type is address
9999 mem: location 1269 is 1259
9999 mem: storing 1259 in location 1294
 103 run: max:number <- length *buf
9999 mem: location 1294 is 1259
9999 mem: storing 2 in location 1295
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 0
9999 mem: location 1295 is 2
9999 mem: storing 0 in location 1296
 103 run: break-unless done?, 
9999 mem: location 1296 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1294 is 1259
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 0
9999 run: address to copy is 1260
9999 run: its type is event
9999 mem: location 1260 is 2
9999 mem: location 1261 is 65513
9999 mem: location 1262 is 2
9999 mem: location 1263 is 3
9999 mem: storing 2 in location 1298
9999 mem: storing 65513 in location 1299
9999 mem: storing 2 in location 1300
9999 mem: storing 3 in location 1301
 103 run: *idx <- add *idx, 1
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 0
9999 mem: location 1293 is 1268
9999 mem: storing 1 in location 1268
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1298 is 2
9999 mem: location 1299 is 65513
9999 mem: location 1300 is 2
9999 mem: location 1301 is 3
9999 mem: location 1292 is 1268
9999 run: result 0 is [2, 65513, 2, 3]
9999 run: result 1 is 1268
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1275
9999 mem: storing 65513 in location 1276
9999 mem: storing 2 in location 1277
9999 mem: storing 3 in location 1278
9999 mem: storing 1268 in location 1273
9999 mem: storing 1 in location 1279
9999 mem: storing 0 in location 1280
 102 run: loop-unless found?, 
9999 mem: location 1279 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1280 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1275 is 2
9999 mem: location 1276 is 65513
9999 mem: location 1277 is 2
9999 mem: location 1278 is 3
9999 mem: storing 1276 in location 1281
 102 run: break-unless t, 
9999 mem: location 1281 is 1276
9999 run: jump-unless fell through
 102 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1274 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1274 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1282
 102 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1274 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1274 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1283
 102 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1274 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1274 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1284
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1272 is 1009
9999 mem: location 1274 is 1115
9999 mem: location 1281 is 1276
9999 mem: location 1276 is 65513
9999 mem: location 1277 is 2
9999 mem: location 1278 is 3
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1292
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1293
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1294
9999 mem: storing 2 in location 1295
9999 mem: storing 3 in location 1296
 103 run: jump-if editor, 1:offset
9999 mem: location 1293 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 2
9999 mem: location 1296 is 3
9999 run: address to copy is 1296
9999 run: its type is number
9999 mem: location 1296 is 3
9999 mem: storing 3 in location 1297
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1293 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1293 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1298
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1297 is 3
9999 mem: location 1298 is 0
9999 mem: storing 0 in location 1299
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1299 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1293 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1293 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1300
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1297 is 3
9999 mem: location 1300 is 9
9999 mem: storing 0 in location 1301
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1301 is 0
9999 run: jumping to instruction 15
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 2
9999 mem: location 1296 is 3
9999 run: address to copy is 1295
9999 run: its type is number
9999 mem: location 1295 is 2
9999 mem: storing 2 in location 1302
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 2
9999 mem: location 1296 is 3
9999 run: address to copy is 1296
9999 run: its type is number
9999 mem: location 1296 is 3
9999 mem: storing 3 in location 1297
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1292 is 1009
9999 mem: location 1293 is 1115
9999 mem: location 1302 is 2
9999 mem: location 1297 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1184
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1185
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 2 in location 1186
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 3 in location 1187
 104 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1115
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1188
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1189
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 105 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 105 run: reply height
9999 mem: location 1163 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1190
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1191
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1191 is 1154
9999 mem: storing 1154 in location 1192
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1157
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1191
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1193
 104 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1195
 104 run: *cursor-row <- copy target-row
9999 mem: location 1186 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1195 is 1121
9999 mem: storing 2 in location 1121
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1196
 104 run: *cursor-column <- copy target-column
9999 mem: location 1187 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1196 is 1122
9999 mem: storing 3 in location 1122
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-start-of-line-with-home
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1197
 104 run: break-unless curr, 
9999 mem: location 1191 is 1157
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1191 is 1157
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 49
9999 mem: storing 49 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 49
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1157
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1164
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1191 is 1164
9999 run: address to copy is 1164
9999 run: its type is number
9999 mem: location 1164 is 50
9999 mem: storing 50 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 50
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1167
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1191 is 1167
9999 run: address to copy is 1167
9999 run: its type is number
9999 mem: location 1167 is 51
9999 mem: storing 51 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 51
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1170
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1191 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 10
9999 mem: storing 1 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 104 run: column <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1170
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1192
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1191 is 1173
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 0
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1191 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 52
9999 mem: storing 52 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 52
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1170
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1176
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1191 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 53
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1179
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1191 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 54
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1163
 105 run: reply result
9999 mem: location 1163 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 1 in location 1199
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 1 in location 1205
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1199 is 1
9999 mem: location 1205 is 1
9999 mem: storing 1 in location 1206
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 2
9999 mem: storing 0 in location 1207
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 1
9999 mem: location 1207 is 0
9999 mem: storing 1 in location 1208
 104 run: break-unless before-cursor?, 
9999 mem: location 1208 is 1
9999 run: jump-unless fell through
 104 run: *cursor-row <- copy row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1195 is 1121
9999 mem: storing 2 in location 1121
 104 run: *cursor-column <- copy column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1196 is 1122
9999 mem: storing 3 in location 1122
 104 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1179
9999 mem: location 1197 is 1118
9999 mem: location 1197 is 1118
9999 mem: storing 1179 in location 1118
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1185 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1293
 103 run: reply 1/true
 102 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1274 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1274 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1285
 102 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1274 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1274 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1286
 102 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1274 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1274 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1287
 102 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1303
9999 mem: storing 1303 in location 1288
 102 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1282 is 1
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1154
9999 mem: location 1285 is 2
9999 mem: location 1286 is 3
9999 mem: location 1287 is 1154
9999 mem: location 1288 is 1303
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 1154 in location 1306
9999 mem: storing 2 in location 1307
9999 mem: storing 3 in location 1308
9999 mem: storing 1154 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
 102 run: editor <- add-operation editor, op
9999 mem: location 1274 is 1115
9999 mem: location 1288 is 1303
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 103 run: op:address:operation <- next-ingredient 
9999 mem: storing 1303 in location 1256
 103 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 103 run: *undo <- push op, *undo
9999 mem: location 1256 is 1303
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1303 in location 1211
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1212
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1313
9999 mem: storing 1313 in location 1213
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1313
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: location 1213 is 1313
9999 run: address to copy is 1313
9999 mem: storing 1313 in location 1214
 104 run: *val <- copy x
9999 mem: location 1211 is 1303
9999 mem: location 1214 is 1313
9999 mem: location 1214 is 1313
9999 mem: storing 1303 in location 1313
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1313
9999 mem: location 1313 is 1303
9999 mem: location 1314 is 0
9999 mem: location 1213 is 1313
9999 run: address to copy is 1314
9999 mem: storing 1314 in location 1215
 104 run: *next <- copy in
9999 mem: location 1212 is 0
9999 mem: location 1215 is 1314
9999 mem: location 1215 is 1314
9999 mem: storing 0 in location 1314
 104 run: reply result
9999 mem: location 1213 is 1313
9999 run: result 0 is 1313
9999 mem: location 1257 is 1124
9999 mem: storing 1313 in location 1124
 103 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 103 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1274
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1273 is 1268
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1268 in location 1292
 103 run: break-unless x, 
9999 mem: location 1292 is 1268
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1292 is 1268
9999 mem: location 1268 is 1
9999 mem: location 1269 is 1259
9999 mem: location 1292 is 1268
9999 run: address to copy is 1268
9999 mem: storing 1268 in location 1293
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1292 is 1268
9999 mem: location 1268 is 1
9999 mem: location 1269 is 1259
9999 mem: location 1292 is 1268
9999 run: address to copy is 1269
9999 run: its type is address
9999 mem: location 1269 is 1259
9999 mem: storing 1259 in location 1294
 103 run: max:number <- length *buf
9999 mem: location 1294 is 1259
9999 mem: storing 2 in location 1295
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 1
9999 mem: location 1295 is 2
9999 mem: storing 0 in location 1296
 103 run: break-unless done?, 
9999 mem: location 1296 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1294 is 1259
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 1
9999 run: address to copy is 1264
9999 run: its type is event
9999 mem: location 1264 is 1
9999 mem: location 1265 is 65521
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: storing 1 in location 1298
9999 mem: storing 65521 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
 103 run: *idx <- add *idx, 1
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 1
9999 mem: location 1293 is 1268
9999 mem: storing 2 in location 1268
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1298 is 1
9999 mem: location 1299 is 65521
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1292 is 1268
9999 run: result 0 is [1, 65521, 0, 0]
9999 run: result 1 is 1268
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1275
9999 mem: storing 65521 in location 1276
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 1268 in location 1273
9999 mem: storing 1 in location 1279
9999 mem: storing 0 in location 1280
 102 run: loop-unless found?, 
9999 mem: location 1279 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1280 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1275 is 1
9999 mem: location 1276 is 65521
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: storing 0 in location 1281
 102 run: break-unless t, 
9999 mem: location 1281 is 0
9999 run: jumping to instruction 26
 102 run: break-if t, 
9999 mem: location 1281 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1272 is 1009
9999 mem: location 1274 is 1115
9999 mem: location 1275 is 1
9999 mem: location 1276 is 65521
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 70
9999 mem: new alloc: 1315
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1317
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1318
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1319
9999 mem: storing 65521 in location 1320
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
 103 run: jump-if editor, 1:offset
9999 mem: location 1318 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1317 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 104 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1163
 104 run: reply width
9999 mem: location 1163 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1323
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1317 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 104 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 104 run: reply height
9999 mem: location 1163 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1324
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1325
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1326
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1327
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1328
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1329
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1328 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1328 is 1121
9999 mem: location 1328 is 1121
9999 mem: storing 2 in location 1330
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1329 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1329 is 1122
9999 mem: location 1329 is 1122
9999 mem: storing 3 in location 1331
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1319 is 1
9999 mem: location 1320 is 65521
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: storing 0 in location 1332
 103 run: break-unless c, 
9999 mem: location 1332 is 0
9999 run: jumping to instruction 210
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1319 is 1
9999 mem: location 1320 is 65521
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: storing 1320 in location 1369
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1369 is 1320
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1369 is 1320
9999 mem: location 1320 is 65521
9999 mem: storing 0 in location 1344
 103 run: break-unless page-up?, 
9999 mem: location 1344 is 0
9999 run: jumping to instruction 230
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1369 is 1320
9999 mem: location 1320 is 65521
9999 mem: storing 0 in location 1351
 103 run: break-unless page-down?, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 247
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1369 is 1320
9999 mem: location 1320 is 65521
9999 mem: storing 0 in location 1354
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 264
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1369 is 1320
9999 mem: location 1320 is 65521
9999 mem: storing 1 in location 1355
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1355 is 1
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1345
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1346
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1347
 103 run: move-to-start-of-line editor
9999 mem: location 1318 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1386
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1388
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1388 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1388 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1389
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1388 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1388 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1390
 104 run: *cursor-column <- copy left
9999 mem: location 1389 is 0
9999 mem: location 1390 is 1122
9999 mem: location 1390 is 1122
9999 mem: storing 0 in location 1122
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1388 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1388 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1391
 104 run: init:address:duplex-list <- get *editor, data:offset
9999 mem: location 1388 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1179
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1388 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1154
9999 mem: storing 1154 in location 1392
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1179
9999 mem: location 1392 is 1154
9999 mem: storing 0 in location 1393
 104 run: break-if at-start-of-text?, 
9999 mem: location 1393 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1394
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1394 is 54
9999 mem: storing 0 in location 1395
 104 run: break-if at-start-of-line?, 
9999 mem: location 1395 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: location 1391 is 1118
9999 mem: storing 1176 in location 1118
 104 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1176
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1176
9999 mem: location 1392 is 1154
9999 mem: storing 0 in location 1393
 104 run: break-if at-start-of-text?, 
9999 mem: location 1393 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1394
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1394 is 53
9999 mem: storing 0 in location 1395
 104 run: break-if at-start-of-line?, 
9999 mem: location 1395 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: location 1391 is 1118
9999 mem: storing 1173 in location 1118
 104 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1173
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1173
9999 mem: location 1392 is 1154
9999 mem: storing 0 in location 1393
 104 run: break-if at-start-of-text?, 
9999 mem: location 1393 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 52
9999 mem: storing 52 in location 1394
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1394 is 52
9999 mem: storing 0 in location 1395
 104 run: break-if at-start-of-line?, 
9999 mem: location 1395 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: location 1391 is 1118
9999 mem: storing 1170 in location 1118
 104 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1170
 104 run: loop 
9999 run: jumping to instruction 8
 104 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1170
9999 mem: location 1392 is 1154
9999 mem: storing 0 in location 1393
 104 run: break-if at-start-of-text?, 
9999 mem: location 1393 is 0
9999 run: jump-if fell through
 104 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1391 is 1118
9999 mem: location 1118 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1394
 104 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1394 is 10
9999 mem: storing 1 in location 1395
 104 run: break-if at-start-of-line?, 
9999 mem: location 1395 is 1
9999 run: jumping to instruction 16
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1348
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1349
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1318 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1318 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1350
 103 run: op:address:operation <- new operation:type
9999 mem: storing 1386 in location 1335
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1345 is 2
9999 mem: location 1346 is 3
9999 mem: location 1347 is 1154
9999 mem: location 1348 is 2
9999 mem: location 1349 is 0
9999 mem: location 1350 is 1154
9999 mem: location 1335 is 1386
9999 mem: storing 1 in location 1386
9999 mem: storing 2 in location 1387
9999 mem: storing 3 in location 1388
9999 mem: storing 1154 in location 1389
9999 mem: storing 2 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 1154 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
 103 run: editor <- add-operation editor, op
9999 mem: location 1318 is 1115
9999 mem: location 1335 is 1386
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1386 in location 1256
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1313
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 104 run: *undo <- push op, *undo
9999 mem: location 1256 is 1386
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 1313
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1386 in location 1211
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1313 in location 1212
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1396
9999 mem: storing 1396 in location 1213
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1396
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: location 1213 is 1396
9999 run: address to copy is 1396
9999 mem: storing 1396 in location 1214
 105 run: *val <- copy x
9999 mem: location 1211 is 1386
9999 mem: location 1214 is 1396
9999 mem: location 1214 is 1396
9999 mem: storing 1386 in location 1396
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1396
9999 mem: location 1396 is 1386
9999 mem: location 1397 is 0
9999 mem: location 1213 is 1396
9999 run: address to copy is 1397
9999 mem: storing 1397 in location 1215
 105 run: *next <- copy in
9999 mem: location 1212 is 1313
9999 mem: location 1215 is 1397
9999 mem: location 1215 is 1397
9999 mem: storing 1313 in location 1397
 105 run: reply result
9999 mem: location 1213 is 1396
9999 run: result 0 is 1396
9999 mem: location 1257 is 1124
9999 mem: storing 1396 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1396
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 104 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1318
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1317 is 1009
9999 mem: location 1318 is 1115
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1272
9999 mem: storing 1115 in location 1274
9999 mem: storing 0 in location 1289
 102 run: break-unless go-render?, 
9999 mem: location 1289 is 0
9999 run: jumping to instruction 33
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1273 is 1268
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1268 in location 1292
 103 run: break-unless x, 
9999 mem: location 1292 is 1268
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1292 is 1268
9999 mem: location 1268 is 2
9999 mem: location 1269 is 1259
9999 mem: location 1292 is 1268
9999 run: address to copy is 1268
9999 mem: storing 1268 in location 1293
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1292 is 1268
9999 mem: location 1268 is 2
9999 mem: location 1269 is 1259
9999 mem: location 1292 is 1268
9999 run: address to copy is 1269
9999 run: its type is address
9999 mem: location 1269 is 1259
9999 mem: storing 1259 in location 1294
 103 run: max:number <- length *buf
9999 mem: location 1294 is 1259
9999 mem: storing 2 in location 1295
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1293 is 1268
9999 mem: location 1268 is 2
9999 mem: location 1295 is 2
9999 mem: storing 1 in location 1296
 103 run: break-unless done?, 
9999 mem: location 1296 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1160 in location 1297
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1297 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1292 is 1268
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1268
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 1268 in location 1273
9999 mem: storing 1 in location 1279
9999 mem: storing 1 in location 1280
 102 run: loop-unless found?, 
9999 mem: location 1279 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1280 is 1
9999 run: jumping to instruction 36
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1396
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1170
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1396
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 4
 100 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: check-trace-count-for-label 0, [print-character]
