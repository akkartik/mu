parse: instruction: assume-screen
parse:   ingredient: {name: "3", properties: ["3": "literal", "width": ]}
parse:   ingredient: {name: "2", properties: ["2": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "
    screen:address <- print-character screen:address, 97:literal  # 'a'
  ", properties: ["
    screen:address <- print-character screen:address, 97:literal  # 'a'
  ": "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "
    .a  .
    .   .
  ", properties: ["
    .a  .
    .   .
  ": "literal-string"]}
after-brace: recipe print-character-at-top-left2
after-brace: assume-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: print-character-at-top-left2
run: screen:address <- assume-screen 3:literal/width, 2:literal/height
run: default-space:address:array:location <- new location:type, 30:literal/capacity
mem: array size is 30
mem: new alloc: 1000
run: result:address:screen <- new screen:type
mem: new alloc: 1031
mem: storing 1031 in location 1002
run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 0
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1032
mem: storing 1032 in location 1003
run: width:address:number/deref <- next-ingredient 
mem: location 1003 is 1032
mem: storing 3 in location 1032
run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
mem: location 1002 is 1031
mem: location 1031 is 0
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1031
mem: storing 1031 in location 1004
run: height:address:number/deref <- next-ingredient 
mem: location 1004 is 1031
mem: storing 2 in location 1031
run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1005
run: row:address:number/deref <- copy 0:literal
mem: location 1005 is 1033
mem: storing 0 in location 1033
run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1006
run: column:address:number/deref <- copy 0:literal
mem: location 1006 is 1034
mem: storing 0 in location 1034
run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
mem: location 1003 is 1032
mem: location 1032 is 3
mem: location 1004 is 1031
mem: location 1031 is 2
mem: storing 6 in location 1007
run: buf:address:address:array:character <- get-address result:address:screen/deref, data:offset
mem: location 1002 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 0
mem: location 1002 is 1031
run: address to copy is 1035
mem: storing 1035 in location 1008
run: buf:address:address:array:character/deref <- new character:literal, bufsize:number
mem: location 1007 is 6
mem: array size is 6
mem: new alloc: 1036
mem: location 1008 is 1035
mem: storing 1036 in location 1035
run: clear-screen result:address:screen
mem: location 1002 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1043
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1045
run: break-unless x:address:screen, 
mem: location 1045 is 1031
run: jump-unless fell through
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1045 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1045 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1046
run: max:number <- length buf:address:array:character/deref
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1046 is 1036
mem: storing 6 in location 1047
run: i:number <- copy 0:literal
mem: storing 0 in location 1048
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 0
mem: location 1047 is 6
mem: storing 0 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1048 is 0
mem: location 1046 is 1036
mem: location 1048 is 0
mem: storing 1037 in location 1050
run: c:address:character/deref <- copy [ ]
mem: location 1050 is 1037
mem: storing 0 in location 1037
run: i:number <- add i:number, 1:literal
mem: location 1048 is 0
mem: storing 1 in location 1048
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 1
mem: location 1047 is 6
mem: storing 0 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1048 is 1
mem: location 1046 is 1036
mem: location 1048 is 1
mem: storing 1038 in location 1050
run: c:address:character/deref <- copy [ ]
mem: location 1050 is 1038
mem: storing 0 in location 1038
run: i:number <- add i:number, 1:literal
mem: location 1048 is 1
mem: storing 2 in location 1048
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 2
mem: location 1047 is 6
mem: storing 0 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1048 is 2
mem: location 1046 is 1036
mem: location 1048 is 2
mem: storing 1039 in location 1050
run: c:address:character/deref <- copy [ ]
mem: location 1050 is 1039
mem: storing 0 in location 1039
run: i:number <- add i:number, 1:literal
mem: location 1048 is 2
mem: storing 3 in location 1048
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 3
mem: location 1047 is 6
mem: storing 0 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1048 is 3
mem: location 1046 is 1036
mem: location 1048 is 3
mem: storing 1040 in location 1050
run: c:address:character/deref <- copy [ ]
mem: location 1050 is 1040
mem: storing 0 in location 1040
run: i:number <- add i:number, 1:literal
mem: location 1048 is 3
mem: storing 4 in location 1048
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 4
mem: location 1047 is 6
mem: storing 0 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1048 is 4
mem: location 1046 is 1036
mem: location 1048 is 4
mem: storing 1041 in location 1050
run: c:address:character/deref <- copy [ ]
mem: location 1050 is 1041
mem: storing 0 in location 1041
run: i:number <- add i:number, 1:literal
mem: location 1048 is 4
mem: storing 5 in location 1048
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 5
mem: location 1047 is 6
mem: storing 0 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 0
run: jump-if fell through
run: c:address:character <- index-address buf:address:array:character/deref, i:number
mem: location 1046 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1048 is 5
mem: location 1046 is 1036
mem: location 1048 is 5
mem: storing 1042 in location 1050
run: c:address:character/deref <- copy [ ]
mem: location 1050 is 1042
mem: storing 0 in location 1042
run: i:number <- add i:number, 1:literal
mem: location 1048 is 5
mem: storing 6 in location 1048
run: loop 
run: jumping to instruction 8
run: done?:boolean <- greater-or-equal i:number, max:number
mem: location 1048 is 6
mem: location 1047 is 6
mem: storing 1 in location 1049
run: break-if done?:boolean, 
mem: location 1049 is 1
run: jumping to instruction 14
run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1045 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1045 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1051
run: cur:address:number/deref <- copy 0:literal
mem: location 1051 is 1033
mem: storing 0 in location 1033
run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1045 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1045 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1051
run: cur:address:number/deref <- copy 0:literal
mem: location 1051 is 1034
mem: storing 0 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1045 is 1031
run: reply result:address:screen
mem: location 1002 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: run [
    screen:address <- print-character screen:address, 97:literal  # 'a'
  ]
parse: instruction: print-character
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "97", properties: ["97": "literal"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
after-brace: recipe run1001
after-brace: print-character ...
run: screen:address <- print-character screen:address, 97:literal
mem: location 900 is 1031
run: default-space:address:array:location <- new location:type, 30:literal
mem: array size is 30
mem: new alloc: 1074
run: x:address:screen <- next-ingredient 
mem: storing 1031 in location 1076
run: c:character <- next-ingredient 
mem: storing 97 in location 1077
run: break-unless x:address:screen, 
mem: location 1076 is 1031
run: jump-unless fell through
run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
mem: location 1076 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1076 is 1031
run: address to copy is 1033
mem: storing 1033 in location 1078
run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
mem: location 1076 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1076 is 1031
run: address to copy is 1034
mem: storing 1034 in location 1079
run: width:number <- get x:address:screen/deref, num-columns:offset
mem: location 1076 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1076 is 1031
run: address to copy is 1032
run: its type is 1
mem: location 1032 is 3
mem: storing 3 in location 1080
run: height:number <- get x:address:screen/deref, num-rows:offset
mem: location 1076 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1076 is 1031
run: address to copy is 1031
run: its type is 1
mem: location 1031 is 2
mem: storing 2 in location 1081
run: max-row:number <- subtract height:number, 1:literal
mem: location 1081 is 2
mem: storing 1 in location 1082
run: newline?:boolean <- equal c:character, 10:literal/newlin
mem: location 1077 is 97
mem: storing 0 in location 1083
run: break-unless newline?:boolean, 
mem: location 1083 is 0
run: jumping to instruction 20
run: index:number <- multiply row:address:number/deref, width:number
mem: location 1078 is 1033
mem: location 1033 is 0
mem: location 1080 is 3
mem: storing 0 in location 1085
run: index:number <- add index:number, column:address:number/deref
mem: location 1085 is 0
mem: location 1079 is 1034
mem: location 1034 is 0
mem: storing 0 in location 1085
run: buf:address:array:character <- get x:address:screen/deref, data:offset
mem: location 1076 is 1031
mem: location 1031 is 2
mem: location 1032 is 3
mem: location 1033 is 0
mem: location 1034 is 0
mem: location 1035 is 1036
mem: location 1076 is 1031
run: address to copy is 1035
run: its type is 2
mem: location 1035 is 1036
mem: storing 1036 in location 1086
run: cursor:address:character <- index-address buf:address:array:character/deref, index:number
mem: location 1086 is 1036
mem: location 1036 is 6
mem: location 1037 is 0
mem: location 1038 is 0
mem: location 1039 is 0
mem: location 1040 is 0
mem: location 1041 is 0
mem: location 1042 is 0
mem: location 1085 is 0
mem: location 1086 is 1036
mem: location 1085 is 0
mem: storing 1037 in location 1087
run: backspace?:boolean <- equal c:character, 8:literal
mem: location 1077 is 97
mem: storing 0 in location 1088
run: break-unless backspace?:boolean, 
mem: location 1088 is 0
run: jumping to instruction 36
run: cursor:address:character/deref <- copy c:character
mem: location 1077 is 97
mem: location 1087 is 1037
mem: storing 97 in location 1037
run: at-right?:boolean <- equal column:address:number/deref, width:number
mem: location 1079 is 1034
mem: location 1034 is 0
mem: location 1080 is 3
mem: storing 0 in location 1090
run: break-if at-right?:boolean, 
mem: location 1090 is 0
run: jump-if fell through
run: column:address:number/deref <- add column:address:number/deref, 1:literal
mem: location 1079 is 1034
mem: location 1034 is 0
mem: location 1079 is 1034
mem: storing 1 in location 1034
run: reply x:address:screen/same-as-ingredient:0
mem: location 1076 is 1031
run: result 0 is 1031
mem: storing 1031 in location 900
run: screen-should-contain [
    .a  .
    .   .
  ]
