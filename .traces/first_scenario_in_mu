parse: instruction: run
parse:   ingredient: {name: "
    1:number <- add 2:literal, 2:literal
  ", value: 0, type: 0, properties: ["
    1:number <- add 2:literal, 2:literal
  ": "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    1 <- 4
  ", value: 0, type: 0, properties: ["
    1 <- 4
  ": "literal-string"]}
after-brace: recipe first_scenario_in_mu
after-brace: run ...
after-brace: memory-should-contain ...
new: routine allocated memory from 1000 to 101000
schedule: first_scenario_in_mu
run: instruction first_scenario_in_mu/0
run: run/55 {name: "
    1:number <- add 2:literal, 2:literal
  ", value: 0, type: 0, properties: ["
    1:number <- add 2:literal, 2:literal
  ": "literal-string"]}
run: ingredient 0 is 
    1:number <- add 2:literal, 2:literal
  
parse: instruction: add
parse:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse:   ingredient: {name: "2", value: 0, type: 0, properties: ["2": "literal"]}
parse:   product: {name: "1", value: 0, type: 1, properties: ["1": "number"]}
after-brace: recipe run1001
after-brace: add ...
run: instruction run1001/0
run: {name: "1", value: 1, type: 1, properties: ["1": "number"]} <- add/2 {name: "2", value: 2, type: 0, properties: ["2": "literal"]}, {name: "2", value: 2, type: 0, properties: ["2": "literal"]}
run: ingredient 0 is 2
run: ingredient 1 is 2
run: product 0 is 1
mem: storing 4 in location 1
run: instruction first_scenario_in_mu/1
run: memory-should-contain/56 {name: "
    1 <- 4
  ", value: 0, type: 0, properties: ["
    1 <- 4
  ": "literal-string"]}
run: ingredient 0 is 
    1 <- 4
  
run: checking location 1
