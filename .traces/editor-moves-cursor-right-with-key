 102 run: assume-console [
    press right-arrow
    type [0]
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"right-arrow": <>}
9992 load: after rewriting: press right-arrow
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1280
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1282
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1284
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1285
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1286
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1286 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1286 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1287
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1286 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1286 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1288
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1284 is 1009
9999 mem: location 1287 is 1
9999 mem: location 1288 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1197
 105 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 105 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 105 run: *column <- copy new-column
9999 mem: location 1197 is 0
9999 mem: location 1199 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1284
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1285 is 1280
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1245
 105 run: jump-unless x, 
9999 mem: location 1245 is 1280
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1271
9999 mem: location 1245 is 1280
9998 run: address to copy is 1280
9999 mem: storing 1280 in location 1246
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1271
9999 mem: location 1245 is 1280
9998 run: address to copy is 1281
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1281 is 1271
9999 mem: storing 1271 in location 1247
 105 run: max:number <- length *buf
9999 mem: location 1247 is 1271
9999 mem: storing 2 in location 1248
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1248 is 2
9999 mem: storing 0 in location 1249
 105 run: jump-unless done?, 
9999 mem: location 1249 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1247 is 1271
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 0
9998 run: address to copy is 1272
9998 run: its type is event
9999 mem: location 1272 is 1
9999 mem: location 1273 is 65514
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: storing 1 in location 1251
9999 mem: storing 65514 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 105 run: *idx <- add *idx, 1
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1246 is 1280
9999 mem: storing 1 in location 1280
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1251 is 1
9999 mem: location 1252 is 65514
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1245 is 1280
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1289
9999 mem: storing 65514 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 1280 in location 1285
9999 mem: storing 1 in location 1293
9999 mem: storing 0 in location 1294
 104 run: jump-unless found?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1289 is 1
9999 mem: location 1290 is 65514
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: storing 0 in location 1295
 104 run: jump-unless t, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1284 is 1009
9999 mem: location 1286 is 1115
9999 mem: location 1289 is 1
9999 mem: location 1290 is 65514
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1297
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1299
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1300
 105 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1301
9999 mem: storing 65514 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1305
 105 run: jump-if editor, 1:offset
9999 mem: location 1300 is 1115
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1299 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 106 run: jump-unless sc, 
9999 mem: location 1158 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1159
 106 run: reply width
9999 mem: location 1159 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1306
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1299 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 106 run: jump-unless sc, 
9999 mem: location 1158 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1159
 106 run: reply height
9999 mem: location 1159 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1307
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1308
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1309
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1310
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1311
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1312
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1311 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1313
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1312 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1314
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65514
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1315
 105 run: jump-unless c, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1301 is 1
9999 mem: location 1302 is 65514
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 1302 in location 1369
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1369 is 1302
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1332
 105 run: jump-unless page-up?, 
9999 mem: location 1332 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1348
 105 run: jump-unless page-down?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1355
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1356
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1370
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1371
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1371 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 0 in location 1372
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1369 is 1302
9999 mem: location 1302 is 65514
9999 mem: storing 1 in location 1374
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1374 is 1
9998 run: jump-unless fell through
 105 run: next-cursor:address:duplex-list:character <- next-duplex_2 *before-cursor
9999 mem: location 1310 is 1118
9999 mem: location 1118 is 1150
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1150 in location 1158
 106 run: jump-if in, 1:offset
9999 mem: location 1158 is 1150
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1158 is 1150
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 0
9999 mem: location 1158 is 1150
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1159
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1153
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: storing 1153 in location 1375
 105 run: jump-unless next-cursor, 
9999 mem: location 1375 is 1153
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1335
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1336
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1337
 105 run: *before-cursor <- copy next-cursor
9999 mem: location 1375 is 1153
9999 mem: location 1310 is 1118
9999 mem: storing 1153 in location 1118
 105 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1300 is 1115
9999 mem: location 1307 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: new alloc: 1383
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1385
 106 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1386
 106 run: before-cursor:address:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1385 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1385 is 1115
9998 run: address to copy is 1118
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1118 is 1153
9999 mem: storing 1153 in location 1387
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1385 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1385 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1388
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1385 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1385 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1389
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1385 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1385 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1390
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1385 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1385 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1391
 106 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1387 is 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1160
9999 mem: location 1155 is 1150
9999 mem: location 1387 is 1153
9998 run: address to copy is 1153
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1153 is 97
9999 mem: storing 97 in location 1392
 106 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1392 is 97
9999 mem: storing 0 in location 1393
 106 run: jump-unless was-at-newline?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 33
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1391 is 9
9999 mem: storing 8 in location 1400
 106 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1400 is 8
9999 mem: storing 0 in location 1401
 106 run: jump-unless at-wrap?, 
9999 mem: location 1401 is 0
9998 run: jumping to instruction 63
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1389 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1389 is 1122
9999 mem: storing 1 in location 1122
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1395
 106 run: reply editor:address:editor-data, go-render?:boolean
9999 mem: location 1385 is 1115
9999 mem: location 1395 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9998 run: result 1 is 0
9999 mem: storing 1115 in location 1300
9999 mem: storing 0 in location 1305
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1299 is 1009
9999 mem: location 1311 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1312 is 1122
9999 mem: location 1122 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1197
 106 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 106 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 106 run: *column <- copy new-column
9999 mem: location 1197 is 1
9999 mem: location 1199 is 1012
9999 mem: storing 1 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1299
 105 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1338
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1339
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1340
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1341
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1338 is 2
9998 run: jump-unless fell through
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1319
 105 run: jump-unless *undo, 
9999 mem: location 1319 is 1124
9999 mem: location 1124 is 0
9998 run: jumping to instruction 750
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1200 in location 1318
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1335 is 1
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1150
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1
9999 mem: location 1341 is 1150
9999 mem: location 1338 is 2
9999 mem: location 1318 is 1200
9999 mem: location 1318 is 1200
9999 mem: storing 1 in location 1200
9999 mem: storing 1 in location 1201
9999 mem: storing 0 in location 1202
9999 mem: storing 1150 in location 1203
9999 mem: storing 1 in location 1204
9999 mem: storing 1 in location 1205
9999 mem: storing 1150 in location 1206
9999 mem: storing 2 in location 1207
 105 run: editor <- add-operation editor, op
9999 mem: location 1300 is 1115
9999 mem: location 1318 is 1200
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1239
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1200 in location 1240
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1241
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1240 is 1200
9999 mem: location 1241 is 1124
9999 mem: location 1124 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1200 in location 1195
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1196
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1405
9999 mem: storing 1405 in location 1197
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1197 is 1405
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: location 1197 is 1405
9998 run: address to copy is 1405
9999 mem: storing 1405 in location 1198
 107 run: *val <- copy x
9999 mem: location 1195 is 1200
9999 mem: location 1198 is 1405
9999 mem: storing 1200 in location 1405
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1197 is 1405
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1405 is 1200
9999 mem: location 1406 is 0
9999 mem: location 1197 is 1405
9999 type: type deduced to be address$
9998 run: address to copy is 1406
9999 mem: storing 1406 in location 1199
 107 run: *next <- copy in
9999 mem: location 1196 is 0
9999 mem: location 1199 is 1406
9999 mem: storing 0 in location 1406
 107 run: reply result
9999 mem: location 1197 is 1405
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1405
9999 mem: location 1241 is 1124
9999 mem: storing 1405 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1242
 106 run: *redo <- copy 0
9999 mem: location 1242 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1239 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1300
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1299 is 1009
9999 mem: location 1300 is 1115
9999 mem: location 1305 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1115
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1284
9999 mem: storing 1115 in location 1286
9999 mem: storing 0 in location 1296
 104 run: jump-unless go-render?, 
9999 mem: location 1296 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1286 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1286 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1287
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1286 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1286 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1288
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1284 is 1009
9999 mem: location 1287 is 1
9999 mem: location 1288 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1197
 105 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 105 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 105 run: *column <- copy new-column
9999 mem: location 1197 is 1
9999 mem: location 1199 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1284
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1285 is 1280
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1245
 105 run: jump-unless x, 
9999 mem: location 1245 is 1280
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1281 is 1271
9999 mem: location 1245 is 1280
9998 run: address to copy is 1280
9999 mem: storing 1280 in location 1246
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1281 is 1271
9999 mem: location 1245 is 1280
9998 run: address to copy is 1281
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1281 is 1271
9999 mem: storing 1271 in location 1247
 105 run: max:number <- length *buf
9999 mem: location 1247 is 1271
9999 mem: storing 2 in location 1248
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1248 is 2
9999 mem: storing 0 in location 1249
 105 run: jump-unless done?, 
9999 mem: location 1249 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1247 is 1271
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 1
9998 run: address to copy is 1276
9998 run: its type is event
9999 mem: location 1276 is 0
9999 mem: location 1277 is 48
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1251
9999 mem: storing 48 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 105 run: *idx <- add *idx, 1
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1246 is 1280
9999 mem: storing 2 in location 1280
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1251 is 0
9999 mem: location 1252 is 48
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1245 is 1280
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1289
9999 mem: storing 48 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 1280 in location 1285
9999 mem: storing 1 in location 1293
9999 mem: storing 0 in location 1294
 104 run: jump-unless found?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1294 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1289 is 0
9999 mem: location 1290 is 48
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: storing 0 in location 1295
 104 run: jump-unless t, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1284 is 1009
9999 mem: location 1286 is 1115
9999 mem: location 1289 is 0
9999 mem: location 1290 is 48
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1299
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1300
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1301
9999 mem: storing 48 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1305
 105 run: jump-if editor, 1:offset
9999 mem: location 1300 is 1115
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1299 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 106 run: jump-unless sc, 
9999 mem: location 1158 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1159
 106 run: reply width
9999 mem: location 1159 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1306
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1299 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 106 run: jump-unless sc, 
9999 mem: location 1158 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1159
 106 run: reply height
9999 mem: location 1159 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1307
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1308
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1309
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1310
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1311
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1312
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1311 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1313
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1312 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1314
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1301 is 0
9999 mem: location 1302 is 48
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 1302 in location 1315
 105 run: jump-unless c, 
9999 mem: location 1315 is 1302
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1316
 105 run: jump-unless redo?, 
9999 mem: location 1316 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1327
 105 run: jump-unless undo?, 
9999 mem: location 1327 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1332
 105 run: jump-unless page-up?, 
9999 mem: location 1332 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1348
 105 run: jump-unless page-down?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1349
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1354
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1354 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1355
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1356
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1357
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1361
 105 run: jump-unless tab?, 
9999 mem: location 1361 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 0 in location 1365
 105 run: jump-unless newline?, 
9999 mem: location 1365 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: storing 1 in location 1368
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1305
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1368 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1350
 105 run: cursor-before:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1310 is 1118
9999 mem: location 1118 is 1153
9999 mem: storing 1153 in location 1362
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1300 is 1115
9999 mem: location 1315 is 1302
9999 mem: location 1302 is 48
9999 mem: location 1299 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: new alloc: 1407
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1409
 106 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1410
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1411
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1409 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1409 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1412
 106 run: insert-duplex_2 c, *before-cursor
9999 mem: location 1410 is 48
9999 mem: location 1412 is 1118
9999 mem: location 1118 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 48 in location 1144
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1153 in location 1145
 107 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1439
9999 mem: storing 1439 in location 1146
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1146 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1146 is 1439
9998 run: address to copy is 1439
9999 mem: storing 1439 in location 1147
 107 run: *val <- copy x
9999 mem: location 1144 is 48
9999 mem: location 1147 is 1439
9999 mem: storing 48 in location 1439
 107 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1145 is 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1160
9999 mem: location 1155 is 1150
9999 mem: location 1145 is 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1154
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1154 is 1160
9999 mem: storing 1160 in location 1148
 107 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1145 is 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1160
9999 mem: location 1155 is 1150
9999 mem: location 1145 is 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1149
 107 run: *y <- copy new-node
9999 mem: location 1146 is 1439
9999 mem: location 1149 is 1154
9999 mem: storing 1439 in location 1154
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1146 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 48
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: location 1146 is 1439
9999 type: type deduced to be character$
9998 run: address to copy is 1441
9999 mem: storing 1441 in location 1149
 107 run: *y <- copy in
9999 mem: location 1145 is 1153
9999 mem: location 1149 is 1441
9999 mem: storing 1153 in location 1441
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1146 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 48
9999 mem: location 1440 is 0
9999 mem: location 1441 is 1153
9999 mem: location 1146 is 1439
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9999 mem: storing 1440 in location 1149
 107 run: *y <- copy next-node
9999 mem: location 1148 is 1160
9999 mem: location 1149 is 1440
9999 mem: storing 1160 in location 1440
 107 run: jump-if next-node, 1:offset
9999 mem: location 1148 is 1160
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1148 is 1160
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1153
9999 mem: location 1148 is 1160
9999 type: type deduced to be character$
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1149
 107 run: *y <- copy new-node
9999 mem: location 1146 is 1439
9999 mem: location 1149 is 1162
9999 mem: storing 1439 in location 1162
 107 run: reply new-node
9999 mem: location 1146 is 1439
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next-duplex_2 *before-cursor
9999 mem: location 1412 is 1118
9999 mem: location 1118 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1153 in location 1158
 107 run: jump-if in, 1:offset
9999 mem: location 1158 is 1153
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1158 is 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1439
9999 mem: location 1155 is 1150
9999 mem: location 1158 is 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1154
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1154 is 1439
9999 mem: storing 1439 in location 1159
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1439
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1439
9999 mem: location 1412 is 1118
9999 mem: storing 1439 in location 1118
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1409 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1409 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1413
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1409 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1409 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1414
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1409 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1409 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1415
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1409 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1409 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1416
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1413 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1417
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1414 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1418
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1411 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 107 run: jump-unless sc, 
9999 mem: location 1158 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1159
 107 run: reply width
9999 mem: location 1159 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1419
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1411 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 107 run: jump-unless sc, 
9999 mem: location 1158 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1159
 107 run: reply height
9999 mem: location 1159 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1420
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1416 is 9
9999 mem: storing 8 in location 1421
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1414 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1421 is 8
9999 mem: storing 0 in location 1422
 106 run: jump-unless at-wrap?, 
9999 mem: location 1422 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1414 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1414 is 1122
9999 mem: storing 2 in location 1122
 106 run: next:address:duplex-list:character <- next-duplex_2 *before-cursor
9999 mem: location 1412 is 1118
9999 mem: location 1118 is 1439
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1439 in location 1158
9990 schedule: next-duplex_2/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-right-with-key
 107 run: jump-if in, 1:offset
9999 mem: location 1158 is 1439
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1158 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 48
9999 mem: location 1440 is 1160
9999 mem: location 1441 is 1153
9999 mem: location 1158 is 1439
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1440 is 1160
9999 mem: storing 1160 in location 1159
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1160
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1160
9999 mem: storing 1160 in location 1429
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1429 is 1160
9999 mem: storing 0 in location 1430
 106 run: jump-unless at-end?, 
9999 mem: location 1430 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1429 is 1160
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1414 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1419 is 10
9999 mem: storing 0 in location 1433
 106 run: jump-if at-right?, 
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: curr:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1412 is 1118
9999 mem: location 1118 is 1439
9999 mem: storing 1439 in location 1435
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1411 is 1009
9999 mem: location 1417 is 1
9999 mem: location 1418 is 1
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1197
 107 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 107 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 107 run: *column <- copy new-column
9999 mem: location 1197 is 1
9999 mem: location 1199 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1418 is 1
9999 mem: storing 1 in location 1436
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1428
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1436 is 1
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1433 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1435 is 1439
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1435 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 48
9999 mem: location 1440 is 1160
9999 mem: location 1441 is 1153
9999 mem: location 1435 is 1439
9998 run: address to copy is 1439
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1439 is 48
9999 mem: storing 48 in location 1437
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1437 is 48
9999 mem: storing 0 in location 1438
 106 run: jump-if at-newline?, 
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1411 is 1009
9999 mem: location 1437 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 107 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1214
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if color-found?, 
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 107 run: jump-if bg-color-found?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 107 run: trace 90, [print-character], c
9999 mem: location 1214 is 48
  90 print-character: 48 
 107 run: jump-unless sc, 
9999 mem: location 1213 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 48
9999 mem: storing 0 in location 1224
 107 run: jump-unless newline?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 107 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1227
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 107 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 48
9999 mem: storing 0 in location 1230
 107 run: jump-unless backspace?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 11
9999 mem: storing 1037 in location 1232
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1232 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1233
 107 run: *cursor-contents <- copy c
9999 mem: location 1214 is 48
9999 mem: location 1233 is 1037
9999 mem: storing 48 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1037
9999 mem: location 1037 is 48
9999 mem: location 1038 is 7
9999 mem: location 1232 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1234
 107 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 107 run: jump-if at-right?, 
9999 mem: location 1236 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1223 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1436 is 1
9999 mem: storing 2 in location 1436
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1435 is 1439
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1439 in location 1158
 107 run: jump-if in, 1:offset
9999 mem: location 1158 is 1439
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1158 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 48
9999 mem: location 1440 is 1160
9999 mem: location 1441 is 1153
9999 mem: location 1158 is 1439
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1440 is 1160
9999 mem: storing 1160 in location 1159
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1160
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1160
9999 mem: storing 1160 in location 1435
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1428
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1436 is 2
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1433 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1435 is 1160
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1435 is 1160
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1439
9999 mem: location 1435 is 1160
9998 run: address to copy is 1160
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1160 is 98
9999 mem: storing 98 in location 1437
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1437 is 98
9999 mem: storing 0 in location 1438
 106 run: jump-if at-newline?, 
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1411 is 1009
9999 mem: location 1437 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1214
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if color-found?, 
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 107 run: jump-if bg-color-found?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 107 run: trace 90, [print-character], c
9999 mem: location 1214 is 98
  90 print-character: 98 
 107 run: jump-unless sc, 
9999 mem: location 1213 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 98
9999 mem: storing 0 in location 1224
 107 run: jump-unless newline?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 107 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1227
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 107 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 98
9999 mem: storing 0 in location 1230
 107 run: jump-unless backspace?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 12
9999 mem: storing 1039 in location 1232
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1232 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1233
 107 run: *cursor-contents <- copy c
9999 mem: location 1214 is 98
9999 mem: location 1233 is 1039
9999 mem: storing 98 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1232 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1234
 107 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 107 run: jump-if at-right?, 
9999 mem: location 1236 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1223 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1436 is 2
9999 mem: storing 3 in location 1436
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1435 is 1160
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1160 in location 1158
 107 run: jump-if in, 1:offset
9999 mem: location 1158 is 1160
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1158 is 1160
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1439
9999 mem: location 1158 is 1160
9999 type: type deduced to be character$
9998 run: address to copy is 1161
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1159
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1163
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1163
9999 mem: storing 1163 in location 1435
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1428
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1436 is 3
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1433 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1435 is 1163
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1435 is 1163
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1160
9999 mem: location 1435 is 1163
9998 run: address to copy is 1163
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: character
9998 run: its type is character
9999 mem: location 1163 is 99
9999 mem: storing 99 in location 1437
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1437 is 99
9999 mem: storing 0 in location 1438
 106 run: jump-if at-newline?, 
9999 mem: location 1438 is 0
9998 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1411 is 1009
9999 mem: location 1437 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1214
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if color-found?, 
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 107 run: jump-if bg-color-found?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 107 run: trace 90, [print-character], c
9999 mem: location 1214 is 99
  90 print-character: 99 
 107 run: jump-unless sc, 
9999 mem: location 1213 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 107 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 99
9999 mem: storing 0 in location 1224
 107 run: jump-unless newline?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 107 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1227
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 107 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 99
9999 mem: storing 0 in location 1230
 107 run: jump-unless backspace?, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 13
9999 mem: storing 1041 in location 1232
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1232 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1233
 107 run: *cursor-contents <- copy c
9999 mem: location 1214 is 99
9999 mem: location 1233 is 1041
9999 mem: storing 99 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1232 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1234
 107 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 107 run: jump-if at-right?, 
9999 mem: location 1236 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1223 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1436 is 3
9999 mem: storing 4 in location 1436
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1435 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1163 in location 1158
 107 run: jump-if in, 1:offset
9999 mem: location 1158 is 1163
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1158 is 1163
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1160
9999 mem: location 1158 is 1163
9999 type: type deduced to be character$
9998 run: address to copy is 1164
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1159
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1435
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1428
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1436 is 4
9999 mem: location 1416 is 9
9999 mem: storing 0 in location 1433
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1433 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1435 is 0
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1428
 106 run: reply editor:address:editor-data, screen:address:screen, go-render?:boolean
9999 mem: location 1409 is 1115
9999 mem: location 1411 is 1009
9999 mem: location 1428 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9998 run: result 1 is 1009
9998 run: result 2 is 0
9999 mem: storing 1115 in location 1300
9999 mem: storing 1009 in location 1299
9999 mem: storing 0 in location 1305
 105 run: top-after:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1352
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1300 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1300 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1319
 105 run: jump-unless *undo, 
9999 mem: location 1319 is 1124
9999 mem: location 1124 is 1405
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1319 is 1124
9999 mem: location 1124 is 1405
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1405 in location 1158
 106 run: result <- get *in, value:offset
9999 mem: location 1158 is 1405
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1405 is 1200
9999 mem: location 1406 is 0
9999 mem: location 1158 is 1405
9998 run: address to copy is 1405
9999 transform:  === before replace: ?2000
9999 transform:  === after replace: <address : <operation : <>>>
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1405 is 1200
9999 mem: storing 1200 in location 1159
 106 run: reply result:_elem
9999 mem: location 1159 is 1200
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1200
9999 mem: storing 1200 in location 1318
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1318 is 1200
9999 mem: location 1200 is 1
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 1
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 2
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1318 is 1200
9999 mem: storing 0 in location 1325
 105 run: jump-unless typing, 
9999 mem: location 1325 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:duplex-list:character <- next-duplex_2 cursor-before
9999 mem: location 1362 is 1153
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1153 in location 1158
 106 run: jump-if in, 1:offset
9999 mem: location 1158 is 1153
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1158 is 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1439
9999 mem: location 1155 is 1150
9999 mem: location 1158 is 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1154
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1154 is 1439
9999 mem: storing 1439 in location 1159
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1439
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1439
9999 mem: storing 1439 in location 1326
 105 run: insert-to:address:duplex-list:character <- next-duplex_2 insert-from
9999 mem: location 1326 is 1439
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1439 in location 1158
 106 run: jump-if in, 1:offset
9999 mem: location 1158 is 1439
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1158 is 1439
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1439 is 48
9999 mem: location 1440 is 1160
9999 mem: location 1441 is 1153
9999 mem: location 1158 is 1439
9999 type: type deduced to be character$
9998 run: address to copy is 1440
9999 transform:  === before replace: <address : <duplex-list : <?2000 : <>>>>
9999 transform:  === after replace: <address : <duplex-list : <character : <>>>>
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1440 is 1160
9999 mem: storing 1160 in location 1159
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1159 is 1160
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1160
9999 mem: storing 1160 in location 1364
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1442
9999 mem: storing 1442 in location 1318
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1313 is 1
9999 mem: location 1314 is 1
9999 mem: location 1350 is 1150
9999 mem: location 1311 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1312 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1352 is 1150
9999 mem: location 1326 is 1439
9999 mem: location 1364 is 1160
9999 mem: location 1318 is 1442
9999 mem: location 1318 is 1442
9999 mem: storing 0 in location 1442
9999 mem: storing 1 in location 1443
9999 mem: storing 1 in location 1444
9999 mem: storing 1150 in location 1445
9999 mem: storing 1 in location 1446
9999 mem: storing 2 in location 1447
9999 mem: storing 1150 in location 1448
9999 mem: storing 1439 in location 1449
9999 mem: storing 1160 in location 1450
9999 mem: storing 1 in location 1451
 105 run: editor <- add-operation editor, op
9999 mem: location 1300 is 1115
9999 mem: location 1318 is 1442
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1239
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1442 in location 1240
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1405
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1241
 106 run: *undo <- push_3 op, *undo
9999 mem: location 1240 is 1442
9999 mem: location 1241 is 1124
9999 mem: location 1124 is 1405
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1442 in location 1195
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1405 in location 1196
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1453
9999 mem: storing 1453 in location 1197
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1197 is 1453
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1453 is 0
9999 mem: location 1454 is 0
9999 mem: location 1197 is 1453
9998 run: address to copy is 1453
9999 mem: storing 1453 in location 1198
 107 run: *val <- copy x
9999 mem: location 1195 is 1442
9999 mem: location 1198 is 1453
9999 mem: storing 1442 in location 1453
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1197 is 1453
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1453 is 1442
9999 mem: location 1454 is 0
9999 mem: location 1197 is 1453
9999 type: type deduced to be address$
9998 run: address to copy is 1454
9999 mem: storing 1454 in location 1199
 107 run: *next <- copy in
9999 mem: location 1196 is 1405
9999 mem: location 1199 is 1454
9999 mem: storing 1405 in location 1454
 107 run: reply result
9999 mem: location 1197 is 1453
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: location 1241 is 1124
9999 mem: storing 1453 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1453
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1242
 106 run: *redo <- copy 0
9999 mem: location 1242 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1239 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1300
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1299 is 1009
9999 mem: location 1300 is 1115
9999 mem: location 1305 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1115
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1284
9999 mem: storing 1115 in location 1286
9999 mem: storing 0 in location 1296
 104 run: jump-unless go-render?, 
9999 mem: location 1296 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1286 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1453
9999 mem: location 1125 is 0
9999 mem: location 1286 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1287
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1286 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1439
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1453
9999 mem: location 1125 is 0
9999 mem: location 1286 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 2
9999 mem: storing 2 in location 1288
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1284 is 1009
9999 mem: location 1287 is 1
9999 mem: location 1288 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 2 in location 1197
 105 run: jump-unless sc, 
9999 mem: location 1195 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 105 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 105 run: *column <- copy new-column
9999 mem: location 1197 is 2
9999 mem: location 1199 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1284
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1285 is 1280
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1245
 105 run: jump-unless x, 
9999 mem: location 1245 is 1280
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1245 is 1280
9999 mem: location 1280 is 2
9999 mem: location 1281 is 1271
9999 mem: location 1245 is 1280
9998 run: address to copy is 1280
9999 mem: storing 1280 in location 1246
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1245 is 1280
9999 mem: location 1280 is 2
9999 mem: location 1281 is 1271
9999 mem: location 1245 is 1280
9998 run: address to copy is 1281
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1281 is 1271
9999 mem: storing 1271 in location 1247
 105 run: max:number <- length *buf
9999 mem: location 1247 is 1271
9999 mem: storing 2 in location 1248
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1246 is 1280
9999 mem: location 1280 is 2
9999 mem: location 1248 is 2
9999 mem: storing 1 in location 1249
 105 run: jump-unless done?, 
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1156 in location 1250
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1250 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1245 is 1280
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1280
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 1280 in location 1285
9999 mem: storing 1 in location 1293
9999 mem: storing 1 in location 1294
 104 run: jump-unless found?, 
9999 mem: location 1293 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1294 is 1
9998 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .a0bc      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 3, [print-character]
9999 trace: fall-through: exiting scenario-editor-moves-cursor-right-with-key; decrementing callstack depth from 1
