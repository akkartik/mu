 101 run: assume-console [
    press 65514  # right arrow
    type [0]
  ]
parse: instruction: press
parse:   ingredient: {name: "65514", properties: ["65514": "literal"]}
parse: instruction: type
parse:   ingredient: {name: "0", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1278
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1243
 102 run: console:address <- next-ingredient 
9999 mem: storing 1278 in location 1244
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1245
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1244 is 1278
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1280
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1278 in location 1282
 103 run: break-unless x, 
9999 mem: location 1282 is 1278
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1282 is 1278
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1269
9999 mem: location 1282 is 1278
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1283
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1282 is 1278
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1269
9999 mem: location 1282 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1269
9999 mem: storing 1269 in location 1284
 103 run: max:number <- length *buf
9999 mem: location 1284 is 1269
9999 mem: storing 2 in location 1285
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 0
9999 mem: location 1285 is 2
9999 mem: storing 0 in location 1286
 103 run: break-unless done?, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1284 is 1269
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 0
9999 run: address to copy is 1270
9999 run: its type is event
9999 mem: location 1270 is 1
9999 mem: location 1271 is 65514
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
9999 mem: storing 1 in location 1288
9999 mem: storing 65514 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 103 run: *idx <- add *idx, 1
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 0
9999 mem: location 1283 is 1278
9999 mem: storing 1 in location 1278
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1288 is 1
9999 mem: location 1289 is 65514
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1278
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1278
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1246
9999 mem: storing 65514 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 1278 in location 1244
9999 mem: storing 1 in location 1250
9999 mem: storing 0 in location 1251
 102 run: loop-unless found?, 
9999 mem: location 1250 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1251 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1246 is 1
9999 mem: location 1247 is 65514
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: storing 0 in location 1252
 102 run: break-unless t, 
9999 mem: location 1252 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1243 is 1009
9999 mem: location 1245 is 1000
9999 mem: location 1246 is 1
9999 mem: location 1247 is 65514
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 55
9999 mem: new alloc: 1293
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1295
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1296
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1297
9999 mem: storing 65514 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
 103 run: jump-if editor, 1:offset
9999 mem: location 1296 is 1000
9999 run: jumping to instruction 6
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1295 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 104 run: break-unless sc, 
9999 mem: location 1167 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 104 run: reply height
9999 mem: location 1168 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1301
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1302
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1303
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1304
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1305
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1150
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1306
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1305 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1305 is 1006
9999 mem: location 1305 is 1006
9999 mem: storing 1 in location 1307
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1306 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1306 is 1007
9999 mem: location 1306 is 1007
9999 mem: storing 0 in location 1308
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65514
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: storing 0 in location 1309
 103 run: break-unless c, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 74
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1297 is 1
9999 mem: location 1298 is 65514
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: storing 1298 in location 1321
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1321 is 1298
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1322
 103 run: break-unless page-up?, 
9999 mem: location 1322 is 0
9999 run: jumping to instruction 83
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1323
 103 run: break-unless page-down?, 
9999 mem: location 1323 is 0
9999 run: jumping to instruction 89
 103 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1324
 103 run: break-unless end?, 
9999 mem: location 1324 is 0
9999 run: jumping to instruction 95
 103 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1325
 103 run: break-unless home?, 
9999 mem: location 1325 is 0
9999 run: jumping to instruction 101
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1326
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1326 is 0
9999 run: jumping to instruction 121
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1331
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1331 is 0
9999 run: jumping to instruction 137
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 0 in location 1333
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1333 is 0
9999 run: jumping to instruction 145
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1321 is 1298
9999 mem: location 1298 is 65514
9999 mem: storing 1 in location 1335
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1335 is 1
9999 run: jump-unless fell through
 103 run: old-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1304 is 1003
9999 mem: location 1003 is 1150
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1167
 104 run: jump-if in, 1:offset
9999 mem: location 1167 is 1150
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1162
9999 mem: location 1152 is 0
9999 mem: location 1167 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1162
9999 mem: storing 1162 in location 1168
 104 run: reply result
9999 mem: location 1168 is 1162
9999 run: result 0 is 1162
9999 mem: storing 1162 in location 1336
 103 run: break-unless old-cursor, 
9999 mem: location 1336 is 1162
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy old-cursor
9999 mem: location 1336 is 1162
9999 mem: location 1304 is 1003
9999 mem: location 1304 is 1003
9999 mem: storing 1162 in location 1003
 103 run: old-cursor-character:character <- get **before-cursor, value:offset
9999 mem: location 1304 is 1003
9999 mem: location 1003 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1150
9999 mem: location 1304 is 1003
9999 mem: location 1003 is 1162
9999 run: address to copy is 1162
9999 run: its type is number
9999 mem: location 1162 is 97
9999 mem: storing 97 in location 1337
 103 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1338
 103 run: break-unless was-at-newline?, 
9999 mem: location 1338 is 0
9999 run: jumping to instruction 170
 103 run: wrap-column:number <- subtract right, 1
9999 mem: location 1303 is 9
9999 mem: storing 8 in location 1340
 103 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1306 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1340 is 8
9999 mem: storing 0 in location 1341
 103 run: break-unless at-wrap?, 
9999 mem: location 1341 is 0
9999 run: jumping to instruction 194
 103 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1306 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1306 is 1007
9999 mem: storing 1 in location 1007
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1295 is 1009
9999 mem: location 1305 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1306 is 1007
9999 mem: location 1007 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1205
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1206
 104 run: break-unless sc, 
9999 mem: location 1204 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1207
 104 run: *row <- copy new-row
9999 mem: location 1205 is 1
9999 mem: location 1207 is 1011
9999 mem: location 1207 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1208
 104 run: *column <- copy new-column
9999 mem: location 1206 is 1
9999 mem: location 1208 is 1012
9999 mem: location 1208 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1204 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1295
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1295 is 1009
9999 mem: location 1296 is 1000
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1243
9999 mem: storing 1000 in location 1245
9999 mem: storing 0 in location 1253
 102 run: break-unless go-render?, 
9999 mem: location 1253 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1244 is 1278
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1278 in location 1282
 103 run: break-unless x, 
9999 mem: location 1282 is 1278
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1282 is 1278
9999 mem: location 1278 is 1
9999 mem: location 1279 is 1269
9999 mem: location 1282 is 1278
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1283
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1282 is 1278
9999 mem: location 1278 is 1
9999 mem: location 1279 is 1269
9999 mem: location 1282 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1269
9999 mem: storing 1269 in location 1284
 103 run: max:number <- length *buf
9999 mem: location 1284 is 1269
9999 mem: storing 2 in location 1285
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 1
9999 mem: location 1285 is 2
9999 mem: storing 0 in location 1286
 103 run: break-unless done?, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1284 is 1269
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 1
9999 run: address to copy is 1274
9999 run: its type is event
9999 mem: location 1274 is 0
9999 mem: location 1275 is 48
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: storing 0 in location 1288
9999 mem: storing 48 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
 103 run: *idx <- add *idx, 1
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 1
9999 mem: location 1283 is 1278
9999 mem: storing 2 in location 1278
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1288 is 0
9999 mem: location 1289 is 48
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1282 is 1278
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1278
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1246
9999 mem: storing 48 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 1278 in location 1244
9999 mem: storing 1 in location 1250
9999 mem: storing 0 in location 1251
 102 run: loop-unless found?, 
9999 mem: location 1250 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1251 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1246 is 0
9999 mem: location 1247 is 48
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: storing 0 in location 1252
 102 run: break-unless t, 
9999 mem: location 1252 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1243 is 1009
9999 mem: location 1245 is 1000
9999 mem: location 1246 is 0
9999 mem: location 1247 is 48
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 55
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1295
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1296
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1297
9999 mem: storing 48 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
 103 run: jump-if editor, 1:offset
9999 mem: location 1296 is 1000
9999 run: jumping to instruction 6
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1295 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 104 run: break-unless sc, 
9999 mem: location 1167 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 104 run: reply height
9999 mem: location 1168 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1301
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1302
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1303
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1304
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1305
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1296 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1296 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1306
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1305 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1305 is 1006
9999 mem: location 1305 is 1006
9999 mem: storing 1 in location 1307
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1306 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1306 is 1007
9999 mem: location 1306 is 1007
9999 mem: storing 1 in location 1308
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1297 is 0
9999 mem: location 1298 is 48
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: storing 1298 in location 1309
 103 run: break-unless c, 
9999 mem: location 1309 is 1298
9999 run: jump-unless fell through
 103 run: ctrl-b?:boolean <- equal *c, 2/ctrl-f
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1310
 103 run: break-unless ctrl-b?, 
9999 mem: location 1310 is 0
9999 run: jumping to instruction 23
 103 run: ctrl-f?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1311
 103 run: break-unless ctrl-f?, 
9999 mem: location 1311 is 0
9999 run: jumping to instruction 29
 103 run: ctrl-k?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1312
 103 run: break-unless ctrl-k?, 
9999 mem: location 1312 is 0
9999 run: jumping to instruction 35
 103 run: ctrl-u?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1313
 103 run: break-unless ctrl-u?, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 41
 103 run: ctrl-e?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1314
 103 run: break-unless ctrl-e?, 
9999 mem: location 1314 is 0
9999 run: jumping to instruction 47
 103 run: ctrl-a?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1315
 103 run: break-unless ctrl-a?, 
9999 mem: location 1315 is 0
9999 run: jumping to instruction 53
 103 run: backspace?:boolean <- equal *c, 8/backspace
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1316
 103 run: break-unless backspace?, 
9999 mem: location 1316 is 0
9999 run: jumping to instruction 59
 103 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1317
 103 run: break-unless tab?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 66
 103 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 1 in location 1318
 103 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: storing 0 in location 1319
 103 run: regular-character? <- or regular-character?, newline?
9999 mem: location 1318 is 1
9999 mem: location 1319 is 0
9999 mem: storing 1 in location 1318
 103 run: jump-if regular-character?, 1:offset
9999 mem: location 1318 is 1
9999 run: jumping to instruction 72
 103 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1296 is 1000
9999 mem: location 1309 is 1298
9999 mem: location 1298 is 48
9999 mem: location 1295 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 35
9999 mem: new alloc: 1349
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1351
 104 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1352
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1353
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1351 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1162
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1351 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1354
 104 run: insert-duplex c, *before-cursor
9999 mem: location 1352 is 48
9999 mem: location 1354 is 1003
9999 mem: location 1003 is 1162
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:location <- next-ingredient 
9999 mem: storing 48 in location 1144
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1162 in location 1145
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1385
9999 mem: storing 1385 in location 1146
 105 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1146 is 1385
9999 mem: location 1385 is 0
9999 mem: location 1386 is 0
9999 mem: location 1387 is 0
9999 mem: location 1146 is 1385
9999 run: address to copy is 1385
9999 mem: storing 1385 in location 1147
 105 run: *val <- copy x
9999 mem: location 1144 is 48
9999 mem: location 1147 is 1385
9999 mem: location 1147 is 1385
9999 mem: storing 48 in location 1385
 105 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1145 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1150
9999 mem: location 1145 is 1162
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1148
 105 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1145 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1150
9999 mem: location 1145 is 1162
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1149
 105 run: *y <- copy new-node
9999 mem: location 1146 is 1385
9999 mem: location 1149 is 1163
9999 mem: location 1149 is 1163
9999 mem: storing 1385 in location 1163
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1146 is 1385
9999 mem: location 1385 is 48
9999 mem: location 1386 is 0
9999 mem: location 1387 is 0
9999 mem: location 1146 is 1385
9999 run: address to copy is 1387
9999 mem: storing 1387 in location 1149
 105 run: *y <- copy in
9999 mem: location 1145 is 1162
9999 mem: location 1149 is 1387
9999 mem: location 1149 is 1387
9999 mem: storing 1162 in location 1387
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1146 is 1385
9999 mem: location 1385 is 48
9999 mem: location 1386 is 0
9999 mem: location 1387 is 1162
9999 mem: location 1146 is 1385
9999 run: address to copy is 1386
9999 mem: storing 1386 in location 1149
 105 run: *y <- copy next-node
9999 mem: location 1148 is 1169
9999 mem: location 1149 is 1386
9999 mem: location 1149 is 1386
9999 mem: storing 1169 in location 1386
 105 run: jump-if next-node, 1:offset
9999 mem: location 1148 is 1169
9999 run: jumping to instruction 15
 105 run: y <- get-address *next-node, prev:offset
9999 mem: location 1148 is 1169
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1148 is 1169
9999 run: address to copy is 1171
9999 mem: storing 1171 in location 1149
 105 run: *y <- copy new-node
9999 mem: location 1146 is 1385
9999 mem: location 1149 is 1171
9999 mem: location 1149 is 1171
9999 mem: storing 1385 in location 1171
 105 run: reply new-node
9999 mem: location 1146 is 1385
 104 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1354 is 1003
9999 mem: location 1003 is 1162
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1162 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1385
9999 mem: location 1164 is 1150
9999 mem: location 1167 is 1162
9999 run: address to copy is 1163
9999 run: its type is address
9999 mem: location 1163 is 1385
9999 mem: storing 1385 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1385
9999 run: result 0 is 1385
9999 mem: location 1354 is 1003
9999 mem: storing 1385 in location 1003
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1351 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1385
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1351 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1355
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1351 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1385
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1351 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1356
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1351 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1385
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1351 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1357
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1351 is 1000
9999 mem: location 1000 is 1150
9999 mem: location 1001 is 1150
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1385
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1351 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1358
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1355 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1355 is 1006
9999 mem: location 1355 is 1006
9999 mem: storing 1 in location 1359
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1356 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1356 is 1007
9999 mem: location 1356 is 1007
9999 mem: storing 1 in location 1360
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1353 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 105 run: break-unless sc, 
9999 mem: location 1167 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1168
 105 run: reply width
9999 mem: location 1168 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1361
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1353 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 105 run: break-unless sc, 
9999 mem: location 1167 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 105 run: reply height
9999 mem: location 1168 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1362
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1352 is 48
9999 mem: storing 0 in location 1363
 104 run: break-unless newline?, 
9999 mem: location 1363 is 0
9999 run: jumping to instruction 47
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1358 is 9
9999 mem: storing 8 in location 1373
 104 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1356 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1373 is 8
9999 mem: storing 0 in location 1374
 104 run: break-unless at-wrap?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 65
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1356 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1356 is 1007
9999 mem: storing 2 in location 1007
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1354 is 1003
9999 mem: location 1003 is 1385
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1385 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1385
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1385
9999 mem: location 1385 is 48
9999 mem: location 1386 is 1169
9999 mem: location 1387 is 1162
9999 mem: location 1167 is 1385
9999 run: address to copy is 1386
9999 run: its type is address
9999 mem: location 1386 is 1169
9999 mem: storing 1169 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1375
 104 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1375 is 1169
9999 mem: storing 0 in location 1376
 104 run: break-unless at-end?, 
9999 mem: location 1376 is 0
9999 run: jumping to instruction 79
 104 run: break-unless next, 
9999 mem: location 1375 is 1169
9999 run: jump-unless fell through
 104 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1356 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1361 is 10
9999 mem: storing 0 in location 1379
 104 run: break-if at-right?, 
9999 mem: location 1379 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1354 is 1003
9999 mem: location 1003 is 1385
9999 mem: location 1354 is 1003
9999 mem: location 1354 is 1003
9999 mem: storing 1385 in location 1381
 104 run: move-cursor screen, save-row, save-column
9999 mem: location 1353 is 1009
9999 mem: location 1359 is 1
9999 mem: location 1360 is 1
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1205
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1206
 105 run: break-unless sc, 
9999 mem: location 1204 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1207
 105 run: *row <- copy new-row
9999 mem: location 1205 is 1
9999 mem: location 1207 is 1011
9999 mem: location 1207 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1204 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1204 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1208
 105 run: *column <- copy new-column
9999 mem: location 1206 is 1
9999 mem: location 1208 is 1012
9999 mem: location 1208 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1204 is 1009
 104 run: curr-column:number <- copy save-column
9999 mem: location 1360 is 1
9999 mem: storing 1 in location 1382
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1382 is 1
9999 mem: location 1361 is 10
9999 mem: storing 0 in location 1379
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1379 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1381 is 1385
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1381 is 1385
9999 mem: location 1385 is 48
9999 mem: location 1386 is 1169
9999 mem: location 1387 is 1162
9999 mem: location 1381 is 1385
9999 run: address to copy is 1385
9999 run: its type is number
9999 mem: location 1385 is 48
9999 mem: storing 48 in location 1383
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1383 is 48
9999 mem: storing 0 in location 1384
 104 run: break-if at-newline?, 
9999 mem: location 1384 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1353 is 1009
9999 mem: location 1383 is 48
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1212
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 105 run: break-if color-found?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1213
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 105 run: break-if bg-color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1215
 105 run: trace 90, [print-character], c
9999 mem: location 1212 is 48
  90 print-character: 48 
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1219
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1212 is 48
9999 mem: storing 0 in location 1222
 105 run: break-unless newline?, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: index <- add index, *column
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
 105 run: len:number <- length *buf
9999 mem: location 1226 is 1014
9999 mem: storing 50 in location 1227
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1212 is 48
9999 mem: storing 0 in location 1228
 105 run: break-unless backspace?, 
9999 mem: location 1228 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1226 is 1014
9999 mem: location 1225 is 11
9999 mem: storing 1037 in location 1230
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1230 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1230 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1231
 105 run: *cursor-contents <- copy c
9999 mem: location 1212 is 48
9999 mem: location 1231 is 1037
9999 mem: location 1231 is 1037
9999 mem: storing 48 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1230 is 1037
9999 mem: location 1037 is 48
9999 mem: location 1038 is 7
9999 mem: location 1230 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1232
 105 run: *cursor-color <- copy color
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1038
9999 mem: location 1232 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: break-if at-right?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1382 is 1
9999 mem: storing 2 in location 1382
 104 run: curr <- next-duplex curr
9999 mem: location 1381 is 1385
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1385 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1385
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1385
9999 mem: location 1385 is 48
9999 mem: location 1386 is 1169
9999 mem: location 1387 is 1162
9999 mem: location 1167 is 1385
9999 run: address to copy is 1386
9999 run: its type is address
9999 mem: location 1386 is 1169
9999 mem: storing 1169 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1169
9999 run: result 0 is 1169
9999 mem: storing 1169 in location 1381
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1382 is 2
9999 mem: location 1361 is 10
9999 mem: storing 0 in location 1379
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1379 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1381 is 1169
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1381 is 1169
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1385
9999 mem: location 1381 is 1169
9999 run: address to copy is 1169
9999 run: its type is number
9999 mem: location 1169 is 98
9999 mem: storing 98 in location 1383
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1383 is 98
9999 mem: storing 0 in location 1384
 104 run: break-if at-newline?, 
9999 mem: location 1384 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1353 is 1009
9999 mem: location 1383 is 98
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
schedule: print-character/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-right-with-key
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1212
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 105 run: break-if color-found?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1213
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 105 run: break-if bg-color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1215
 105 run: trace 90, [print-character], c
9999 mem: location 1212 is 98
  90 print-character: 98 
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1219
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 105 run: break-unless newline?, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: index <- add index, *column
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
 105 run: len:number <- length *buf
9999 mem: location 1226 is 1014
9999 mem: storing 50 in location 1227
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 105 run: break-unless backspace?, 
9999 mem: location 1228 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1226 is 1014
9999 mem: location 1225 is 12
9999 mem: storing 1039 in location 1230
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1230 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1230 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1231
 105 run: *cursor-contents <- copy c
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1039
9999 mem: location 1231 is 1039
9999 mem: storing 98 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1230 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1230 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1232
 105 run: *cursor-color <- copy color
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1040
9999 mem: location 1232 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: break-if at-right?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1382 is 2
9999 mem: storing 3 in location 1382
 104 run: curr <- next-duplex curr
9999 mem: location 1381 is 1169
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1169 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1385
9999 mem: location 1167 is 1169
9999 run: address to copy is 1170
9999 run: its type is address
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 105 run: reply result
9999 mem: location 1168 is 1172
9999 run: result 0 is 1172
9999 mem: storing 1172 in location 1381
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1382 is 3
9999 mem: location 1361 is 10
9999 mem: storing 0 in location 1379
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1379 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1381 is 1172
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1381 is 1172
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1169
9999 mem: location 1381 is 1172
9999 run: address to copy is 1172
9999 run: its type is number
9999 mem: location 1172 is 99
9999 mem: storing 99 in location 1383
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1383 is 99
9999 mem: storing 0 in location 1384
 104 run: break-if at-newline?, 
9999 mem: location 1384 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1353 is 1009
9999 mem: location 1383 is 99
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1212
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 105 run: break-if color-found?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1213
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 105 run: break-if bg-color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1215
 105 run: trace 90, [print-character], c
9999 mem: location 1212 is 99
  90 print-character: 99 
 105 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1219
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if legal?, 1:offset
9999 mem: location 1220 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 105 run: break-unless newline?, 
9999 mem: location 1222 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1219 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: index <- add index, *column
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
 105 run: len:number <- length *buf
9999 mem: location 1226 is 1014
9999 mem: storing 50 in location 1227
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 105 run: break-unless backspace?, 
9999 mem: location 1228 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1226 is 1014
9999 mem: location 1225 is 13
9999 mem: storing 1041 in location 1230
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1230 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1230 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1231
 105 run: *cursor-contents <- copy c
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1041
9999 mem: location 1231 is 1041
9999 mem: storing 99 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1230 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1230 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1232
 105 run: *cursor-color <- copy color
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1042
9999 mem: location 1232 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: break-if at-right?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1382 is 3
9999 mem: storing 4 in location 1382
 104 run: curr <- next-duplex curr
9999 mem: location 1381 is 1172
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1172 in location 1167
 105 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 mem: location 1172 is 99
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 run: address to copy is 1173
9999 run: its type is address
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1168
 105 run: reply result
9999 mem: location 1168 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1381
 104 run: loop 
9999 run: jumping to instruction 88
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1382 is 4
9999 mem: location 1361 is 10
9999 mem: storing 0 in location 1379
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1379 is 0
9999 run: jumping to instruction 91
 104 run: break-unless curr, 
9999 mem: location 1381 is 0
9999 run: jumping to instruction 99
 104 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1351 is 1000
9999 mem: location 1353 is 1009
9999 run: result 0 is 1000
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1000 in location 1296
9999 mem: storing 1009 in location 1295
9999 mem: storing 0 in location 1320
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1295 is 1009
9999 mem: location 1296 is 1000
9999 mem: location 1320 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1243
9999 mem: storing 1000 in location 1245
9999 mem: storing 0 in location 1253
 102 run: break-unless go-render?, 
9999 mem: location 1253 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1244 is 1278
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1278 in location 1282
 103 run: break-unless x, 
9999 mem: location 1282 is 1278
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1282 is 1278
9999 mem: location 1278 is 2
9999 mem: location 1279 is 1269
9999 mem: location 1282 is 1278
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1283
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1282 is 1278
9999 mem: location 1278 is 2
9999 mem: location 1279 is 1269
9999 mem: location 1282 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1269
9999 mem: storing 1269 in location 1284
 103 run: max:number <- length *buf
9999 mem: location 1284 is 1269
9999 mem: storing 2 in location 1285
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1283 is 1278
9999 mem: location 1278 is 2
9999 mem: location 1285 is 2
9999 mem: storing 1 in location 1286
 103 run: break-unless done?, 
9999 mem: location 1286 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1165 in location 1287
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1287 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1282 is 1278
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1278
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 1278 in location 1244
9999 mem: storing 1 in location 1250
9999 mem: storing 1 in location 1251
 102 run: loop-unless found?, 
9999 mem: location 1250 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1251 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .a0bc      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 100 run: check-trace-count-for-label 3, [print-character]
