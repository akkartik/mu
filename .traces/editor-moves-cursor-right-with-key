 101 run: assume-console [
    press right-arrow
    type [0]
  ]
parse: instruction: press
parse:   ingredient: {name: "right-arrow", properties: ["right-arrow": ]}
parse: instruction: type
parse:   ingredient: {name: "0", properties: [_: "literal-string"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1280
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1245
 102 run: console:address <- next-ingredient 
9999 mem: storing 1280 in location 1246
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1247
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1246 is 1280
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1282
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1284
 103 run: break-unless x, 
9999 mem: location 1284 is 1280
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1284 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1271
9999 mem: location 1284 is 1280
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1285
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1284 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1271
9999 mem: location 1284 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 1271
9999 mem: storing 1271 in location 1286
 103 run: max:number <- length *buf
9999 mem: location 1286 is 1271
9999 mem: storing 2 in location 1287
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1287 is 2
9999 mem: storing 0 in location 1288
 103 run: break-unless done?, 
9999 mem: location 1288 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1286 is 1271
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 0
9999 run: address to copy is 1272
9999 run: its type is event
9999 mem: location 1272 is 1
9999 mem: location 1273 is 65514
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: storing 1 in location 1290
9999 mem: storing 65514 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 103 run: *idx <- add *idx, 1
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1285 is 1280
9999 mem: storing 1 in location 1280
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1290 is 1
9999 mem: location 1291 is 65514
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1284 is 1280
9999 run: result 0 is [1, 65514, 0, 0]
9999 run: result 1 is 1280
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1248
9999 mem: storing 65514 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 1280 in location 1246
9999 mem: storing 1 in location 1252
9999 mem: storing 0 in location 1253
 102 run: loop-unless found?, 
9999 mem: location 1252 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1248 is 1
9999 mem: location 1249 is 65514
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1254
 102 run: break-unless t, 
9999 mem: location 1254 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1245 is 1009
9999 mem: location 1247 is 1115
9999 mem: location 1248 is 1
9999 mem: location 1249 is 65514
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1295
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1298
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1299
9999 mem: storing 65514 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
 103 run: jump-if editor, 1:offset
9999 mem: location 1298 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1297 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 104 run: break-unless sc, 
9999 mem: location 1158 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1159
 104 run: reply width
9999 mem: location 1159 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1303
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1297 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 104 run: break-unless sc, 
9999 mem: location 1158 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1159
 104 run: reply height
9999 mem: location 1159 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1304
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1305
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1306
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1307
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1308
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1309
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1308 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1308 is 1121
9999 mem: location 1308 is 1121
9999 mem: storing 1 in location 1310
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1309 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1309 is 1122
9999 mem: location 1309 is 1122
9999 mem: storing 0 in location 1311
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1299 is 1
9999 mem: location 1300 is 65514
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1312
 103 run: break-unless c, 
9999 mem: location 1312 is 0
9999 run: jumping to instruction 432
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1299 is 1
9999 mem: location 1300 is 65514
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 1300 in location 1367
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1367 is 1300
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1329
 103 run: break-unless page-up?, 
9999 mem: location 1329 is 0
9999 run: jumping to instruction 477
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1345
 103 run: break-unless page-down?, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 519
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1352
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1352 is 0
9999 run: jumping to instruction 556
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1353
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 593
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1368
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 630
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1369
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 667
 103 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 0 in location 1370
 103 run: break-unless move-to-previous-character?, 
9999 mem: location 1370 is 0
9999 run: jumping to instruction 709
 103 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1367 is 1300
9999 mem: location 1300 is 65514
9999 mem: storing 1 in location 1372
 103 run: break-unless move-to-next-character?, 
9999 mem: location 1372 is 1
9999 run: jump-unless fell through
 103 run: next-cursor:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 1150
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1150 in location 1158
 104 run: jump-if in, 1:offset
9999 mem: location 1158 is 1150
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1150
9999 mem: location 1150 is 167
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 0
9999 mem: location 1158 is 1150
9999 run: address to copy is 1151
9999 run: its type is address
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1159
 104 run: reply result
9999 mem: location 1159 is 1153
9999 run: result 0 is 1153
9999 mem: storing 1153 in location 1373
 103 run: break-unless next-cursor, 
9999 mem: location 1373 is 1153
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1332
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1333
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1150
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1334
 103 run: *before-cursor <- copy next-cursor
9999 mem: location 1373 is 1153
9999 mem: location 1307 is 1118
9999 mem: location 1307 is 1118
9999 mem: storing 1153 in location 1118
 103 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1298 is 1115
9999 mem: location 1304 is 5
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: new alloc: 1381
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1383
 104 run: screen-height:number <- next-ingredient 
9999 mem: storing 5 in location 1384
 104 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1383 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1383 is 1115
9999 run: address to copy is 1118
9999 run: its type is address
9999 mem: location 1118 is 1153
9999 mem: storing 1153 in location 1385
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1383 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1383 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1386
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1383 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1383 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1387
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1383 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1383 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1388
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1383 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1383 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1389
 104 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1385 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1160
9999 mem: location 1155 is 1150
9999 mem: location 1385 is 1153
9999 run: address to copy is 1153
9999 run: its type is number
9999 mem: location 1153 is 97
9999 mem: storing 97 in location 1390
 104 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1390 is 97
9999 mem: storing 0 in location 1391
 104 run: break-unless was-at-newline?, 
9999 mem: location 1391 is 0
9999 run: jumping to instruction 30
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1389 is 9
9999 mem: storing 8 in location 1397
 104 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1387 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1397 is 8
9999 mem: storing 0 in location 1398
 104 run: break-unless at-wrap?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 58
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1387 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1387 is 1122
9999 mem: storing 1 in location 1122
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1383 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1298
9999 mem: storing 0 in location 1355
 103 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1297 is 1009
9999 mem: location 1308 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1309 is 1122
9999 mem: location 1122 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1197
 104 run: break-unless sc, 
9999 mem: location 1195 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 104 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 104 run: *column <- copy new-column
9999 mem: location 1197 is 1
9999 mem: location 1199 is 1012
9999 mem: location 1199 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1297
 103 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1335
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1336
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1337
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1338
 103 run: break-unless undo-coalesce-tag, 
9999 mem: location 1335 is 2
9999 run: jump-unless fell through
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1316
 103 run: break-unless *undo, 
9999 mem: location 1316 is 1124
9999 mem: location 1124 is 0
9999 run: jumping to instruction 743
 103 run: op:address:operation <- new operation:type
9999 mem: storing 1200 in location 1315
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1332 is 1
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1150
9999 mem: location 1336 is 1
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1150
9999 mem: location 1335 is 2
9999 mem: location 1315 is 1200
9999 mem: location 1315 is 1200
9999 mem: storing 1 in location 1200
9999 mem: storing 1 in location 1201
9999 mem: storing 0 in location 1202
9999 mem: storing 1150 in location 1203
9999 mem: storing 1 in location 1204
9999 mem: storing 1 in location 1205
9999 mem: storing 1150 in location 1206
9999 mem: storing 2 in location 1207
 103 run: editor <- add-operation editor, op
9999 mem: location 1298 is 1115
9999 mem: location 1315 is 1200
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1239
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1200 in location 1240
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1241
 104 run: *undo <- push op, *undo
9999 mem: location 1240 is 1200
9999 mem: location 1241 is 1124
9999 mem: location 1124 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1200 in location 1195
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1196
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1402
9999 mem: storing 1402 in location 1197
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1197 is 1402
9999 mem: location 1402 is 0
9999 mem: location 1403 is 0
9999 mem: location 1197 is 1402
9999 run: address to copy is 1402
9999 mem: storing 1402 in location 1198
 105 run: *val <- copy x
9999 mem: location 1195 is 1200
9999 mem: location 1198 is 1402
9999 mem: location 1198 is 1402
9999 mem: storing 1200 in location 1402
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1197 is 1402
9999 mem: location 1402 is 1200
9999 mem: location 1403 is 0
9999 mem: location 1197 is 1402
9999 run: address to copy is 1403
9999 mem: storing 1403 in location 1199
 105 run: *next <- copy in
9999 mem: location 1196 is 0
9999 mem: location 1199 is 1403
9999 mem: location 1199 is 1403
9999 mem: storing 0 in location 1403
 105 run: reply result
9999 mem: location 1197 is 1402
9999 run: result 0 is 1402
9999 mem: location 1241 is 1124
9999 mem: storing 1402 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1242
 104 run: *redo <- copy 0
9999 mem: location 1242 is 1125
9999 mem: location 1242 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1239 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1298
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1297 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1355 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1245
9999 mem: storing 1115 in location 1247
9999 mem: storing 0 in location 1255
 102 run: break-unless go-render?, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1246 is 1280
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1284
 103 run: break-unless x, 
9999 mem: location 1284 is 1280
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1284 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1281 is 1271
9999 mem: location 1284 is 1280
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1285
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1284 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1281 is 1271
9999 mem: location 1284 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 1271
9999 mem: storing 1271 in location 1286
 103 run: max:number <- length *buf
9999 mem: location 1286 is 1271
9999 mem: storing 2 in location 1287
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1287 is 2
9999 mem: storing 0 in location 1288
 103 run: break-unless done?, 
9999 mem: location 1288 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1286 is 1271
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 1
9999 run: address to copy is 1276
9999 run: its type is event
9999 mem: location 1276 is 0
9999 mem: location 1277 is 48
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1290
9999 mem: storing 48 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 103 run: *idx <- add *idx, 1
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 1
9999 mem: location 1285 is 1280
9999 mem: storing 2 in location 1280
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1290 is 0
9999 mem: location 1291 is 48
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1284 is 1280
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1280
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1248
9999 mem: storing 48 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 1280 in location 1246
9999 mem: storing 1 in location 1252
9999 mem: storing 0 in location 1253
 102 run: loop-unless found?, 
9999 mem: location 1252 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1248 is 0
9999 mem: location 1249 is 48
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1254
 102 run: break-unless t, 
9999 mem: location 1254 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1245 is 1009
9999 mem: location 1247 is 1115
9999 mem: location 1248 is 0
9999 mem: location 1249 is 48
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 85
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1297
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1298
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1299
9999 mem: storing 48 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
 103 run: jump-if editor, 1:offset
9999 mem: location 1298 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1297 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 104 run: break-unless sc, 
9999 mem: location 1158 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1159
 104 run: reply width
9999 mem: location 1159 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1303
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1297 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 104 run: break-unless sc, 
9999 mem: location 1158 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1159
 104 run: reply height
9999 mem: location 1159 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1304
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1305
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1306
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1307
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1308
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1309
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1308 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1308 is 1121
9999 mem: location 1308 is 1121
9999 mem: storing 1 in location 1310
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1309 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1309 is 1122
9999 mem: location 1309 is 1122
9999 mem: storing 1 in location 1311
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1299 is 0
9999 mem: location 1300 is 48
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 1300 in location 1312
 103 run: break-unless c, 
9999 mem: location 1312 is 1300
9999 run: jump-unless fell through
 103 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 103 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1313
 103 run: break-unless redo?, 
9999 mem: location 1313 is 0
9999 run: jumping to instruction 60
 103 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1324
 103 run: break-unless undo?, 
9999 mem: location 1324 is 0
9999 run: jumping to instruction 107
 103 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1329
 103 run: break-unless page-up?, 
9999 mem: location 1329 is 0
9999 run: jumping to instruction 149
 103 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1345
 103 run: break-unless page-down?, 
9999 mem: location 1345 is 0
9999 run: jumping to instruction 191
 103 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1346
 103 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1346 is 0
9999 run: jumping to instruction 210
 103 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1351
 103 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 229
 103 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1352
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1352 is 0
9999 run: jumping to instruction 266
 103 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1353
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1353 is 0
9999 run: jumping to instruction 303
 103 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1354
 103 run: break-unless delete-previous-character?, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 343
 103 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1359
 103 run: break-unless tab?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 379
 103 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 0 in location 1363
 103 run: break-unless newline?, 
9999 mem: location 1363 is 0
9999 run: jumping to instruction 397
 103 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: storing 1 in location 1366
 103 run: jump-if regular-character?, 1:offset
9999 mem: location 1366 is 1
9999 run: jumping to instruction 401
 103 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1347
 103 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1307 is 1118
9999 mem: location 1118 is 1153
9999 mem: location 1307 is 1118
9999 mem: location 1307 is 1118
9999 mem: storing 1153 in location 1360
 103 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1298 is 1115
9999 mem: location 1312 is 1300
9999 mem: location 1300 is 48
9999 mem: location 1297 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
9999 mem: new alloc: 1404
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1406
 104 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1407
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1408
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1406 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1153
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1406 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1409
 104 run: insert-duplex c, *before-cursor
9999 mem: location 1407 is 48
9999 mem: location 1409 is 1118
9999 mem: location 1118 is 1153
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:location <- next-ingredient 
9999 mem: storing 48 in location 1144
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1145
 105 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1435
9999 mem: storing 1435 in location 1146
 105 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1146 is 1435
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1146 is 1435
9999 run: address to copy is 1435
9999 mem: storing 1435 in location 1147
 105 run: *val <- copy x
9999 mem: location 1144 is 48
9999 mem: location 1147 is 1435
9999 mem: location 1147 is 1435
9999 mem: storing 48 in location 1435
 105 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1145 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1160
9999 mem: location 1155 is 1150
9999 mem: location 1145 is 1153
9999 run: address to copy is 1154
9999 run: its type is address
9999 mem: location 1154 is 1160
9999 mem: storing 1160 in location 1148
 105 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1145 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1160
9999 mem: location 1155 is 1150
9999 mem: location 1145 is 1153
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1149
 105 run: *y <- copy new-node
9999 mem: location 1146 is 1435
9999 mem: location 1149 is 1154
9999 mem: location 1149 is 1154
9999 mem: storing 1435 in location 1154
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1146 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1146 is 1435
9999 run: address to copy is 1437
9999 mem: storing 1437 in location 1149
 105 run: *y <- copy in
9999 mem: location 1145 is 1153
9999 mem: location 1149 is 1437
9999 mem: location 1149 is 1437
9999 mem: storing 1153 in location 1437
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1146 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1153
9999 mem: location 1146 is 1435
9999 run: address to copy is 1436
9999 mem: storing 1436 in location 1149
 105 run: *y <- copy next-node
9999 mem: location 1148 is 1160
9999 mem: location 1149 is 1436
9999 mem: location 1149 is 1436
9999 mem: storing 1160 in location 1436
 105 run: jump-if next-node, 1:offset
9999 mem: location 1148 is 1160
9999 run: jumping to instruction 15
 105 run: y <- get-address *next-node, prev:offset
9999 mem: location 1148 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1153
9999 mem: location 1148 is 1160
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1149
 105 run: *y <- copy new-node
9999 mem: location 1146 is 1435
9999 mem: location 1149 is 1162
9999 mem: location 1149 is 1162
9999 mem: storing 1435 in location 1162
 105 run: reply new-node
9999 mem: location 1146 is 1435
 104 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1409 is 1118
9999 mem: location 1118 is 1153
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1158
 105 run: jump-if in, 1:offset
9999 mem: location 1158 is 1153
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1435
9999 mem: location 1155 is 1150
9999 mem: location 1158 is 1153
9999 run: address to copy is 1154
9999 run: its type is address
9999 mem: location 1154 is 1435
9999 mem: storing 1435 in location 1159
 105 run: reply result
9999 mem: location 1159 is 1435
9999 run: result 0 is 1435
9999 mem: location 1409 is 1118
9999 mem: storing 1435 in location 1118
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1406 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1406 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1410
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1406 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1406 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1411
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1406 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1406 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1412
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1406 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1406 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1413
 104 run: save-row:number <- copy *cursor-row
9999 mem: location 1410 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1410 is 1121
9999 mem: location 1410 is 1121
9999 mem: storing 1 in location 1414
 104 run: save-column:number <- copy *cursor-column
9999 mem: location 1411 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1411 is 1122
9999 mem: location 1411 is 1122
9999 mem: storing 1 in location 1415
 104 run: screen-width:number <- screen-width screen
9999 mem: location 1408 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 105 run: break-unless sc, 
9999 mem: location 1158 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1159
 105 run: reply width
9999 mem: location 1159 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1416
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1408 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1158
 105 run: break-unless sc, 
9999 mem: location 1158 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1158 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1159
 105 run: reply height
9999 mem: location 1159 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1417
 104 run: wrap-column:number <- subtract right, 1
9999 mem: location 1413 is 9
9999 mem: storing 8 in location 1418
 104 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1411 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1418 is 8
9999 mem: storing 0 in location 1419
 104 run: break-unless at-wrap?, 
9999 mem: location 1419 is 0
9999 run: jumping to instruction 38
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1411 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1411 is 1122
9999 mem: storing 2 in location 1122
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1409 is 1118
9999 mem: location 1118 is 1435
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1435 in location 1158
 105 run: jump-if in, 1:offset
9999 mem: location 1158 is 1435
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1436 is 1160
9999 mem: location 1437 is 1153
9999 mem: location 1158 is 1435
9999 run: address to copy is 1436
9999 run: its type is address
9999 mem: location 1436 is 1160
9999 mem: storing 1160 in location 1159
 105 run: reply result
9999 mem: location 1159 is 1160
9999 run: result 0 is 1160
9999 mem: storing 1160 in location 1425
 104 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1425 is 1160
9999 mem: storing 0 in location 1426
 104 run: break-unless at-end?, 
9999 mem: location 1426 is 0
9999 run: jumping to instruction 52
 104 run: break-unless next, 
9999 mem: location 1425 is 1160
9999 run: jump-unless fell through
 104 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1411 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1416 is 10
9999 mem: storing 0 in location 1429
 104 run: break-if at-right?, 
9999 mem: location 1429 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1409 is 1118
9999 mem: location 1118 is 1435
9999 mem: location 1409 is 1118
9999 mem: location 1409 is 1118
9999 mem: storing 1435 in location 1431
 104 run: move-cursor screen, save-row, save-column
9999 mem: location 1408 is 1009
9999 mem: location 1414 is 1
9999 mem: location 1415 is 1
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1195
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1197
 105 run: break-unless sc, 
9999 mem: location 1195 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1198
 105 run: *row <- copy new-row
9999 mem: location 1196 is 1
9999 mem: location 1198 is 1011
9999 mem: location 1198 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1195 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1195 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1199
 105 run: *column <- copy new-column
9999 mem: location 1197 is 1
9999 mem: location 1199 is 1012
9999 mem: location 1199 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1195 is 1009
 104 run: curr-column:number <- copy save-column
9999 mem: location 1415 is 1
9999 mem: storing 1 in location 1432
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1432 is 1
9999 mem: location 1416 is 10
9999 mem: storing 0 in location 1429
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1429 is 0
9999 run: jumping to instruction 64
 104 run: break-unless curr, 
9999 mem: location 1431 is 1435
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1431 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1436 is 1160
9999 mem: location 1437 is 1153
9999 mem: location 1431 is 1435
9999 run: address to copy is 1435
9999 run: its type is number
9999 mem: location 1435 is 48
9999 mem: storing 48 in location 1433
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1433 is 48
9999 mem: storing 0 in location 1434
 104 run: break-if at-newline?, 
9999 mem: location 1434 is 0
9999 run: jump-if fell through
schedule: insert-at-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-moves-cursor-right-with-key
 104 run: print-character screen, currc
9999 mem: location 1408 is 1009
9999 mem: location 1433 is 48
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 105 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1214
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 105 run: break-if color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 105 run: break-if bg-color-found?, 
9999 mem: location 1218 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 105 run: trace 90, [print-character], c
9999 mem: location 1214 is 48
  90 print-character: 48 
 105 run: break-unless sc, 
9999 mem: location 1213 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 48
9999 mem: storing 0 in location 1224
 105 run: break-unless newline?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 105 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1227
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 105 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 48
9999 mem: storing 0 in location 1230
 105 run: break-unless backspace?, 
9999 mem: location 1230 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 11
9999 mem: storing 1037 in location 1232
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1232 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1233
 105 run: *cursor-contents <- copy c
9999 mem: location 1214 is 48
9999 mem: location 1233 is 1037
9999 mem: location 1233 is 1037
9999 mem: storing 48 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1037
9999 mem: location 1037 is 48
9999 mem: location 1038 is 7
9999 mem: location 1232 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1234
 105 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1038
9999 mem: location 1234 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 105 run: break-if at-right?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1223 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1432 is 1
9999 mem: storing 2 in location 1432
 104 run: curr <- next-duplex curr
9999 mem: location 1431 is 1435
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1435 in location 1158
 105 run: jump-if in, 1:offset
9999 mem: location 1158 is 1435
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1436 is 1160
9999 mem: location 1437 is 1153
9999 mem: location 1158 is 1435
9999 run: address to copy is 1436
9999 run: its type is address
9999 mem: location 1436 is 1160
9999 mem: storing 1160 in location 1159
 105 run: reply result
9999 mem: location 1159 is 1160
9999 run: result 0 is 1160
9999 mem: storing 1160 in location 1431
 104 run: loop 
9999 run: jumping to instruction 61
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1432 is 2
9999 mem: location 1416 is 10
9999 mem: storing 0 in location 1429
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1429 is 0
9999 run: jumping to instruction 64
 104 run: break-unless curr, 
9999 mem: location 1431 is 1160
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1431 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1435
9999 mem: location 1431 is 1160
9999 run: address to copy is 1160
9999 run: its type is number
9999 mem: location 1160 is 98
9999 mem: storing 98 in location 1433
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1433 is 98
9999 mem: storing 0 in location 1434
 104 run: break-if at-newline?, 
9999 mem: location 1434 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1408 is 1009
9999 mem: location 1433 is 98
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 105 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1214
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 105 run: break-if color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 105 run: break-if bg-color-found?, 
9999 mem: location 1218 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 105 run: trace 90, [print-character], c
9999 mem: location 1214 is 98
  90 print-character: 98 
 105 run: break-unless sc, 
9999 mem: location 1213 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 98
9999 mem: storing 0 in location 1224
 105 run: break-unless newline?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 105 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1227
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 105 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 98
9999 mem: storing 0 in location 1230
 105 run: break-unless backspace?, 
9999 mem: location 1230 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 12
9999 mem: storing 1039 in location 1232
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1232 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1233
 105 run: *cursor-contents <- copy c
9999 mem: location 1214 is 98
9999 mem: location 1233 is 1039
9999 mem: location 1233 is 1039
9999 mem: storing 98 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1039
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1232 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1234
 105 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1040
9999 mem: location 1234 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 105 run: break-if at-right?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1223 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1432 is 2
9999 mem: storing 3 in location 1432
 104 run: curr <- next-duplex curr
9999 mem: location 1431 is 1160
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1160 in location 1158
 105 run: jump-if in, 1:offset
9999 mem: location 1158 is 1160
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1160
9999 mem: location 1160 is 98
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1435
9999 mem: location 1158 is 1160
9999 run: address to copy is 1161
9999 run: its type is address
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1159
 105 run: reply result
9999 mem: location 1159 is 1163
9999 run: result 0 is 1163
9999 mem: storing 1163 in location 1431
 104 run: loop 
9999 run: jumping to instruction 61
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1432 is 3
9999 mem: location 1416 is 10
9999 mem: storing 0 in location 1429
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1429 is 0
9999 run: jumping to instruction 64
 104 run: break-unless curr, 
9999 mem: location 1431 is 1163
9999 run: jump-unless fell through
 104 run: currc:character <- get *curr, value:offset
9999 mem: location 1431 is 1163
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1160
9999 mem: location 1431 is 1163
9999 run: address to copy is 1163
9999 run: its type is number
9999 mem: location 1163 is 99
9999 mem: storing 99 in location 1433
 104 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1433 is 99
9999 mem: storing 0 in location 1434
 104 run: break-if at-newline?, 
9999 mem: location 1434 is 0
9999 run: jump-if fell through
 104 run: print-character screen, currc
9999 mem: location 1408 is 1009
9999 mem: location 1433 is 99
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1213
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1214
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 105 run: break-if color-found?, 
9999 mem: location 1216 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1215
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
 105 run: break-if bg-color-found?, 
9999 mem: location 1218 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1217
 105 run: trace 90, [print-character], c
9999 mem: location 1214 is 99
  90 print-character: 99 
 105 run: break-unless sc, 
9999 mem: location 1213 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1220
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1221
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1223
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1219 is 10
9999 mem: storing 1 in location 1222
 105 run: jump-if legal?, 1:offset
9999 mem: location 1222 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1214 is 99
9999 mem: storing 0 in location 1224
 105 run: break-unless newline?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1221 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1219 is 10
9999 mem: storing 10 in location 1227
 105 run: index <- add index, *column
9999 mem: location 1227 is 10
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1227
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1213 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1213 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1228
 105 run: len:number <- length *buf
9999 mem: location 1228 is 1014
9999 mem: storing 50 in location 1229
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1214 is 99
9999 mem: storing 0 in location 1230
 105 run: break-unless backspace?, 
9999 mem: location 1230 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1228 is 1014
9999 mem: location 1227 is 13
9999 mem: storing 1041 in location 1232
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1232 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1232 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1233
 105 run: *cursor-contents <- copy c
9999 mem: location 1214 is 99
9999 mem: location 1233 is 1041
9999 mem: location 1233 is 1041
9999 mem: storing 99 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1232 is 1041
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1232 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1234
 105 run: *cursor-color <- copy color
9999 mem: location 1215 is 7
9999 mem: location 1234 is 1042
9999 mem: location 1234 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1219 is 10
9999 mem: storing 9 in location 1235
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1236
 105 run: break-if at-right?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1223 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1223 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1213 is 1009
 104 run: curr-column <- add curr-column, 1
9999 mem: location 1432 is 3
9999 mem: storing 4 in location 1432
 104 run: curr <- next-duplex curr
9999 mem: location 1431 is 1163
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1163 in location 1158
 105 run: jump-if in, 1:offset
9999 mem: location 1158 is 1163
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1163
9999 mem: location 1163 is 99
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1160
9999 mem: location 1158 is 1163
9999 run: address to copy is 1164
9999 run: its type is address
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1159
 105 run: reply result
9999 mem: location 1159 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1431
 104 run: loop 
9999 run: jumping to instruction 61
 104 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1432 is 4
9999 mem: location 1416 is 10
9999 mem: storing 0 in location 1429
 104 run: jump-unless at-right?, 1:offset
9999 mem: location 1429 is 0
9999 run: jumping to instruction 64
 104 run: break-unless curr, 
9999 mem: location 1431 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1406 is 1115
9999 mem: location 1408 is 1009
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1298
9999 mem: storing 1009 in location 1297
9999 mem: storing 0 in location 1355
 103 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1150
9999 mem: storing 1150 in location 1349
 103 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1298 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1298 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1316
 103 run: break-unless *undo, 
9999 mem: location 1316 is 1124
9999 mem: location 1124 is 1402
9999 run: jump-unless fell through
 103 run: op:address:operation <- first *undo
9999 mem: location 1316 is 1124
9999 mem: location 1124 is 1402
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1402 in location 1158
 104 run: result:location <- get *in, value:offset
9999 mem: location 1158 is 1402
9999 mem: location 1402 is 1200
9999 mem: location 1403 is 0
9999 mem: location 1158 is 1402
9999 run: address to copy is 1402
9999 run: its type is number
9999 mem: location 1402 is 1200
9999 mem: storing 1200 in location 1159
 104 run: reply result
9999 mem: location 1159 is 1200
9999 run: result 0 is 1200
9999 mem: storing 1200 in location 1315
 103 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1315 is 1200
9999 mem: location 1200 is 1
9999 mem: location 1201 is 1
9999 mem: location 1202 is 0
9999 mem: location 1203 is 1150
9999 mem: location 1204 is 1
9999 mem: location 1205 is 1
9999 mem: location 1206 is 1150
9999 mem: location 1207 is 2
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1315 is 1200
9999 mem: storing 0 in location 1322
 103 run: break-unless typing, 
9999 mem: location 1322 is 0
9999 run: jumping to instruction 423
 103 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1360 is 1153
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1153 in location 1158
 104 run: jump-if in, 1:offset
9999 mem: location 1158 is 1153
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1153
9999 mem: location 1153 is 97
9999 mem: location 1154 is 1435
9999 mem: location 1155 is 1150
9999 mem: location 1158 is 1153
9999 run: address to copy is 1154
9999 run: its type is address
9999 mem: location 1154 is 1435
9999 mem: storing 1435 in location 1159
 104 run: reply result
9999 mem: location 1159 is 1435
9999 run: result 0 is 1435
9999 mem: storing 1435 in location 1323
 103 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1323 is 1435
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1435 in location 1158
 104 run: jump-if in, 1:offset
9999 mem: location 1158 is 1435
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1158 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1436 is 1160
9999 mem: location 1437 is 1153
9999 mem: location 1158 is 1435
9999 run: address to copy is 1436
9999 run: its type is address
9999 mem: location 1436 is 1160
9999 mem: storing 1160 in location 1159
 104 run: reply result
9999 mem: location 1159 is 1160
9999 run: result 0 is 1160
9999 mem: storing 1160 in location 1362
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1438
9999 mem: storing 1438 in location 1315
 103 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1310 is 1
9999 mem: location 1311 is 1
9999 mem: location 1347 is 1150
9999 mem: location 1308 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1309 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1349 is 1150
9999 mem: location 1323 is 1435
9999 mem: location 1362 is 1160
9999 mem: location 1315 is 1438
9999 mem: location 1315 is 1438
9999 mem: storing 0 in location 1438
9999 mem: storing 1 in location 1439
9999 mem: storing 1 in location 1440
9999 mem: storing 1150 in location 1441
9999 mem: storing 1 in location 1442
9999 mem: storing 2 in location 1443
9999 mem: storing 1150 in location 1444
9999 mem: storing 1435 in location 1445
9999 mem: storing 1160 in location 1446
9999 mem: storing 1 in location 1447
 103 run: editor <- add-operation editor, op
9999 mem: location 1298 is 1115
9999 mem: location 1315 is 1438
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1239
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1438 in location 1240
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1402
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1241
 104 run: *undo <- push op, *undo
9999 mem: location 1240 is 1438
9999 mem: location 1241 is 1124
9999 mem: location 1124 is 1402
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1438 in location 1195
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1402 in location 1196
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1449
9999 mem: storing 1449 in location 1197
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1197 is 1449
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1197 is 1449
9999 run: address to copy is 1449
9999 mem: storing 1449 in location 1198
 105 run: *val <- copy x
9999 mem: location 1195 is 1438
9999 mem: location 1198 is 1449
9999 mem: location 1198 is 1449
9999 mem: storing 1438 in location 1449
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1197 is 1449
9999 mem: location 1449 is 1438
9999 mem: location 1450 is 0
9999 mem: location 1197 is 1449
9999 run: address to copy is 1450
9999 mem: storing 1450 in location 1199
 105 run: *next <- copy in
9999 mem: location 1196 is 1402
9999 mem: location 1199 is 1450
9999 mem: location 1199 is 1450
9999 mem: storing 1402 in location 1450
 105 run: reply result
9999 mem: location 1197 is 1449
9999 run: result 0 is 1449
9999 mem: location 1241 is 1124
9999 mem: storing 1449 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1239 is 1115
9999 mem: location 1115 is 1150
9999 mem: location 1116 is 1150
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1435
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1449
9999 mem: location 1125 is 0
9999 mem: location 1239 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1242
 104 run: *redo <- copy 0
9999 mem: location 1242 is 1125
9999 mem: location 1242 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1239 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1298
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1297 is 1009
9999 mem: location 1298 is 1115
9999 mem: location 1355 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1245
9999 mem: storing 1115 in location 1247
9999 mem: storing 0 in location 1255
 102 run: break-unless go-render?, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1246 is 1280
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1280 in location 1284
 103 run: break-unless x, 
9999 mem: location 1284 is 1280
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1284 is 1280
9999 mem: location 1280 is 2
9999 mem: location 1281 is 1271
9999 mem: location 1284 is 1280
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1285
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1284 is 1280
9999 mem: location 1280 is 2
9999 mem: location 1281 is 1271
9999 mem: location 1284 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 1271
9999 mem: storing 1271 in location 1286
 103 run: max:number <- length *buf
9999 mem: location 1286 is 1271
9999 mem: storing 2 in location 1287
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1285 is 1280
9999 mem: location 1280 is 2
9999 mem: location 1287 is 2
9999 mem: storing 1 in location 1288
 103 run: break-unless done?, 
9999 mem: location 1288 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1156 in location 1289
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1289 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1284 is 1280
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1280
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 1280 in location 1246
9999 mem: storing 1 in location 1252
9999 mem: storing 1 in location 1253
 102 run: loop-unless found?, 
9999 mem: location 1252 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1253 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .          .
    .a0bc      .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 100 run: check-trace-count-for-label 3, [print-character]
