9991 parse: --- defining main
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"1": "number"}
9992 load: after rewriting: 1:number <- foo 0
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:address:number
9999 parse: header product: y:number
9991 parse: --- defining foo
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"34": "literal"}
9992 load: after rewriting: reply 34
9999 parse: recipe foo has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: x:number
9999 parse: header product: y:number
9991 parse: --- defining foo_2
9993 parse: instruction: reply
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"35": "literal"}
9992 load: after rewriting: reply 35
9999 parse: recipe foo_2 has a header
9990 transform: === transform_all()
9991 transform: --- checking reply instructions against header for foo
9991 transform: --- checking reply instructions against header for foo_2
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- fill in reply ingredients from header for recipe foo
9991 transform: --- fill in reply ingredients from header for recipe foo_2
9991 transform: --- deduce types for recipe main
9991 transform: --- deduce types for recipe foo
9991 transform: --- deduce types for recipe foo_2
9991 transform: --- deduce types from header for foo
9993 transform: type of x is <address : <number : <>>>
9993 transform: type of y is number
9992 transform: instruction: reply 34
9991 transform: --- deduce types from header for foo_2
9993 transform: type of x is number
9993 transform: type of y is number
9992 transform: instruction: reply 35
9991 transform: --- checking reply instructions against header for foo
9991 transform: --- checking reply instructions against header for foo_2
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction foo
9993 transform: non-strict match: ingredient 0
9993 transform: strict match: product 0
9993 transform: non-strict match: ingredient 0
9993 transform: strict match: product 0
9992 transform: checking variant 0: 99
9993 transform: strict match: ingredient 0
9993 transform: strict match: product 0
9992 transform: checking variant 1: 100
9991 transform: --- resolve ambiguous calls for recipe foo
9991 transform: --- resolve ambiguous calls for recipe foo_2
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- compute instruction operations for recipe foo
9991 transform: --- compute instruction operations for recipe foo_2
9991 transform: --- transform braces for recipe main
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- transform braces for recipe foo
9992 transform: reply ...
9991 transform: --- transform braces for recipe foo_2
9992 transform: reply ...
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- collect surrounding spaces for recipe foo
9991 transform: --- collect surrounding spaces for recipe foo_2
9991 transform: --- transform names for recipe main
9991 transform: --- transform names for recipe foo
9991 transform: --- transform names for recipe foo_2
9991 transform: --- perform checks for recipe main
9991 transform: --- perform checks for recipe foo
9991 transform: --- perform checks for recipe foo_2
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe foo
9991 transform: --- convert 'new' to 'allocate' for recipe foo_2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:number <- foo_2 0
9999 trace: incrementing callstack depth to 2
 103 run: reply 35
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 35
9999 mem: storing 35 in location 1
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
