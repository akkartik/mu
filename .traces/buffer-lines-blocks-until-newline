parse/0: instruction: run
parse/0:   ingredient: {name: "
    1:address:channel/stdin <- init-channel 10:literal/capacity
    2:address:channel/buffered-stdin <- init-channel 10:literal/capacity
    3:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 3:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after init]
    # buffer stdin into buffered-stdin, try to read from buffered-stdin
    4:integer/buffer-routine <- start-running buffer-lines:recipe, 1:address:channel/stdin, 2:address:channel/buffered-stdin
    wait-for-routine 4:integer/buffer-routine
    5:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 5:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up]
    # write 'a'
    1:address:channel <- write 1:address:channel, 97:literal/a
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    6:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 6:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a']
    # write 'b'
    1:address:channel <- write 1:address:channel, 98:literal/b
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    7:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 7:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b']
    # write newline
    1:address:channel <- write 1:address:channel, 13:literal/newline
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    8:boolean <- channel-empty? 2:address:channel/buffered-stdin
    9:boolean/completed? <- not 8:boolean
    assert 9:boolean/completed?, [
F buffer-lines-blocks-until-newline: channel should contain data after writing newline]
    trace [test], [reached end]
  ", value: 0, type: 0, properties: ["
    1:address:channel/stdin <- init-channel 10:literal/capacity
    2:address:channel/buffered-stdin <- init-channel 10:literal/capacity
    3:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 3:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after init]
    # buffer stdin into buffered-stdin, try to read from buffered-stdin
    4:integer/buffer-routine <- start-running buffer-lines:recipe, 1:address:channel/stdin, 2:address:channel/buffered-stdin
    wait-for-routine 4:integer/buffer-routine
    5:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 5:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up]
    # write 'a'
    1:address:channel <- write 1:address:channel, 97:literal/a
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    6:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 6:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a']
    # write 'b'
    1:address:channel <- write 1:address:channel, 98:literal/b
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    7:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 7:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b']
    # write newline
    1:address:channel <- write 1:address:channel, 13:literal/newline
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    8:boolean <- channel-empty? 2:address:channel/buffered-stdin
    9:boolean/completed? <- not 8:boolean
    assert 9:boolean/completed?, [
F buffer-lines-blocks-until-newline: channel should contain data after writing newline]
    trace [test], [reached end]
  ": "literal-string"]}
parse/0: instruction: trace-should-contain
parse/0:   ingredient: {name: "
    test: reached end
  ", value: 0, type: 0, properties: ["
    test: reached end
  ": "literal-string"]}
after-brace/0: recipe buffer-lines-blocks-until-newline
after-brace/0: run ...
after-brace/0: trace-should-contain ...
new/0: routine allocated memory from 1000 to 101000
schedule/0: buffer-lines-blocks-until-newline
run/0: instruction buffer-lines-blocks-until-newline/0
run/0: run/51 {name: "
    1:address:channel/stdin <- init-channel 10:literal/capacity
    2:address:channel/buffered-stdin <- init-channel 10:literal/capacity
    3:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 3:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after init]
    # buffer stdin into buffered-stdin, try to read from buffered-stdin
    4:integer/buffer-routine <- start-running buffer-lines:recipe, 1:address:channel/stdin, 2:address:channel/buffered-stdin
    wait-for-routine 4:integer/buffer-routine
    5:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 5:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up]
    # write 'a'
    1:address:channel <- write 1:address:channel, 97:literal/a
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    6:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 6:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a']
    # write 'b'
    1:address:channel <- write 1:address:channel, 98:literal/b
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    7:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 7:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b']
    # write newline
    1:address:channel <- write 1:address:channel, 13:literal/newline
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    8:boolean <- channel-empty? 2:address:channel/buffered-stdin
    9:boolean/completed? <- not 8:boolean
    assert 9:boolean/completed?, [
F buffer-lines-blocks-until-newline: channel should contain data after writing newline]
    trace [test], [reached end]
  ", value: 0, type: 0, properties: ["
    1:address:channel/stdin <- init-channel 10:literal/capacity
    2:address:channel/buffered-stdin <- init-channel 10:literal/capacity
    3:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 3:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after init]
    # buffer stdin into buffered-stdin, try to read from buffered-stdin
    4:integer/buffer-routine <- start-running buffer-lines:recipe, 1:address:channel/stdin, 2:address:channel/buffered-stdin
    wait-for-routine 4:integer/buffer-routine
    5:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 5:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up]
    # write 'a'
    1:address:channel <- write 1:address:channel, 97:literal/a
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    6:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 6:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a']
    # write 'b'
    1:address:channel <- write 1:address:channel, 98:literal/b
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    7:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 7:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b']
    # write newline
    1:address:channel <- write 1:address:channel, 13:literal/newline
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    8:boolean <- channel-empty? 2:address:channel/buffered-stdin
    9:boolean/completed? <- not 8:boolean
    assert 9:boolean/completed?, [
F buffer-lines-blocks-until-newline: channel should contain data after writing newline]
    trace [test], [reached end]
  ": "literal-string"]}
run/0: ingredient 0 is 
    1:address:channel/stdin <- init-channel 10:literal/capacity
    2:address:channel/buffered-stdin <- init-channel 10:literal/capacity
    3:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 3:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after init]
    # buffer stdin into buffered-stdin, try to read from buffered-stdin
    4:integer/buffer-routine <- start-running buffer-lines:recipe, 1:address:channel/stdin, 2:address:channel/buffered-stdin
    wait-for-routine 4:integer/buffer-routine
    5:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 5:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up]
    # write 'a'
    1:address:channel <- write 1:address:channel, 97:literal/a
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    6:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 6:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a']
    # write 'b'
    1:address:channel <- write 1:address:channel, 98:literal/b
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    7:boolean <- channel-empty? 2:address:channel/buffered-stdin
    assert 7:boolean, [
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b']
    # write newline
    1:address:channel <- write 1:address:channel, 13:literal/newline
    restart 4:integer/buffer-routine
    wait-for-routine 4:integer/buffer-routine
    8:boolean <- channel-empty? 2:address:channel/buffered-stdin
    9:boolean/completed? <- not 8:boolean
    assert 9:boolean/completed?, [
F buffer-lines-blocks-until-newline: channel should contain data after writing newline]
    trace [test], [reached end]
  
parse/0: instruction: init-channel
parse/0:   ingredient: {name: "10", value: 0, type: 0, properties: ["10": "literal", "capacity": ]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel", "stdin": ]}
parse/0: instruction: init-channel
parse/0:   ingredient: {name: "10", value: 0, type: 0, properties: ["10": "literal", "capacity": ]}
parse/0:   product: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0: instruction: channel-empty?
parse/0:   ingredient: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0:   product: {name: "3", value: 0, type: 3, properties: ["3": "boolean"]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "3", value: 0, type: 3, properties: ["3": "boolean"]}
parse/0:   ingredient: {name: "
F buffer-lines-blocks-until-newline: channel should be empty after init", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after init": "literal-string"]}
parse/0: instruction: start-running
parse/0:   ingredient: {name: "buffer-lines", value: 0, type: 0, properties: ["buffer-lines": "recipe"]}
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel", "stdin": ]}
parse/0:   ingredient: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0:   product: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: channel-empty?
parse/0:   ingredient: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0:   product: {name: "5", value: 0, type: 3, properties: ["5": "boolean"]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "5", value: 0, type: 3, properties: ["5": "boolean"]}
parse/0:   ingredient: {name: "
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "97", value: 0, type: 0, properties: ["97": "literal", "a": ]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: channel-empty?
parse/0:   ingredient: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0:   product: {name: "6", value: 0, type: 3, properties: ["6": "boolean"]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "6", value: 0, type: 3, properties: ["6": "boolean"]}
parse/0:   ingredient: {name: "
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a'", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "98", value: 0, type: 0, properties: ["98": "literal", "b": ]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: channel-empty?
parse/0:   ingredient: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0:   product: {name: "7", value: 0, type: 3, properties: ["7": "boolean"]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "7", value: 0, type: 3, properties: ["7": "boolean"]}
parse/0:   ingredient: {name: "
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b'", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b'": "literal-string"]}
parse/0: instruction: write
parse/0:   ingredient: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0:   ingredient: {name: "13", value: 0, type: 0, properties: ["13": "literal", "newline": ]}
parse/0:   product: {name: "1", value: 0, type: 2-10, properties: ["1": "address":"channel"]}
parse/0: instruction: restart
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: wait-for-routine
parse/0:   ingredient: {name: "4", value: 0, type: 1, properties: ["4": "integer", "buffer-routine": ]}
parse/0: instruction: channel-empty?
parse/0:   ingredient: {name: "2", value: 0, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
parse/0:   product: {name: "8", value: 0, type: 3, properties: ["8": "boolean"]}
parse/0: instruction: not
parse/0:   ingredient: {name: "8", value: 0, type: 3, properties: ["8": "boolean"]}
parse/0:   product: {name: "9", value: 0, type: 3, properties: ["9": "boolean", "completed?": ]}
parse/0: instruction: assert
parse/0:   ingredient: {name: "9", value: 0, type: 3, properties: ["9": "boolean", "completed?": ]}
parse/0:   ingredient: {name: "
F buffer-lines-blocks-until-newline: channel should contain data after writing newline", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should contain data after writing newline": "literal-string"]}
parse/0: instruction: trace
parse/0:   ingredient: {name: "test", value: 0, type: 0, properties: ["test": "literal-string"]}
parse/0:   ingredient: {name: "reached end", value: 0, type: 0, properties: ["reached end": "literal-string"]}
after-brace/0: recipe run1001
after-brace/0: init-channel ...
after-brace/0: init-channel ...
after-brace/0: channel-empty? ...
after-brace/0: assert ...
after-brace/0: start-running ...
after-brace/0: wait-for-routine ...
after-brace/0: channel-empty? ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: channel-empty? ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: channel-empty? ...
after-brace/0: assert ...
after-brace/0: write ...
after-brace/0: restart ...
after-brace/0: wait-for-routine ...
after-brace/0: channel-empty? ...
after-brace/0: not ...
after-brace/0: assert ...
after-brace/0: trace ...
run/0: instruction run1001/0
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel", "stdin": ]} <- init-channel/108 {name: "10", value: 10, type: 0, properties: ["10": "literal", "capacity": ]}
run/0: ingredient 0 is 10
run/0: instruction init-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1000
run/0: product 0 is default-space
run/0: instruction init-channel/1
run/0: {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]} <- new/50 {name: "channel", value: 10, type: 0, properties: ["channel": "type"]}
run/0: ingredient 0 is channel
mem/0: new alloc: 1031
run/0: product 0 is result
mem/0: storing 1031 in location 1002
run/0: instruction init-channel/2
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/27 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
run/0: ingredient 1 is first-full
mem/0: location 1002 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 1003
run/0: instruction init-channel/3
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is full
mem/0: location 1003 is 1031
mem/0: storing 0 in location 1031
run/0: instruction init-channel/4
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
run/0: ingredient 1 is first-free
mem/0: location 1002 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1004
run/0: instruction init-channel/5
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is free
mem/0: location 1004 is 1032
mem/0: storing 0 in location 1032
run/0: instruction init-channel/6
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- next-ingredient/32 
run/0: product 0 is capacity
mem/0: storing 10 in location 1005
run/0: instruction init-channel/7
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- add/2 {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1005 is 10
run/0: ingredient 1 is 1
run/0: product 0 is capacity
mem/0: storing 11 in location 1005
run/0: instruction init-channel/8
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location"]} <- get-address/27 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 0
run/0: ingredient 1 is data
mem/0: location 1002 is 1031
run/0: address to copy is 1033
run/0: product 0 is dest
mem/0: storing 1033 in location 1006
run/0: instruction init-channel/9
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location", "deref": ]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is capacity
mem/0: location 1005 is 11
mem/0: array size is 11
mem/0: new alloc: 1034
run/0: product 0 is dest
mem/0: location 1006 is 1033
mem/0: storing 1034 in location 1033
run/0: instruction init-channel/10
run/0: reply/35 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]}
run/0: ingredient 0 is result
mem/0: location 1002 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/1
run/0: {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]} <- init-channel/108 {name: "10", value: 10, type: 0, properties: ["10": "literal", "capacity": ]}
run/0: ingredient 0 is 10
run/0: instruction init-channel/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1046
run/0: product 0 is default-space
run/0: instruction init-channel/1
run/0: {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]} <- new/50 {name: "channel", value: 10, type: 0, properties: ["channel": "type"]}
run/0: ingredient 0 is channel
mem/0: new alloc: 1077
run/0: product 0 is result
mem/0: storing 1077 in location 1048
run/0: instruction init-channel/2
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/27 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1048 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 0
run/0: ingredient 1 is first-full
mem/0: location 1048 is 1077
run/0: address to copy is 1077
run/0: product 0 is full
mem/0: storing 1077 in location 1049
run/0: instruction init-channel/3
run/0: {name: "full", value: 2, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is full
mem/0: location 1049 is 1077
mem/0: storing 0 in location 1077
run/0: instruction init-channel/4
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1048 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 0
run/0: ingredient 1 is first-free
mem/0: location 1048 is 1077
run/0: address to copy is 1078
run/0: product 0 is free
mem/0: storing 1078 in location 1050
run/0: instruction init-channel/5
run/0: {name: "free", value: 3, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is free
mem/0: location 1050 is 1078
mem/0: storing 0 in location 1078
run/0: instruction init-channel/6
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- next-ingredient/32 
run/0: product 0 is capacity
mem/0: storing 10 in location 1051
run/0: instruction init-channel/7
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- add/2 {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is capacity
mem/0: location 1051 is 10
run/0: ingredient 1 is 1
run/0: product 0 is capacity
mem/0: storing 11 in location 1051
run/0: instruction init-channel/8
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location"]} <- get-address/27 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 1048 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 0
run/0: ingredient 1 is data
mem/0: location 1048 is 1077
run/0: address to copy is 1079
run/0: product 0 is dest
mem/0: storing 1079 in location 1052
run/0: instruction init-channel/9
run/0: {name: "dest", value: 5, type: 2-2-5-1, properties: ["dest": "address":"address":"array":"location", "deref": ]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is capacity
mem/0: location 1051 is 11
mem/0: array size is 11
mem/0: new alloc: 1080
run/0: product 0 is dest
mem/0: location 1052 is 1079
mem/0: storing 1080 in location 1079
run/0: instruction init-channel/10
run/0: reply/35 {name: "result", value: 1, type: 2-10, properties: ["result": "address":"channel"]}
run/0: ingredient 0 is result
mem/0: location 1048 is 1077
run/0: result 0 is 1077
run/0: product 0 is 2
mem/0: storing 1077 in location 2
run/0: instruction run1001/2
run/0: {name: "3", value: 3, type: 3, properties: ["3": "boolean"]} <- channel-empty?/112 {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 1077
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1092
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 1094
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1094 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 1094 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1095
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1094 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 1094 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 0
run/0: product 0 is free
mem/0: storing 0 in location 1096
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1095 is 0
run/0: ingredient 1 is free
mem/0: location 1096 is 0
run/0: product 0 is result
mem/0: storing 1 in location 1097
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1097 is 1
run/0: result 0 is 1
run/0: product 0 is 3
mem/0: storing 1 in location 3
run/0: instruction run1001/3
run/0: assert/20 {name: "3", value: 3, type: 3, properties: ["3": "boolean"]}, {name: "
F buffer-lines-blocks-until-newline: channel should be empty after init", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after init": "literal-string"]}
run/0: ingredient 0 is 3
mem/0: location 3 is 1
run/0: ingredient 1 is 
F buffer-lines-blocks-until-newline: channel should be empty after init
run/0: instruction run1001/4
run/0: {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]} <- start-running/36 {name: "buffer-lines", value: 0, type: 0, properties: ["buffer-lines": "recipe"]}, {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel", "stdin": ]}, {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
run/0: ingredient 0 is buffer-lines
run/0: ingredient 1 is 1
mem/0: location 1 is 1031
run/0: ingredient 2 is 2
mem/0: location 2 is 1077
new/0: routine allocated memory from 101000 to 201000
run/0: product 0 is 4
mem/0: storing 2 in location 4
run/0: instruction run1001/5
run/0: wait-for-routine/42 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: waiting for routine 2
schedule/0: buffer-lines
run/0: instruction buffer-lines/0
run/0: {name: "default-space", value: 0, type: 2-2-5-1, properties: ["default-space": "address":"address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101000
run/0: product 0 is default-space
run/0: instruction buffer-lines/1
run/0: {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 1031 in location 101002
run/0: instruction buffer-lines/2
run/0: {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is out
mem/0: storing 1077 in location 101003
run/0: instruction buffer-lines/4
run/0: {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]} <- init-buffer/101 {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is 30
run/0: instruction init-buffer/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101031
run/0: product 0 is default-space
run/0: instruction init-buffer/1
run/0: {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer"]} <- new/50 {name: "buffer", value: 9, type: 0, properties: ["buffer": "type"]}
run/0: ingredient 0 is buffer
mem/0: new alloc: 101062
run/0: product 0 is result
mem/0: storing 101062 in location 101033
run/0: instruction init-buffer/2
run/0: {name: "len", value: 2, type: 2-1, properties: ["len": "address":"integer"]} <- get-address/27 {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101033 is 101062
mem/0: location 101062 is 0
mem/0: location 101063 is 0
run/0: ingredient 1 is length
mem/0: location 101033 is 101062
run/0: address to copy is 101062
run/0: product 0 is len
mem/0: storing 101062 in location 101034
run/0: instruction init-buffer/3
run/0: {name: "len", value: 2, type: 2-1, properties: ["len": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is len
mem/0: location 101034 is 101062
mem/0: storing 0 in location 101062
run/0: instruction init-buffer/4
run/0: {name: "s", value: 3, type: 2-2-5-4, properties: ["s": "address":"address":"array":"character"]} <- get-address/27 {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101033 is 101062
mem/0: location 101062 is 0
mem/0: location 101063 is 0
run/0: ingredient 1 is data
mem/0: location 101033 is 101062
run/0: address to copy is 101063
run/0: product 0 is s
mem/0: storing 101063 in location 101035
run/0: instruction init-buffer/5
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- next-ingredient/32 
run/0: product 0 is capacity
mem/0: storing 30 in location 101036
run/0: instruction init-buffer/6
run/0: {name: "s", value: 3, type: 2-2-5-4, properties: ["s": "address":"address":"array":"character", "deref": ]} <- new/50 {name: "character", value: 4, type: 0, properties: ["character": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is character
run/0: ingredient 1 is capacity
mem/0: location 101036 is 30
mem/0: array size is 30
mem/0: new alloc: 101064
run/0: product 0 is s
mem/0: location 101035 is 101063
mem/0: storing 101064 in location 101063
run/0: instruction init-buffer/7
run/0: reply/35 {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer"]}
run/0: ingredient 0 is result
mem/0: location 101033 is 101062
run/0: result 0 is 101062
run/0: product 0 is line
mem/0: storing 101062 in location 101004
run/0: instruction buffer-lines/6
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]} <- read/111 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]}
run/0: ingredient 0 is in
mem/0: location 101002 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101095
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101097
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101097 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101126
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101128
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101128 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101128 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101129
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101128 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101128 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 0
run/0: product 0 is free
mem/0: storing 0 in location 101130
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101129 is 0
run/0: ingredient 1 is free
mem/0: location 101130 is 0
run/0: product 0 is result
mem/0: storing 1 in location 101131
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101131 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101098
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101098 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101097 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101097 is 1031
run/0: address to copy is 1032
run/0: product 0 is free-address
mem/0: storing 1032 in location 101099
run/0: instruction read/6
run/0: wait-for-location/41 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101099 is 1032
mem/0: location 1032 is 0
mem/0: location 101099 is 1032
run/0: waiting for location 1032 to change from 0
schedule/0: waking up routine 1
schedule/0: run1001
run/0: instruction run1001/6
run/0: {name: "5", value: 5, type: 3, properties: ["5": "boolean"]} <- channel-empty?/112 {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 1077
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1123
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 1125
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1125 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 1125 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1126
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1125 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 1125 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 0
run/0: product 0 is free
mem/0: storing 0 in location 1127
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1126 is 0
run/0: ingredient 1 is free
mem/0: location 1127 is 0
run/0: product 0 is result
mem/0: storing 1 in location 1128
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1128 is 1
run/0: result 0 is 1
run/0: product 0 is 5
mem/0: storing 1 in location 5
run/0: instruction run1001/7
run/0: assert/20 {name: "5", value: 5, type: 3, properties: ["5": "boolean"]}, {name: "
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up": "literal-string"]}
run/0: ingredient 0 is 5
mem/0: location 5 is 1
run/0: ingredient 1 is 
F buffer-lines-blocks-until-newline: channel should be empty after buffer-lines bring-up
run/0: instruction run1001/8
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "97", value: 97, type: 0, properties: ["97": "literal", "a": ]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is 97
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1154
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1156
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/32 
run/0: product 0 is val
mem/0: storing 97 in location 1157
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1156 is 1031
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1185
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1187
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1187 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1187 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 1188
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1188 is 0
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1188
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1187 is 1031
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1216
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1218
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1218 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1218 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is q
mem/0: storing 1034 in location 1219
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/30 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1219 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 0
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1219 is 1034
run/0: product 0 is result
mem/0: storing 11 in location 1220
run/0: instruction channel-capacity/4
run/0: reply/35 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1220 is 11
run/0: result 0 is 11
run/0: product 0 is len
mem/0: storing 11 in location 1189
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 1188 is 1
run/0: ingredient 1 is len
mem/0: location 1189 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 1190
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1190 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1187 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 1187 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1191
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1191 is 0
run/0: ingredient 1 is tmp
mem/0: location 1188 is 1
run/0: product 0 is result
mem/0: storing 0 in location 1192
run/0: instruction channel-full?/12
run/0: reply/35 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1192 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1158
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1158 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1156 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1156 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 1160
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1156 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 0
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1156 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1161
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1160 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 0
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
run/0: ingredient 1 is free
mem/0: location 1161 is 1032
mem/0: location 1032 is 0
mem/0: location 1160 is 1034
mem/0: location 1161 is 1032
mem/0: location 1032 is 0
run/0: product 0 is dest
mem/0: storing 1035 in location 1162
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1157 is 97
run/0: product 0 is dest
mem/0: location 1162 is 1035
mem/0: storing 97 in location 1035
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1161 is 1032
mem/0: location 1032 is 0
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1161 is 1032
mem/0: storing 1 in location 1032
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1160 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1160 is 1034
run/0: product 0 is len
mem/0: storing 11 in location 1163
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 1161 is 1032
mem/0: location 1032 is 1
run/0: ingredient 1 is len
mem/0: location 1163 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 1164
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1164 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/35 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1156 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/9
run/0: restart/38 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: instruction run1001/10
run/0: wait-for-routine/42 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: waiting for routine 2
schedule/0: read
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101097 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101097 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 101100
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101097 is 1031
mem/0: location 1031 is 0
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 101097 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 101101
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/28 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101101 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
run/0: ingredient 1 is full
mem/0: location 101100 is 1031
mem/0: location 1031 is 0
mem/0: location 101101 is 1034
mem/0: location 101100 is 1031
mem/0: location 1031 is 0
run/0: address to copy is 1035
run/0: its type is 1
mem/0: location 1035 is 97
run/0: product 0 is result
mem/0: storing 97 in location 101102
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101100 is 1031
mem/0: location 1031 is 0
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101100 is 1031
mem/0: storing 1 in location 1031
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101101 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 101101 is 1034
run/0: product 0 is len
mem/0: storing 11 in location 101103
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101100 is 1031
mem/0: location 1031 is 1
run/0: ingredient 1 is len
mem/0: location 101103 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101104
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101104 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/35 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101102 is 97
run/0: ingredient 1 is chan
mem/0: location 101097 is 1031
run/0: result 0 is 97
run/0: result 1 is 1031
run/0: product 0 is c
mem/0: storing 97 in location 101005
run/0: product 1 is in
mem/0: storing 1031 in location 101002
run/0: instruction buffer-lines/7
run/0: {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]} <- buffer-append/104 {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]}, {name: "c", value: 4, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is line
mem/0: location 101004 is 101062
run/0: ingredient 1 is c
mem/0: location 101005 is 97
run/0: instruction buffer-append/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101157
run/0: product 0 is default-space
run/0: instruction buffer-append/1
run/0: {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 101062 in location 101159
run/0: instruction buffer-append/2
run/0: {name: "c", value: 2, type: 4, properties: ["c": "character"]} <- next-ingredient/32 
run/0: product 0 is c
mem/0: storing 97 in location 101160
run/0: instruction buffer-append/4
run/0: {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]} <- buffer-full?/103 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]}
run/0: ingredient 0 is in
mem/0: location 101159 is 101062
run/0: instruction buffer-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101188
run/0: product 0 is default-space
run/0: instruction buffer-full?/1
run/0: {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 101062 in location 101190
run/0: instruction buffer-full?/2
run/0: {name: "len", value: 2, type: 1, properties: ["len": "integer"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101190 is 101062
mem/0: location 101062 is 0
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101190 is 101062
run/0: address to copy is 101062
run/0: its type is 1
mem/0: location 101062 is 0
run/0: product 0 is len
mem/0: storing 0 in location 101191
run/0: instruction buffer-full?/3
run/0: {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101190 is 101062
mem/0: location 101062 is 0
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101190 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is s
mem/0: storing 101064 in location 101192
run/0: instruction buffer-full?/4
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- length/30 {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}
run/0: ingredient 0 is s
mem/0: location 101192 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 0
mem/0: location 101066 is 0
mem/0: location 101067 is 0
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
mem/0: location 101192 is 101064
run/0: product 0 is capacity
mem/0: storing 30 in location 101193
run/0: instruction buffer-full?/5
run/0: {name: "result", value: 5, type: 3, properties: ["result": "boolean"]} <- greater-or-equal/16 {name: "len", value: 2, type: 1, properties: ["len": "integer"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is len
mem/0: location 101191 is 0
run/0: ingredient 1 is capacity
mem/0: location 101193 is 30
run/0: product 0 is result
mem/0: storing 0 in location 101194
run/0: instruction buffer-full?/6
run/0: reply/35 {name: "result", value: 5, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101194 is 0
run/0: result 0 is 0
run/0: product 0 is full?
mem/0: storing 0 in location 101161
run/0: instruction buffer-append/5
run/0: break-unless/12 {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is full?
mem/0: location 101161 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction buffer-append/8
run/0: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer"]} <- get-address/27 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101159 is 101062
mem/0: location 101062 is 0
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101159 is 101062
run/0: address to copy is 101062
run/0: product 0 is len
mem/0: storing 101062 in location 101162
run/0: instruction buffer-append/9
run/0: {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101159 is 101062
mem/0: location 101062 is 0
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101159 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is s
mem/0: storing 101064 in location 101163
run/0: instruction buffer-append/10
run/0: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/29 {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}, {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]}
run/0: ingredient 0 is s
mem/0: location 101163 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 0
mem/0: location 101066 is 0
mem/0: location 101067 is 0
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
run/0: ingredient 1 is len
mem/0: location 101162 is 101062
mem/0: location 101062 is 0
mem/0: location 101163 is 101064
mem/0: location 101162 is 101062
mem/0: location 101062 is 0
run/0: product 0 is dest
mem/0: storing 101065 in location 101164
run/0: instruction buffer-append/11
run/0: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "c", value: 2, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is c
mem/0: location 101160 is 97
run/0: product 0 is dest
mem/0: location 101164 is 101065
mem/0: storing 97 in location 101065
run/0: instruction buffer-append/12
run/0: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]} <- add/2 {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is len
mem/0: location 101162 is 101062
mem/0: location 101062 is 0
run/0: ingredient 1 is 1
run/0: product 0 is len
mem/0: location 101162 is 101062
mem/0: storing 1 in location 101062
run/0: instruction buffer-append/13
run/0: reply/35 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "same-as-ingredient": "0"]}
run/0: ingredient 0 is in
mem/0: location 101159 is 101062
run/0: result 0 is 101062
run/0: product 0 is line
mem/0: storing 101062 in location 101004
run/0: instruction buffer-lines/8
run/0: {name: "line-done?", value: 5, type: 3, properties: ["line-done?": "boolean"]} <- equal/13 {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "13", value: 13, type: 0, properties: ["13": "literal", "newline": ]}
run/0: ingredient 0 is c
mem/0: location 101005 is 97
run/0: ingredient 1 is 13
run/0: product 0 is line-done?
mem/0: storing 0 in location 101006
run/0: instruction buffer-lines/9
run/0: break-if/11 {name: "line-done?", value: 5, type: 3, properties: ["line-done?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is line-done?
mem/0: location 101006 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction buffer-lines/10
run/0: loop/10 {name: "", value: -5, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 6
run/0: instruction buffer-lines/6
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]} <- read/111 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]}
run/0: ingredient 0 is in
mem/0: location 101002 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101219
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101221
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101221 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101250
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101252
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101252 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101252 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 1
run/0: product 0 is full
mem/0: storing 1 in location 101253
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101252 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101252 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 1
run/0: product 0 is free
mem/0: storing 1 in location 101254
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101253 is 1
run/0: ingredient 1 is free
mem/0: location 101254 is 1
run/0: product 0 is result
mem/0: storing 1 in location 101255
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101255 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101222
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101222 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101221 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101221 is 1031
run/0: address to copy is 1032
run/0: product 0 is free-address
mem/0: storing 1032 in location 101223
run/0: instruction read/6
run/0: wait-for-location/41 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101223 is 1032
mem/0: location 1032 is 1
mem/0: location 101223 is 1032
run/0: waiting for location 1032 to change from 1
schedule/0: waking up routine 1
schedule/0: run1001
run/0: instruction run1001/11
run/0: {name: "6", value: 6, type: 3, properties: ["6": "boolean"]} <- channel-empty?/112 {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 1077
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1247
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 1249
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1249 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 1249 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1250
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1249 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 1249 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 0
run/0: product 0 is free
mem/0: storing 0 in location 1251
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1250 is 0
run/0: ingredient 1 is free
mem/0: location 1251 is 0
run/0: product 0 is result
mem/0: storing 1 in location 1252
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1252 is 1
run/0: result 0 is 1
run/0: product 0 is 6
mem/0: storing 1 in location 6
run/0: instruction run1001/12
run/0: assert/20 {name: "6", value: 6, type: 3, properties: ["6": "boolean"]}, {name: "
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a'", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a'": "literal-string"]}
run/0: ingredient 0 is 6
mem/0: location 6 is 1
run/0: ingredient 1 is 
F buffer-lines-blocks-until-newline: channel should be empty after writing 'a'
run/0: instruction run1001/13
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "98", value: 98, type: 0, properties: ["98": "literal", "b": ]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is 98
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1278
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1280
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/32 
run/0: product 0 is val
mem/0: storing 98 in location 1281
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1280 is 1031
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1309
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1311
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1311 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1311 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 1312
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1312 is 1
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 2 in location 1312
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1311 is 1031
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1340
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1342
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1342 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1342 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is q
mem/0: storing 1034 in location 1343
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/30 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1343 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1343 is 1034
run/0: product 0 is result
mem/0: storing 11 in location 1344
run/0: instruction channel-capacity/4
run/0: reply/35 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1344 is 11
run/0: result 0 is 11
run/0: product 0 is len
mem/0: storing 11 in location 1313
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 1312 is 2
run/0: ingredient 1 is len
mem/0: location 1313 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 1314
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1314 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1311 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 1311 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 1
run/0: product 0 is full
mem/0: storing 1 in location 1315
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1315 is 1
run/0: ingredient 1 is tmp
mem/0: location 1312 is 2
run/0: product 0 is result
mem/0: storing 0 in location 1316
run/0: instruction channel-full?/12
run/0: reply/35 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1316 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1282
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1282 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1280 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1280 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 1284
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1280 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 1
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1280 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1285
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1284 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 0
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
run/0: ingredient 1 is free
mem/0: location 1285 is 1032
mem/0: location 1032 is 1
mem/0: location 1284 is 1034
mem/0: location 1285 is 1032
mem/0: location 1032 is 1
run/0: product 0 is dest
mem/0: storing 1036 in location 1286
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1281 is 98
run/0: product 0 is dest
mem/0: location 1286 is 1036
mem/0: storing 98 in location 1036
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1285 is 1032
mem/0: location 1032 is 1
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1285 is 1032
mem/0: storing 2 in location 1032
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1284 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1284 is 1034
run/0: product 0 is len
mem/0: storing 11 in location 1287
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 1285 is 1032
mem/0: location 1032 is 2
run/0: ingredient 1 is len
mem/0: location 1287 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 1288
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1288 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/35 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1280 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/14
run/0: restart/38 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: instruction run1001/15
run/0: wait-for-routine/42 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: waiting for routine 2
schedule/0: read
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101221 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101221 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 101224
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101221 is 1031
mem/0: location 1031 is 1
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 101221 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 101225
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/28 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101225 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
run/0: ingredient 1 is full
mem/0: location 101224 is 1031
mem/0: location 1031 is 1
mem/0: location 101225 is 1034
mem/0: location 101224 is 1031
mem/0: location 1031 is 1
run/0: address to copy is 1036
run/0: its type is 1
mem/0: location 1036 is 98
run/0: product 0 is result
mem/0: storing 98 in location 101226
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101224 is 1031
mem/0: location 1031 is 1
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101224 is 1031
mem/0: storing 2 in location 1031
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101225 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 101225 is 1034
run/0: product 0 is len
mem/0: storing 11 in location 101227
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101224 is 1031
mem/0: location 1031 is 2
run/0: ingredient 1 is len
mem/0: location 101227 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101228
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101228 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/35 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101226 is 98
run/0: ingredient 1 is chan
mem/0: location 101221 is 1031
run/0: result 0 is 98
run/0: result 1 is 1031
run/0: product 0 is c
mem/0: storing 98 in location 101005
run/0: product 1 is in
mem/0: storing 1031 in location 101002
run/0: instruction buffer-lines/7
run/0: {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]} <- buffer-append/104 {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]}, {name: "c", value: 4, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is line
mem/0: location 101004 is 101062
run/0: ingredient 1 is c
mem/0: location 101005 is 98
run/0: instruction buffer-append/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101281
run/0: product 0 is default-space
run/0: instruction buffer-append/1
run/0: {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 101062 in location 101283
run/0: instruction buffer-append/2
run/0: {name: "c", value: 2, type: 4, properties: ["c": "character"]} <- next-ingredient/32 
run/0: product 0 is c
mem/0: storing 98 in location 101284
run/0: instruction buffer-append/4
run/0: {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]} <- buffer-full?/103 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]}
run/0: ingredient 0 is in
mem/0: location 101283 is 101062
run/0: instruction buffer-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101312
run/0: product 0 is default-space
run/0: instruction buffer-full?/1
run/0: {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 101062 in location 101314
run/0: instruction buffer-full?/2
run/0: {name: "len", value: 2, type: 1, properties: ["len": "integer"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101314 is 101062
mem/0: location 101062 is 1
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101314 is 101062
run/0: address to copy is 101062
run/0: its type is 1
mem/0: location 101062 is 1
run/0: product 0 is len
mem/0: storing 1 in location 101315
run/0: instruction buffer-full?/3
run/0: {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101314 is 101062
mem/0: location 101062 is 1
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101314 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is s
mem/0: storing 101064 in location 101316
run/0: instruction buffer-full?/4
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- length/30 {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}
run/0: ingredient 0 is s
mem/0: location 101316 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 0
mem/0: location 101067 is 0
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
mem/0: location 101316 is 101064
run/0: product 0 is capacity
mem/0: storing 30 in location 101317
run/0: instruction buffer-full?/5
run/0: {name: "result", value: 5, type: 3, properties: ["result": "boolean"]} <- greater-or-equal/16 {name: "len", value: 2, type: 1, properties: ["len": "integer"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is len
mem/0: location 101315 is 1
run/0: ingredient 1 is capacity
mem/0: location 101317 is 30
run/0: product 0 is result
mem/0: storing 0 in location 101318
run/0: instruction buffer-full?/6
run/0: reply/35 {name: "result", value: 5, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101318 is 0
run/0: result 0 is 0
run/0: product 0 is full?
mem/0: storing 0 in location 101285
run/0: instruction buffer-append/5
run/0: break-unless/12 {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is full?
mem/0: location 101285 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction buffer-append/8
run/0: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer"]} <- get-address/27 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101283 is 101062
mem/0: location 101062 is 1
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101283 is 101062
run/0: address to copy is 101062
run/0: product 0 is len
mem/0: storing 101062 in location 101286
run/0: instruction buffer-append/9
run/0: {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101283 is 101062
mem/0: location 101062 is 1
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101283 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is s
mem/0: storing 101064 in location 101287
run/0: instruction buffer-append/10
run/0: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/29 {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}, {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]}
run/0: ingredient 0 is s
mem/0: location 101287 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 0
mem/0: location 101067 is 0
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
run/0: ingredient 1 is len
mem/0: location 101286 is 101062
mem/0: location 101062 is 1
mem/0: location 101287 is 101064
mem/0: location 101286 is 101062
mem/0: location 101062 is 1
run/0: product 0 is dest
mem/0: storing 101066 in location 101288
run/0: instruction buffer-append/11
run/0: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "c", value: 2, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is c
mem/0: location 101284 is 98
run/0: product 0 is dest
mem/0: location 101288 is 101066
mem/0: storing 98 in location 101066
run/0: instruction buffer-append/12
run/0: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]} <- add/2 {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is len
mem/0: location 101286 is 101062
mem/0: location 101062 is 1
run/0: ingredient 1 is 1
run/0: product 0 is len
mem/0: location 101286 is 101062
mem/0: storing 2 in location 101062
run/0: instruction buffer-append/13
run/0: reply/35 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "same-as-ingredient": "0"]}
run/0: ingredient 0 is in
mem/0: location 101283 is 101062
run/0: result 0 is 101062
run/0: product 0 is line
mem/0: storing 101062 in location 101004
run/0: instruction buffer-lines/8
run/0: {name: "line-done?", value: 5, type: 3, properties: ["line-done?": "boolean"]} <- equal/13 {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "13", value: 13, type: 0, properties: ["13": "literal", "newline": ]}
run/0: ingredient 0 is c
mem/0: location 101005 is 98
run/0: ingredient 1 is 13
run/0: product 0 is line-done?
mem/0: storing 0 in location 101006
run/0: instruction buffer-lines/9
run/0: break-if/11 {name: "line-done?", value: 5, type: 3, properties: ["line-done?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is line-done?
mem/0: location 101006 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction buffer-lines/10
run/0: loop/10 {name: "", value: -5, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 6
run/0: instruction buffer-lines/6
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]} <- read/111 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]}
run/0: ingredient 0 is in
mem/0: location 101002 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101343
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101345
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101345 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101374
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101376
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101376 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101376 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 2
run/0: product 0 is full
mem/0: storing 2 in location 101377
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101376 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101376 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 2
run/0: product 0 is free
mem/0: storing 2 in location 101378
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101377 is 2
run/0: ingredient 1 is free
mem/0: location 101378 is 2
run/0: product 0 is result
mem/0: storing 1 in location 101379
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101379 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101346
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101346 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101345 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101345 is 1031
run/0: address to copy is 1032
run/0: product 0 is free-address
mem/0: storing 1032 in location 101347
run/0: instruction read/6
run/0: wait-for-location/41 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101347 is 1032
mem/0: location 1032 is 2
mem/0: location 101347 is 1032
run/0: waiting for location 1032 to change from 2
schedule/0: waking up routine 1
schedule/0: run1001
run/0: instruction run1001/16
run/0: {name: "7", value: 7, type: 3, properties: ["7": "boolean"]} <- channel-empty?/112 {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 1077
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1371
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 1373
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1373 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 1373 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1374
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1373 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 1373 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 0
run/0: product 0 is free
mem/0: storing 0 in location 1375
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1374 is 0
run/0: ingredient 1 is free
mem/0: location 1375 is 0
run/0: product 0 is result
mem/0: storing 1 in location 1376
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1376 is 1
run/0: result 0 is 1
run/0: product 0 is 7
mem/0: storing 1 in location 7
run/0: instruction run1001/17
run/0: assert/20 {name: "7", value: 7, type: 3, properties: ["7": "boolean"]}, {name: "
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b'", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b'": "literal-string"]}
run/0: ingredient 0 is 7
mem/0: location 7 is 1
run/0: ingredient 1 is 
F buffer-lines-blocks-until-newline: channel should be empty after writing 'b'
run/0: instruction run1001/18
run/0: {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]} <- write/109 {name: "1", value: 1, type: 2-10, properties: ["1": "address":"channel"]}, {name: "13", value: 13, type: 0, properties: ["13": "literal", "newline": ]}
run/0: ingredient 0 is 1
mem/0: location 1 is 1031
run/0: ingredient 1 is 13
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1402
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1404
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/32 
run/0: product 0 is val
mem/0: storing 13 in location 1405
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1404 is 1031
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1433
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1435
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1435 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1435 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 2
run/0: product 0 is tmp
mem/0: storing 2 in location 1436
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 1436 is 2
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 3 in location 1436
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 1435 is 1031
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1464
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 1466
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1466 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1466 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is q
mem/0: storing 1034 in location 1467
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/30 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 1467 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1467 is 1034
run/0: product 0 is result
mem/0: storing 11 in location 1468
run/0: instruction channel-capacity/4
run/0: reply/35 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 1468 is 11
run/0: result 0 is 11
run/0: product 0 is len
mem/0: storing 11 in location 1437
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 1436 is 3
run/0: ingredient 1 is len
mem/0: location 1437 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 1438
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1438 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1435 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 1435 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 2
run/0: product 0 is full
mem/0: storing 2 in location 1439
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1439 is 2
run/0: ingredient 1 is tmp
mem/0: location 1436 is 3
run/0: product 0 is result
mem/0: storing 0 in location 1440
run/0: instruction channel-full?/12
run/0: reply/35 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1440 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1406
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 1406 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1404 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 1404 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 1408
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1404 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 2
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 1404 is 1031
run/0: address to copy is 1032
run/0: product 0 is free
mem/0: storing 1032 in location 1409
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1408 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 0
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
run/0: ingredient 1 is free
mem/0: location 1409 is 1032
mem/0: location 1032 is 2
mem/0: location 1408 is 1034
mem/0: location 1409 is 1032
mem/0: location 1032 is 2
run/0: product 0 is dest
mem/0: storing 1037 in location 1410
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 1405 is 13
run/0: product 0 is dest
mem/0: location 1410 is 1037
mem/0: storing 13 in location 1037
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 1409 is 1032
mem/0: location 1032 is 2
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 1409 is 1032
mem/0: storing 3 in location 1032
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 1408 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 13
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 1408 is 1034
run/0: product 0 is len
mem/0: storing 11 in location 1411
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 1409 is 1032
mem/0: location 1032 is 3
run/0: ingredient 1 is len
mem/0: location 1411 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 1412
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 1412 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/35 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 1404 is 1031
run/0: result 0 is 1031
run/0: product 0 is 1
mem/0: storing 1031 in location 1
run/0: instruction run1001/19
run/0: restart/38 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: instruction run1001/20
run/0: wait-for-routine/42 {name: "4", value: 4, type: 1, properties: ["4": "integer", "buffer-routine": ]}
run/0: ingredient 0 is 4
mem/0: location 4 is 2
run/0: waiting for routine 2
schedule/0: read
run/0: instruction read/8
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101345 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 3
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101345 is 1031
run/0: address to copy is 1031
run/0: product 0 is full
mem/0: storing 1031 in location 101348
run/0: instruction read/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101345 is 1031
mem/0: location 1031 is 2
mem/0: location 1032 is 3
mem/0: location 1033 is 1034
run/0: ingredient 1 is data
mem/0: location 101345 is 1031
run/0: address to copy is 1033
run/0: its type is 2
mem/0: location 1033 is 1034
run/0: product 0 is circular-buffer
mem/0: storing 1034 in location 101349
run/0: instruction read/10
run/0: {name: "result", value: 6, type: 1, properties: ["result": "location"]} <- index/28 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101349 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 13
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
run/0: ingredient 1 is full
mem/0: location 101348 is 1031
mem/0: location 1031 is 2
mem/0: location 101349 is 1034
mem/0: location 101348 is 1031
mem/0: location 1031 is 2
run/0: address to copy is 1037
run/0: its type is 1
mem/0: location 1037 is 13
run/0: product 0 is result
mem/0: storing 13 in location 101350
run/0: instruction read/11
run/0: {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]} <- add/2 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is full
mem/0: location 101348 is 1031
mem/0: location 1031 is 2
run/0: ingredient 1 is 1
run/0: product 0 is full
mem/0: location 101348 is 1031
mem/0: storing 3 in location 1031
run/0: instruction read/13
run/0: {name: "len", value: 7, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101349 is 1034
mem/0: location 1034 is 11
mem/0: location 1035 is 97
mem/0: location 1036 is 98
mem/0: location 1037 is 13
mem/0: location 1038 is 0
mem/0: location 1039 is 0
mem/0: location 1040 is 0
mem/0: location 1041 is 0
mem/0: location 1042 is 0
mem/0: location 1043 is 0
mem/0: location 1044 is 0
mem/0: location 1045 is 0
mem/0: location 101349 is 1034
run/0: product 0 is len
mem/0: storing 11 in location 101351
run/0: instruction read/14
run/0: {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "full", value: 4, type: 2-1, properties: ["full": "address":"integer", "deref": ]}, {name: "len", value: 7, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101348 is 1031
mem/0: location 1031 is 3
run/0: ingredient 1 is len
mem/0: location 101351 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101352
run/0: instruction read/15
run/0: break-unless/12 {name: "at-end?", value: 8, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101352 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 17
run/0: instruction read/18
run/0: reply/35 {name: "result", value: 6, type: 1, properties: ["result": "location"]}, {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is result
mem/0: location 101350 is 13
run/0: ingredient 1 is chan
mem/0: location 101345 is 1031
run/0: result 0 is 13
run/0: result 1 is 1031
run/0: product 0 is c
mem/0: storing 13 in location 101005
run/0: product 1 is in
mem/0: storing 1031 in location 101002
run/0: instruction buffer-lines/7
run/0: {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]} <- buffer-append/104 {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]}, {name: "c", value: 4, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is line
mem/0: location 101004 is 101062
run/0: ingredient 1 is c
mem/0: location 101005 is 13
run/0: instruction buffer-append/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101405
run/0: product 0 is default-space
run/0: instruction buffer-append/1
run/0: {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 101062 in location 101407
run/0: instruction buffer-append/2
run/0: {name: "c", value: 2, type: 4, properties: ["c": "character"]} <- next-ingredient/32 
run/0: product 0 is c
mem/0: storing 13 in location 101408
run/0: instruction buffer-append/4
run/0: {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]} <- buffer-full?/103 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]}
run/0: ingredient 0 is in
mem/0: location 101407 is 101062
run/0: instruction buffer-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101436
run/0: product 0 is default-space
run/0: instruction buffer-full?/1
run/0: {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer"]} <- next-ingredient/32 
run/0: product 0 is in
mem/0: storing 101062 in location 101438
run/0: instruction buffer-full?/2
run/0: {name: "len", value: 2, type: 1, properties: ["len": "integer"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101438 is 101062
mem/0: location 101062 is 2
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101438 is 101062
run/0: address to copy is 101062
run/0: its type is 1
mem/0: location 101062 is 2
run/0: product 0 is len
mem/0: storing 2 in location 101439
run/0: instruction buffer-full?/3
run/0: {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101438 is 101062
mem/0: location 101062 is 2
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101438 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is s
mem/0: storing 101064 in location 101440
run/0: instruction buffer-full?/4
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- length/30 {name: "s", value: 3, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}
run/0: ingredient 0 is s
mem/0: location 101440 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 98
mem/0: location 101067 is 0
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
mem/0: location 101440 is 101064
run/0: product 0 is capacity
mem/0: storing 30 in location 101441
run/0: instruction buffer-full?/5
run/0: {name: "result", value: 5, type: 3, properties: ["result": "boolean"]} <- greater-or-equal/16 {name: "len", value: 2, type: 1, properties: ["len": "integer"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is len
mem/0: location 101439 is 2
run/0: ingredient 1 is capacity
mem/0: location 101441 is 30
run/0: product 0 is result
mem/0: storing 0 in location 101442
run/0: instruction buffer-full?/6
run/0: reply/35 {name: "result", value: 5, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101442 is 0
run/0: result 0 is 0
run/0: product 0 is full?
mem/0: storing 0 in location 101409
run/0: instruction buffer-append/5
run/0: break-unless/12 {name: "full?", value: 3, type: 3, properties: ["full?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is full?
mem/0: location 101409 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 7
run/0: instruction buffer-append/8
run/0: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer"]} <- get-address/27 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101407 is 101062
mem/0: location 101062 is 2
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101407 is 101062
run/0: address to copy is 101062
run/0: product 0 is len
mem/0: storing 101062 in location 101410
run/0: instruction buffer-append/9
run/0: {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character"]} <- get/26 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is in
mem/0: location 101407 is 101062
mem/0: location 101062 is 2
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101407 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is s
mem/0: storing 101064 in location 101411
run/0: instruction buffer-append/10
run/0: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character"]} <- index-address/29 {name: "s", value: 5, type: 2-5-4, properties: ["s": "address":"array":"character", "deref": ]}, {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]}
run/0: ingredient 0 is s
mem/0: location 101411 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 98
mem/0: location 101067 is 0
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
run/0: ingredient 1 is len
mem/0: location 101410 is 101062
mem/0: location 101062 is 2
mem/0: location 101411 is 101064
mem/0: location 101410 is 101062
mem/0: location 101062 is 2
run/0: product 0 is dest
mem/0: storing 101067 in location 101412
run/0: instruction buffer-append/11
run/0: {name: "dest", value: 6, type: 2-4, properties: ["dest": "address":"character", "deref": ]} <- copy/1 {name: "c", value: 2, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is c
mem/0: location 101408 is 13
run/0: product 0 is dest
mem/0: location 101412 is 101067
mem/0: storing 13 in location 101067
run/0: instruction buffer-append/12
run/0: {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]} <- add/2 {name: "len", value: 4, type: 2-1, properties: ["len": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is len
mem/0: location 101410 is 101062
mem/0: location 101062 is 2
run/0: ingredient 1 is 1
run/0: product 0 is len
mem/0: location 101410 is 101062
mem/0: storing 3 in location 101062
run/0: instruction buffer-append/13
run/0: reply/35 {name: "in", value: 1, type: 2-9, properties: ["in": "address":"buffer", "same-as-ingredient": "0"]}
run/0: ingredient 0 is in
mem/0: location 101407 is 101062
run/0: result 0 is 101062
run/0: product 0 is line
mem/0: storing 101062 in location 101004
run/0: instruction buffer-lines/8
run/0: {name: "line-done?", value: 5, type: 3, properties: ["line-done?": "boolean"]} <- equal/13 {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "13", value: 13, type: 0, properties: ["13": "literal", "newline": ]}
run/0: ingredient 0 is c
mem/0: location 101005 is 13
run/0: ingredient 1 is 13
run/0: product 0 is line-done?
mem/0: storing 1 in location 101006
run/0: instruction buffer-lines/9
run/0: break-if/11 {name: "line-done?", value: 5, type: 3, properties: ["line-done?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is line-done?
mem/0: location 101006 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 11
run/0: instruction buffer-lines/12
run/0: {name: "i", value: 6, type: 1, properties: ["i": "integer"]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is i
mem/0: storing 0 in location 101007
run/0: instruction buffer-lines/13
run/0: {name: "line-contents", value: 7, type: 2-5-4, properties: ["line-contents": "address":"array":"character"]} <- get/26 {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is line
mem/0: location 101004 is 101062
mem/0: location 101062 is 3
mem/0: location 101063 is 101064
run/0: ingredient 1 is data
mem/0: location 101004 is 101062
run/0: address to copy is 101063
run/0: its type is 2
mem/0: location 101063 is 101064
run/0: product 0 is line-contents
mem/0: storing 101064 in location 101008
run/0: instruction buffer-lines/14
run/0: {name: "max", value: 8, type: 1, properties: ["max": "integer"]} <- get/26 {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is line
mem/0: location 101004 is 101062
mem/0: location 101062 is 3
mem/0: location 101063 is 101064
run/0: ingredient 1 is length
mem/0: location 101004 is 101062
run/0: address to copy is 101062
run/0: its type is 1
mem/0: location 101062 is 3
run/0: product 0 is max
mem/0: storing 3 in location 101009
run/0: instruction buffer-lines/16
run/0: {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "max", value: 8, type: 1, properties: ["max": "integer"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 0
run/0: ingredient 1 is max
mem/0: location 101009 is 3
run/0: product 0 is done?
mem/0: storing 0 in location 101010
run/0: instruction buffer-lines/17
run/0: break-if/11 {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 101010 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction buffer-lines/18
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]} <- index/28 {name: "line-contents", value: 7, type: 2-5-4, properties: ["line-contents": "address":"array":"character", "deref": ]}, {name: "i", value: 6, type: 1, properties: ["i": "integer"]}
run/0: ingredient 0 is line-contents
mem/0: location 101008 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 98
mem/0: location 101067 is 13
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
run/0: ingredient 1 is i
mem/0: location 101007 is 0
mem/0: location 101008 is 101064
mem/0: location 101007 is 0
run/0: address to copy is 101065
run/0: its type is 4
mem/0: location 101065 is 97
run/0: product 0 is c
mem/0: storing 97 in location 101005
run/0: instruction buffer-lines/19
run/0: {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]} <- write/109 {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]}, {name: "c", value: 4, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is out
mem/0: location 101003 is 1077
run/0: ingredient 1 is c
mem/0: location 101005 is 97
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101467
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101469
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/32 
run/0: product 0 is val
mem/0: storing 97 in location 101470
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101469 is 1077
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101498
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101500
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101500 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 101500 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 0
run/0: product 0 is tmp
mem/0: storing 0 in location 101501
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 101501 is 0
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 101501
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101500 is 1077
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101529
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101531
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101531 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is data
mem/0: location 101531 is 1077
run/0: address to copy is 1079
run/0: its type is 2
mem/0: location 1079 is 1080
run/0: product 0 is q
mem/0: storing 1080 in location 101532
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/30 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 101532 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 0
mem/0: location 1082 is 0
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
mem/0: location 101532 is 1080
run/0: product 0 is result
mem/0: storing 11 in location 101533
run/0: instruction channel-capacity/4
run/0: reply/35 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 101533 is 11
run/0: result 0 is 11
run/0: product 0 is len
mem/0: storing 11 in location 101502
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 101501 is 1
run/0: ingredient 1 is len
mem/0: location 101502 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101503
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101503 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101500 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 101500 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101504
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101504 is 0
run/0: ingredient 1 is tmp
mem/0: location 101501 is 1
run/0: product 0 is result
mem/0: storing 0 in location 101505
run/0: instruction channel-full?/12
run/0: reply/35 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101505 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101471
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 101471 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101469 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is data
mem/0: location 101469 is 1077
run/0: address to copy is 1079
run/0: its type is 2
mem/0: location 1079 is 1080
run/0: product 0 is circular-buffer
mem/0: storing 1080 in location 101473
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101469 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 0
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 101469 is 1077
run/0: address to copy is 1078
run/0: product 0 is free
mem/0: storing 1078 in location 101474
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101473 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 0
mem/0: location 1082 is 0
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
run/0: ingredient 1 is free
mem/0: location 101474 is 1078
mem/0: location 1078 is 0
mem/0: location 101473 is 1080
mem/0: location 101474 is 1078
mem/0: location 1078 is 0
run/0: product 0 is dest
mem/0: storing 1081 in location 101475
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 101470 is 97
run/0: product 0 is dest
mem/0: location 101475 is 1081
mem/0: storing 97 in location 1081
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 101474 is 1078
mem/0: location 1078 is 0
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 101474 is 1078
mem/0: storing 1 in location 1078
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101473 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 0
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
mem/0: location 101473 is 1080
run/0: product 0 is len
mem/0: storing 11 in location 101476
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 101474 is 1078
mem/0: location 1078 is 1
run/0: ingredient 1 is len
mem/0: location 101476 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101477
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101477 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/35 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 101469 is 1077
run/0: result 0 is 1077
run/0: product 0 is out
mem/0: storing 1077 in location 101003
run/0: instruction buffer-lines/20
run/0: {name: "i", value: 6, type: 1, properties: ["i": "integer"]} <- add/2 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 0
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 1 in location 101007
run/0: instruction buffer-lines/21
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 16
run/0: instruction buffer-lines/16
run/0: {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "max", value: 8, type: 1, properties: ["max": "integer"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 1
run/0: ingredient 1 is max
mem/0: location 101009 is 3
run/0: product 0 is done?
mem/0: storing 0 in location 101010
run/0: instruction buffer-lines/17
run/0: break-if/11 {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 101010 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction buffer-lines/18
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]} <- index/28 {name: "line-contents", value: 7, type: 2-5-4, properties: ["line-contents": "address":"array":"character", "deref": ]}, {name: "i", value: 6, type: 1, properties: ["i": "integer"]}
run/0: ingredient 0 is line-contents
mem/0: location 101008 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 98
mem/0: location 101067 is 13
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
run/0: ingredient 1 is i
mem/0: location 101007 is 1
mem/0: location 101008 is 101064
mem/0: location 101007 is 1
run/0: address to copy is 101066
run/0: its type is 4
mem/0: location 101066 is 98
run/0: product 0 is c
mem/0: storing 98 in location 101005
run/0: instruction buffer-lines/19
run/0: {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]} <- write/109 {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]}, {name: "c", value: 4, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is out
mem/0: location 101003 is 1077
run/0: ingredient 1 is c
mem/0: location 101005 is 98
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101560
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101562
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/32 
run/0: product 0 is val
mem/0: storing 98 in location 101563
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101562 is 1077
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101591
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101593
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101593 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 1
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 101593 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 1
run/0: product 0 is tmp
mem/0: storing 1 in location 101594
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 101594 is 1
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 2 in location 101594
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101593 is 1077
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101622
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101624
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101624 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 1
mem/0: location 1079 is 1080
run/0: ingredient 1 is data
mem/0: location 101624 is 1077
run/0: address to copy is 1079
run/0: its type is 2
mem/0: location 1079 is 1080
run/0: product 0 is q
mem/0: storing 1080 in location 101625
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/30 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 101625 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 0
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
mem/0: location 101625 is 1080
run/0: product 0 is result
mem/0: storing 11 in location 101626
run/0: instruction channel-capacity/4
run/0: reply/35 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 101626 is 11
run/0: result 0 is 11
run/0: product 0 is len
mem/0: storing 11 in location 101595
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 101594 is 2
run/0: ingredient 1 is len
mem/0: location 101595 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101596
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101596 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101593 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 1
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 101593 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101597
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101597 is 0
run/0: ingredient 1 is tmp
mem/0: location 101594 is 2
run/0: product 0 is result
mem/0: storing 0 in location 101598
run/0: instruction channel-full?/12
run/0: reply/35 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101598 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101564
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 101564 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101562 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 1
mem/0: location 1079 is 1080
run/0: ingredient 1 is data
mem/0: location 101562 is 1077
run/0: address to copy is 1079
run/0: its type is 2
mem/0: location 1079 is 1080
run/0: product 0 is circular-buffer
mem/0: storing 1080 in location 101566
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101562 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 1
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 101562 is 1077
run/0: address to copy is 1078
run/0: product 0 is free
mem/0: storing 1078 in location 101567
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101566 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 0
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
run/0: ingredient 1 is free
mem/0: location 101567 is 1078
mem/0: location 1078 is 1
mem/0: location 101566 is 1080
mem/0: location 101567 is 1078
mem/0: location 1078 is 1
run/0: product 0 is dest
mem/0: storing 1082 in location 101568
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 101563 is 98
run/0: product 0 is dest
mem/0: location 101568 is 1082
mem/0: storing 98 in location 1082
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 101567 is 1078
mem/0: location 1078 is 1
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 101567 is 1078
mem/0: storing 2 in location 1078
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101566 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 98
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
mem/0: location 101566 is 1080
run/0: product 0 is len
mem/0: storing 11 in location 101569
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 101567 is 1078
mem/0: location 1078 is 2
run/0: ingredient 1 is len
mem/0: location 101569 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101570
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101570 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/35 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 101562 is 1077
run/0: result 0 is 1077
run/0: product 0 is out
mem/0: storing 1077 in location 101003
run/0: instruction buffer-lines/20
run/0: {name: "i", value: 6, type: 1, properties: ["i": "integer"]} <- add/2 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 1
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 2 in location 101007
run/0: instruction buffer-lines/21
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 16
run/0: instruction buffer-lines/16
run/0: {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "max", value: 8, type: 1, properties: ["max": "integer"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 2
run/0: ingredient 1 is max
mem/0: location 101009 is 3
run/0: product 0 is done?
mem/0: storing 0 in location 101010
run/0: instruction buffer-lines/17
run/0: break-if/11 {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 101010 is 0
run/0: ingredient 1 is 
run/0: jump-if fell through
run/0: instruction buffer-lines/18
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]} <- index/28 {name: "line-contents", value: 7, type: 2-5-4, properties: ["line-contents": "address":"array":"character", "deref": ]}, {name: "i", value: 6, type: 1, properties: ["i": "integer"]}
run/0: ingredient 0 is line-contents
mem/0: location 101008 is 101064
mem/0: location 101064 is 30
mem/0: location 101065 is 97
mem/0: location 101066 is 98
mem/0: location 101067 is 13
mem/0: location 101068 is 0
mem/0: location 101069 is 0
mem/0: location 101070 is 0
mem/0: location 101071 is 0
mem/0: location 101072 is 0
mem/0: location 101073 is 0
mem/0: location 101074 is 0
mem/0: location 101075 is 0
mem/0: location 101076 is 0
mem/0: location 101077 is 0
mem/0: location 101078 is 0
mem/0: location 101079 is 0
mem/0: location 101080 is 0
mem/0: location 101081 is 0
mem/0: location 101082 is 0
mem/0: location 101083 is 0
mem/0: location 101084 is 0
mem/0: location 101085 is 0
mem/0: location 101086 is 0
mem/0: location 101087 is 0
mem/0: location 101088 is 0
mem/0: location 101089 is 0
mem/0: location 101090 is 0
mem/0: location 101091 is 0
mem/0: location 101092 is 0
mem/0: location 101093 is 0
mem/0: location 101094 is 0
run/0: ingredient 1 is i
mem/0: location 101007 is 2
mem/0: location 101008 is 101064
mem/0: location 101007 is 2
run/0: address to copy is 101067
run/0: its type is 4
mem/0: location 101067 is 13
run/0: product 0 is c
mem/0: storing 13 in location 101005
run/0: instruction buffer-lines/19
run/0: {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]} <- write/109 {name: "out", value: 2, type: 2-10, properties: ["out": "address":"channel"]}, {name: "c", value: 4, type: 4, properties: ["c": "character"]}
run/0: ingredient 0 is out
mem/0: location 101003 is 1077
run/0: ingredient 1 is c
mem/0: location 101005 is 13
run/0: instruction write/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101653
run/0: product 0 is default-space
run/0: instruction write/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101655
run/0: instruction write/2
run/0: {name: "val", value: 2, type: 1, properties: ["val": "location"]} <- next-ingredient/32 
run/0: product 0 is val
mem/0: storing 13 in location 101656
run/0: instruction write/4
run/0: {name: "full", value: 3, type: 3, properties: ["full": "boolean"]} <- channel-full?/110 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101655 is 1077
run/0: instruction channel-full?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101684
run/0: product 0 is default-space
run/0: instruction channel-full?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101686
run/0: instruction channel-full?/2
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101686 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 2
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 101686 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 2
run/0: product 0 is tmp
mem/0: storing 2 in location 101687
run/0: instruction channel-full?/3
run/0: {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]} <- add/2 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is tmp
mem/0: location 101687 is 2
run/0: ingredient 1 is 1
run/0: product 0 is tmp
mem/0: storing 3 in location 101687
run/0: instruction channel-full?/5
run/0: {name: "len", value: 3, type: 1, properties: ["len": "integer"]} <- channel-capacity/113 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101686 is 1077
run/0: instruction channel-capacity/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101715
run/0: product 0 is default-space
run/0: instruction channel-capacity/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 101717
run/0: instruction channel-capacity/2
run/0: {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101717 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 2
mem/0: location 1079 is 1080
run/0: ingredient 1 is data
mem/0: location 101717 is 1077
run/0: address to copy is 1079
run/0: its type is 2
mem/0: location 1079 is 1080
run/0: product 0 is q
mem/0: storing 1080 in location 101718
run/0: instruction channel-capacity/3
run/0: {name: "result", value: 3, type: 1, properties: ["result": "integer"]} <- length/30 {name: "q", value: 2, type: 2-5-1, properties: ["q": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is q
mem/0: location 101718 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 98
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
mem/0: location 101718 is 1080
run/0: product 0 is result
mem/0: storing 11 in location 101719
run/0: instruction channel-capacity/4
run/0: reply/35 {name: "result", value: 3, type: 1, properties: ["result": "integer"]}
run/0: ingredient 0 is result
mem/0: location 101719 is 11
run/0: result 0 is 11
run/0: product 0 is len
mem/0: storing 11 in location 101688
run/0: instruction channel-full?/6
run/0: {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}, {name: "len", value: 3, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is tmp
mem/0: location 101687 is 3
run/0: ingredient 1 is len
mem/0: location 101688 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101689
run/0: instruction channel-full?/7
run/0: break-unless/12 {name: "at-end?", value: 4, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101689 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 9
run/0: instruction channel-full?/10
run/0: {name: "full", value: 5, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101686 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 2
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 101686 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101690
run/0: instruction channel-full?/11
run/0: {name: "result", value: 6, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 5, type: 1, properties: ["full": "integer"]}, {name: "tmp", value: 2, type: 1, properties: ["tmp": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101690 is 0
run/0: ingredient 1 is tmp
mem/0: location 101687 is 3
run/0: product 0 is result
mem/0: storing 0 in location 101691
run/0: instruction channel-full?/12
run/0: reply/35 {name: "result", value: 6, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101691 is 0
run/0: result 0 is 0
run/0: product 0 is full
mem/0: storing 0 in location 101657
run/0: instruction write/5
run/0: break-unless/12 {name: "full", value: 3, type: 3, properties: ["full": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is full
mem/0: location 101657 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 8
run/0: instruction write/9
run/0: {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "data", value: 2, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101655 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 2
mem/0: location 1079 is 1080
run/0: ingredient 1 is data
mem/0: location 101655 is 1077
run/0: address to copy is 1079
run/0: its type is 2
mem/0: location 1079 is 1080
run/0: product 0 is circular-buffer
mem/0: storing 1080 in location 101659
run/0: instruction write/10
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101655 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 2
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 101655 is 1077
run/0: address to copy is 1078
run/0: product 0 is free
mem/0: storing 1078 in location 101660
run/0: instruction write/11
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location"]} <- index-address/29 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}, {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101659 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 98
mem/0: location 1083 is 0
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
run/0: ingredient 1 is free
mem/0: location 101660 is 1078
mem/0: location 1078 is 2
mem/0: location 101659 is 1080
mem/0: location 101660 is 1078
mem/0: location 1078 is 2
run/0: product 0 is dest
mem/0: storing 1083 in location 101661
run/0: instruction write/12
run/0: {name: "dest", value: 7, type: 2-1, properties: ["dest": "address":"location", "deref": ]} <- copy/1 {name: "val", value: 2, type: 1, properties: ["val": "location"]}
run/0: ingredient 0 is val
mem/0: location 101656 is 13
run/0: product 0 is dest
mem/0: location 101661 is 1083
mem/0: storing 13 in location 1083
run/0: instruction write/13
run/0: {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]} <- add/2 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is free
mem/0: location 101660 is 1078
mem/0: location 1078 is 2
run/0: ingredient 1 is 1
run/0: product 0 is free
mem/0: location 101660 is 1078
mem/0: storing 3 in location 1078
run/0: instruction write/15
run/0: {name: "len", value: 8, type: 1, properties: ["len": "integer"]} <- length/30 {name: "circular-buffer", value: 5, type: 2-5-1, properties: ["circular-buffer": "address":"array":"location", "deref": ]}
run/0: ingredient 0 is circular-buffer
mem/0: location 101659 is 1080
mem/0: location 1080 is 11
mem/0: location 1081 is 97
mem/0: location 1082 is 98
mem/0: location 1083 is 13
mem/0: location 1084 is 0
mem/0: location 1085 is 0
mem/0: location 1086 is 0
mem/0: location 1087 is 0
mem/0: location 1088 is 0
mem/0: location 1089 is 0
mem/0: location 1090 is 0
mem/0: location 1091 is 0
mem/0: location 101659 is 1080
run/0: product 0 is len
mem/0: storing 11 in location 101662
run/0: instruction write/16
run/0: {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]} <- greater-or-equal/16 {name: "free", value: 6, type: 2-1, properties: ["free": "address":"integer", "deref": ]}, {name: "len", value: 8, type: 1, properties: ["len": "integer"]}
run/0: ingredient 0 is free
mem/0: location 101660 is 1078
mem/0: location 1078 is 3
run/0: ingredient 1 is len
mem/0: location 101662 is 11
run/0: product 0 is at-end?
mem/0: storing 0 in location 101663
run/0: instruction write/17
run/0: break-unless/12 {name: "at-end?", value: 9, type: 3, properties: ["at-end?": "boolean"]}, {name: "", value: 1, type: 0, properties: ["": ]}
run/0: ingredient 0 is at-end?
mem/0: location 101663 is 0
run/0: ingredient 1 is 
run/0: jumping to instruction 19
run/0: instruction write/20
run/0: reply/35 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "same-as-ingredient": "0"]}
run/0: ingredient 0 is chan
mem/0: location 101655 is 1077
run/0: result 0 is 1077
run/0: product 0 is out
mem/0: storing 1077 in location 101003
run/0: instruction buffer-lines/20
run/0: {name: "i", value: 6, type: 1, properties: ["i": "integer"]} <- add/2 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "1", value: 1, type: 0, properties: ["1": "literal"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 2
run/0: ingredient 1 is 1
run/0: product 0 is i
mem/0: storing 3 in location 101007
run/0: instruction buffer-lines/21
run/0: loop/10 {name: "", value: -6, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 16
run/0: instruction buffer-lines/16
run/0: {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]} <- greater-or-equal/16 {name: "i", value: 6, type: 1, properties: ["i": "integer"]}, {name: "max", value: 8, type: 1, properties: ["max": "integer"]}
run/0: ingredient 0 is i
mem/0: location 101007 is 3
run/0: ingredient 1 is max
mem/0: location 101009 is 3
run/0: product 0 is done?
mem/0: storing 1 in location 101010
run/0: instruction buffer-lines/17
run/0: break-if/11 {name: "done?", value: 9, type: 3, properties: ["done?": "boolean"]}, {name: "", value: 4, type: 0, properties: ["": ]}
run/0: ingredient 0 is done?
mem/0: location 101010 is 1
run/0: ingredient 1 is 
run/0: jumping to instruction 22
run/0: instruction buffer-lines/23
run/0: loop/10 {name: "", value: -20, type: 0, properties: ["": ]}
run/0: ingredient 0 is 
run/0: jumping to instruction 4
run/0: instruction buffer-lines/4
run/0: {name: "line", value: 3, type: 2-9, properties: ["line": "address":"buffer"]} <- init-buffer/101 {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is 30
run/0: instruction init-buffer/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101746
run/0: product 0 is default-space
run/0: instruction init-buffer/1
run/0: {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer"]} <- new/50 {name: "buffer", value: 9, type: 0, properties: ["buffer": "type"]}
run/0: ingredient 0 is buffer
mem/0: new alloc: 101777
run/0: product 0 is result
mem/0: storing 101777 in location 101748
run/0: instruction init-buffer/2
run/0: {name: "len", value: 2, type: 2-1, properties: ["len": "address":"integer"]} <- get-address/27 {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer", "deref": ]}, {name: "length", value: 0, type: 0, properties: ["length": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101748 is 101777
mem/0: location 101777 is 0
mem/0: location 101778 is 0
run/0: ingredient 1 is length
mem/0: location 101748 is 101777
run/0: address to copy is 101777
run/0: product 0 is len
mem/0: storing 101777 in location 101749
run/0: instruction init-buffer/3
run/0: {name: "len", value: 2, type: 2-1, properties: ["len": "address":"integer", "deref": ]} <- copy/1 {name: "0", value: 0, type: 0, properties: ["0": "literal"]}
run/0: ingredient 0 is 0
run/0: product 0 is len
mem/0: location 101749 is 101777
mem/0: storing 0 in location 101777
run/0: instruction init-buffer/4
run/0: {name: "s", value: 3, type: 2-2-5-4, properties: ["s": "address":"address":"array":"character"]} <- get-address/27 {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer", "deref": ]}, {name: "data", value: 1, type: 0, properties: ["data": "offset"]}
run/0: ingredient 0 is result
mem/0: location 101748 is 101777
mem/0: location 101777 is 0
mem/0: location 101778 is 0
run/0: ingredient 1 is data
mem/0: location 101748 is 101777
run/0: address to copy is 101778
run/0: product 0 is s
mem/0: storing 101778 in location 101750
run/0: instruction init-buffer/5
run/0: {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]} <- next-ingredient/32 
run/0: product 0 is capacity
mem/0: storing 30 in location 101751
run/0: instruction init-buffer/6
run/0: {name: "s", value: 3, type: 2-2-5-4, properties: ["s": "address":"address":"array":"character", "deref": ]} <- new/50 {name: "character", value: 4, type: 0, properties: ["character": "type"]}, {name: "capacity", value: 4, type: 1, properties: ["capacity": "integer"]}
run/0: ingredient 0 is character
run/0: ingredient 1 is capacity
mem/0: location 101751 is 30
mem/0: array size is 30
mem/0: new alloc: 101779
run/0: product 0 is s
mem/0: location 101750 is 101778
mem/0: storing 101779 in location 101778
run/0: instruction init-buffer/7
run/0: reply/35 {name: "result", value: 1, type: 2-9, properties: ["result": "address":"buffer"]}
run/0: ingredient 0 is result
mem/0: location 101748 is 101777
run/0: result 0 is 101777
run/0: product 0 is line
mem/0: storing 101777 in location 101004
run/0: instruction buffer-lines/6
run/0: {name: "c", value: 4, type: 4, properties: ["c": "character"]}, {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]} <- read/111 {name: "in", value: 1, type: 2-10, properties: ["in": "address":"channel"]}
run/0: ingredient 0 is in
mem/0: location 101002 is 1031
run/0: instruction read/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101810
run/0: product 0 is default-space
run/0: instruction read/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101812
run/0: instruction read/3
run/0: {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]} <- channel-empty?/112 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]}
run/0: ingredient 0 is chan
mem/0: location 101812 is 1031
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 101841
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1031 in location 101843
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101843 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 3
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-full
mem/0: location 101843 is 1031
run/0: address to copy is 1031
run/0: its type is 1
mem/0: location 1031 is 3
run/0: product 0 is full
mem/0: storing 3 in location 101844
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101843 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 3
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101843 is 1031
run/0: address to copy is 1032
run/0: its type is 1
mem/0: location 1032 is 3
run/0: product 0 is free
mem/0: storing 3 in location 101845
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 101844 is 3
run/0: ingredient 1 is free
mem/0: location 101845 is 3
run/0: product 0 is result
mem/0: storing 1 in location 101846
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 101846 is 1
run/0: result 0 is 1
run/0: product 0 is empty
mem/0: storing 1 in location 101813
run/0: instruction read/4
run/0: break-unless/12 {name: "empty", value: 2, type: 3, properties: ["empty": "boolean"]}, {name: "", value: 2, type: 0, properties: ["": ]}
run/0: ingredient 0 is empty
mem/0: location 101813 is 1
run/0: ingredient 1 is 
run/0: jump-unless fell through
run/0: instruction read/5
run/0: {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer"]} <- get-address/27 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 101812 is 1031
mem/0: location 1031 is 3
mem/0: location 1032 is 3
mem/0: location 1033 is 1034
run/0: ingredient 1 is first-free
mem/0: location 101812 is 1031
run/0: address to copy is 1032
run/0: product 0 is free-address
mem/0: storing 1032 in location 101814
run/0: instruction read/6
run/0: wait-for-location/41 {name: "free-address", value: 3, type: 2-1, properties: ["free-address": "address":"integer", "deref": ]}
run/0: ingredient 0 is free-address
mem/0: location 101814 is 1032
mem/0: location 1032 is 3
mem/0: location 101814 is 1032
run/0: waiting for location 1032 to change from 3
schedule/0: waking up routine 1
schedule/0: run1001
run/0: instruction run1001/21
run/0: {name: "8", value: 8, type: 3, properties: ["8": "boolean"]} <- channel-empty?/112 {name: "2", value: 2, type: 2-10, properties: ["2": "address":"channel", "buffered-stdin": ]}
run/0: ingredient 0 is 2
mem/0: location 2 is 1077
run/0: instruction channel-empty?/0
run/0: {name: "default-space", value: 0, type: 2-5-1, properties: ["default-space": "address":"array":"location"]} <- new/50 {name: "location", value: 1, type: 0, properties: ["location": "type"]}, {name: "30", value: 30, type: 0, properties: ["30": "literal"]}
run/0: ingredient 0 is location
run/0: ingredient 1 is 30
mem/0: array size is 30
mem/0: new alloc: 1495
run/0: product 0 is default-space
run/0: instruction channel-empty?/1
run/0: {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel"]} <- next-ingredient/32 
run/0: product 0 is chan
mem/0: storing 1077 in location 1497
run/0: instruction channel-empty?/2
run/0: {name: "full", value: 2, type: 1, properties: ["full": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-full", value: 0, type: 0, properties: ["first-full": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1497 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 3
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-full
mem/0: location 1497 is 1077
run/0: address to copy is 1077
run/0: its type is 1
mem/0: location 1077 is 0
run/0: product 0 is full
mem/0: storing 0 in location 1498
run/0: instruction channel-empty?/3
run/0: {name: "free", value: 3, type: 1, properties: ["free": "integer"]} <- get/26 {name: "chan", value: 1, type: 2-10, properties: ["chan": "address":"channel", "deref": ]}, {name: "first-free", value: 1, type: 0, properties: ["first-free": "offset"]}
run/0: ingredient 0 is chan
mem/0: location 1497 is 1077
mem/0: location 1077 is 0
mem/0: location 1078 is 3
mem/0: location 1079 is 1080
run/0: ingredient 1 is first-free
mem/0: location 1497 is 1077
run/0: address to copy is 1078
run/0: its type is 1
mem/0: location 1078 is 3
run/0: product 0 is free
mem/0: storing 3 in location 1499
run/0: instruction channel-empty?/4
run/0: {name: "result", value: 4, type: 3, properties: ["result": "boolean"]} <- equal/13 {name: "full", value: 2, type: 1, properties: ["full": "integer"]}, {name: "free", value: 3, type: 1, properties: ["free": "integer"]}
run/0: ingredient 0 is full
mem/0: location 1498 is 0
run/0: ingredient 1 is free
mem/0: location 1499 is 3
run/0: product 0 is result
mem/0: storing 0 in location 1500
run/0: instruction channel-empty?/5
run/0: reply/35 {name: "result", value: 4, type: 3, properties: ["result": "boolean"]}
run/0: ingredient 0 is result
mem/0: location 1500 is 0
run/0: result 0 is 0
run/0: product 0 is 8
mem/0: storing 0 in location 8
run/0: instruction run1001/22
run/0: {name: "9", value: 9, type: 3, properties: ["9": "boolean", "completed?": ]} <- not/9 {name: "8", value: 8, type: 3, properties: ["8": "boolean"]}
run/0: ingredient 0 is 8
mem/0: location 8 is 0
run/0: product 0 is 9
mem/0: storing 1 in location 9
run/0: instruction run1001/23
run/0: assert/20 {name: "9", value: 9, type: 3, properties: ["9": "boolean", "completed?": ]}, {name: "
F buffer-lines-blocks-until-newline: channel should contain data after writing newline", value: 0, type: 0, properties: ["
F buffer-lines-blocks-until-newline: channel should contain data after writing newline": "literal-string"]}
run/0: ingredient 0 is 9
mem/0: location 9 is 1
run/0: ingredient 1 is 
F buffer-lines-blocks-until-newline: channel should contain data after writing newline
run/0: instruction run1001/24
run/0: trace/18 {name: "test", value: 0, type: 0, properties: ["test": "literal-string"]}, {name: "reached end", value: 0, type: 0, properties: ["reached end": "literal-string"]}
run/0: ingredient 0 is test
run/0: ingredient 1 is reached end
test/0: reached end
run/0: instruction buffer-lines-blocks-until-newline/1
run/0: trace-should-contain/53 {name: "
    test: reached end
  ", value: 0, type: 0, properties: ["
    test: reached end
  ": "literal-string"]}
run/0: ingredient 0 is 
    test: reached end
  
