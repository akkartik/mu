parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abcde]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .abcdâ†©.\n    .e    .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain-in-color
parse:   ingredient: {name: "245", properties: ["245": "literal", "grey": ]}
parse:   ingredient: {name: "\n    .    â†©.\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-wraps-barely-long-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: screen-should-contain-in-color ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-wraps-barely-long-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abcde]
    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abcde", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abcde]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1104
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1106
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1107
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1108
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1109
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1110
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1110 is 5
9999 mem: storing 4 in location 1110
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1135
9999 mem: storing 1135 in location 1111
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1112
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1107 is 1031
9999 mem: location 1112 is 1138
9999 mem: storing 1031 in location 1138
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1113
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1139
9999 mem: storing 0 in location 1139
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1113
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1109 is 0
9999 mem: location 1113 is 1140
9999 mem: storing 0 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1113
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1110 is 4
9999 mem: location 1113 is 1142
9999 mem: storing 4 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1113
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1113
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1113
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1109 is 0
9999 mem: location 1113 is 1144
9999 mem: storing 0 in location 1144
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1114
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1149
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1151
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1152
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1180
9999 mem: storing 1180 in location 1153
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1153 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1153 is 1180
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1154
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1151 is 167
9999 mem: location 1154 is 1180
9999 mem: storing 167 in location 1180
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1153 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1153 is 1180
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1155
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1152 is 0
9999 mem: location 1155 is 1181
9999 mem: storing 0 in location 1181
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1152 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1153 is 1180
9999 run: result 0 is 1180
9999 mem: location 1114 is 1135
9999 mem: storing 1180 in location 1135
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1115
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1114 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1115 is 1137
9999 mem: storing 1180 in location 1137
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 0
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1116
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1114 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1116 is 1136
9999 mem: storing 1180 in location 1136
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1117
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1117 is 1146
9999 mem: storing 1 in location 1146
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1106 is 1098
9999 run: jumping to instruction 32
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1106 is 1098
9999 mem: location 1098 is 5
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1103 is 101
9999 mem: location 1106 is 1098
9999 mem: storing 5 in location 1118
 102 run: jump-if len:number, 1:offset
9999 mem: location 1118 is 5
9999 run: jumping to instruction 35
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1119
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1116 is 1136
9999 mem: location 1136 is 1180
9999 mem: storing 1180 in location 1120
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1119 is 0
9999 mem: location 1118 is 5
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1106 is 1098
9999 mem: location 1098 is 5
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1103 is 101
9999 mem: location 1119 is 0
9999 mem: location 1106 is 1098
9999 mem: location 1119 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1122
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1122 is 97
9999 mem: location 1120 is 1180
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1183
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1185
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1186
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1214
9999 mem: storing 1214 in location 1187
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1187 is 1214
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1187 is 1214
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1188
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1185 is 97
9999 mem: location 1188 is 1214
9999 mem: storing 97 in location 1214
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1186 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1186 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 0
9999 mem: storing 0 in location 1189
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1186 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1186 is 1180
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1190
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1187 is 1214
9999 mem: location 1190 is 1181
9999 mem: storing 1214 in location 1181
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1187 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1187 is 1214
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 1190
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1186 is 1180
9999 mem: location 1190 is 1216
9999 mem: storing 1180 in location 1216
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1187 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1180
9999 mem: location 1187 is 1214
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1190
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1215
9999 mem: storing 0 in location 1215
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1189 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1187 is 1214
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1180
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1217
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1219
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1219 is 1180
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1219 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 1214
9999 mem: location 1182 is 0
9999 mem: location 1219 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1214
9999 mem: storing 1214 in location 1220
 103 run: reply result:address:duplex-list
9999 mem: location 1220 is 1214
9999 run: result 0 is 1214
9999 mem: storing 1214 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1119 is 0
9999 mem: storing 1 in location 1119
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1119 is 1
9999 mem: location 1118 is 5
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1106 is 1098
9999 mem: location 1098 is 5
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1103 is 101
9999 mem: location 1119 is 1
9999 mem: location 1106 is 1098
9999 mem: location 1119 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1122
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1122 is 98
9999 mem: location 1120 is 1214
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1248
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1250
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1251
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1279
9999 mem: storing 1279 in location 1252
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1252 is 1279
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1252 is 1279
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1253
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1250 is 98
9999 mem: location 1253 is 1279
9999 mem: storing 98 in location 1279
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1251 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1180
9999 mem: location 1251 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1254
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1251 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1180
9999 mem: location 1251 is 1214
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1255
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1252 is 1279
9999 mem: location 1255 is 1215
9999 mem: storing 1279 in location 1215
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1252 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1252 is 1279
9999 run: address to copy is 1281
9999 mem: storing 1281 in location 1255
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1251 is 1214
9999 mem: location 1255 is 1281
9999 mem: storing 1214 in location 1281
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1252 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1214
9999 mem: location 1252 is 1279
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1255
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1280
9999 mem: storing 0 in location 1280
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1252 is 1279
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1214
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1282
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1284
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1284 is 1214
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1284 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1284 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1279
9999 mem: storing 1279 in location 1285
 103 run: reply result:address:duplex-list
9999 mem: location 1285 is 1279
9999 run: result 0 is 1279
9999 mem: storing 1279 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1119 is 1
9999 mem: storing 2 in location 1119
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1119 is 2
9999 mem: location 1118 is 5
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1106 is 1098
9999 mem: location 1098 is 5
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1103 is 101
9999 mem: location 1119 is 2
9999 mem: location 1106 is 1098
9999 mem: location 1119 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1122
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1122 is 99
9999 mem: location 1120 is 1279
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1313
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1315
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1316
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1344
9999 mem: storing 1344 in location 1317
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1317 is 1344
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1317 is 1344
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 1318
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1315 is 99
9999 mem: location 1318 is 1344
9999 mem: storing 99 in location 1344
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1316 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1214
9999 mem: location 1316 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 0
9999 mem: storing 0 in location 1319
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1316 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1214
9999 mem: location 1316 is 1279
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1320
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1317 is 1344
9999 mem: location 1320 is 1280
9999 mem: storing 1344 in location 1280
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1317 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1317 is 1344
9999 run: address to copy is 1346
9999 mem: storing 1346 in location 1320
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1316 is 1279
9999 mem: location 1320 is 1346
9999 mem: storing 1279 in location 1346
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1317 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 1279
9999 mem: location 1317 is 1344
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1320
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1319 is 0
9999 mem: location 1320 is 1345
9999 mem: storing 0 in location 1345
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1319 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1317 is 1344
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1279
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1347
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1349
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1349 is 1279
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1349 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1349 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 1344
9999 mem: storing 1344 in location 1350
 103 run: reply result:address:duplex-list
9999 mem: location 1350 is 1344
9999 run: result 0 is 1344
9999 mem: storing 1344 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1119 is 2
9999 mem: storing 3 in location 1119
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1119 is 3
9999 mem: location 1118 is 5
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1106 is 1098
9999 mem: location 1098 is 5
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1103 is 101
9999 mem: location 1119 is 3
9999 mem: location 1106 is 1098
9999 mem: location 1119 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 100
9999 mem: storing 100 in location 1122
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1122 is 100
9999 mem: location 1120 is 1344
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1378
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1380
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 1381
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1409
9999 mem: storing 1409 in location 1382
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1382 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: location 1382 is 1409
9999 run: address to copy is 1409
9999 mem: storing 1409 in location 1383
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1380 is 100
9999 mem: location 1383 is 1409
9999 mem: storing 100 in location 1409
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1381 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 1279
9999 mem: location 1381 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 0
9999 mem: storing 0 in location 1384
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1381 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 1279
9999 mem: location 1381 is 1344
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1385
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1382 is 1409
9999 mem: location 1385 is 1345
9999 mem: storing 1409 in location 1345
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1382 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: location 1382 is 1409
9999 run: address to copy is 1411
9999 mem: storing 1411 in location 1385
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1381 is 1344
9999 mem: location 1385 is 1411
9999 mem: storing 1344 in location 1411
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1382 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1344
9999 mem: location 1382 is 1409
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1385
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1384 is 0
9999 mem: location 1385 is 1410
9999 mem: storing 0 in location 1410
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1384 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1382 is 1409
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1344
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1412
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 1414
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1414 is 1344
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1414 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 1414 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 1409
9999 mem: storing 1409 in location 1415
 103 run: reply result:address:duplex-list
9999 mem: location 1415 is 1409
9999 run: result 0 is 1409
9999 mem: storing 1409 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1119 is 3
9999 mem: storing 4 in location 1119
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1119 is 4
9999 mem: location 1118 is 5
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1106 is 1098
9999 mem: location 1098 is 5
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 100
9999 mem: location 1103 is 101
9999 mem: location 1119 is 4
9999 mem: location 1106 is 1098
9999 mem: location 1119 is 4
9999 run: address to copy is 1103
9999 run: its type is character
9999 mem: location 1103 is 101
9999 mem: storing 101 in location 1122
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1122 is 101
9999 mem: location 1120 is 1409
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1443
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1445
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 1446
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1474
9999 mem: storing 1474 in location 1447
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1447 is 1474
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1447 is 1474
9999 run: address to copy is 1474
9999 mem: storing 1474 in location 1448
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1445 is 101
9999 mem: location 1448 is 1474
9999 mem: storing 101 in location 1474
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1446 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1344
9999 mem: location 1446 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 0
9999 mem: storing 0 in location 1449
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1446 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1344
9999 mem: location 1446 is 1409
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1450
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1447 is 1474
9999 mem: location 1450 is 1410
9999 mem: storing 1474 in location 1410
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1447 is 1474
9999 mem: location 1474 is 101
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1447 is 1474
9999 run: address to copy is 1476
9999 mem: storing 1476 in location 1450
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1446 is 1409
9999 mem: location 1450 is 1476
9999 mem: storing 1409 in location 1476
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1447 is 1474
9999 mem: location 1474 is 101
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 1447 is 1474
9999 run: address to copy is 1475
9999 mem: storing 1475 in location 1450
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1449 is 0
9999 mem: location 1450 is 1475
9999 mem: storing 0 in location 1475
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1449 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1447 is 1474
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1409
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1477
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 1479
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1479 is 1409
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1479 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 1479 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 1474
9999 mem: storing 1474 in location 1480
 103 run: reply result:address:duplex-list
9999 mem: location 1480 is 1474
9999 run: result 0 is 1474
9999 mem: storing 1474 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1119 is 4
9999 mem: storing 5 in location 1119
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1119 is 5
9999 mem: location 1118 is 5
9999 mem: storing 1 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 45
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1115
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1116 is 1136
9999 mem: location 1136 is 1180
9999 mem: location 1115 is 1137
9999 mem: storing 1180 in location 1137
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1111 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1111 is 1135
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1123
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1111 is 1135
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1508
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1135 in location 1510
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1031
9999 mem: storing 1031 in location 1511
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1139
9999 run: its type is number
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1512
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1140
9999 run: its type is number
9999 mem: location 1140 is 0
9999 mem: storing 0 in location 1513
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1549
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1551
 104 run: break-unless x:address:screen, 
9999 mem: location 1551 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1551 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1551 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1552
 104 run: reply height:number
9999 mem: location 1552 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1514
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 4
9999 mem: storing 4 in location 1515
 103 run: hide-screen screen:address
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1580
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1582
 104 run: break-unless x:address:screen, 
9999 mem: location 1582 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1582 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1136
9999 run: its type is address
9999 mem: location 1136 is 1180
9999 mem: storing 1180 in location 1516
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1516 is 1180
9999 mem: storing 1180 in location 1517
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1516 is 1180
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1611
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1613
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1613 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1613 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 1214
9999 mem: location 1182 is 0
9999 mem: location 1613 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1214
9999 mem: storing 1214 in location 1614
 104 run: reply result:address:duplex-list
9999 mem: location 1614 is 1214
9999 run: result 0 is 1214
9999 mem: storing 1214 in location 1516
 103 run: row:number <- copy top:number
9999 mem: location 1512 is 0
9999 mem: storing 0 in location 1518
 103 run: column:number <- copy left:number
9999 mem: location 1513 is 0
9999 mem: storing 0 in location 1519
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1520
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1521
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1522
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1511 is 1031
9999 mem: location 1518 is 0
9999 mem: location 1519 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1642
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1644
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1645
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1646
 104 run: break-unless x:address:screen, 
9999 mem: location 1644 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1644 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1644 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1647
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1645 is 0
9999 mem: location 1647 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1644 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1644 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1648
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1646 is 0
9999 mem: location 1648 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1644 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 1214
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 0
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1523
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1523 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 0
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1524
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1524 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1519 is 0
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: storing 1 in location 1525
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1525 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1516 is 1214
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1673
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1675
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1675 is 1214
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1675 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1675 is 1214
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 1180
9999 mem: storing 1180 in location 1676
 104 run: reply result:address:duplex-list
9999 mem: location 1676 is 1180
9999 run: result 0 is 1180
9999 mem: location 1522 is 1137
9999 mem: storing 1180 in location 1137
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1516 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1516 is 1214
9999 run: address to copy is 1214
9999 run: its type is number
9999 mem: location 1214 is 97
9999 mem: storing 97 in location 1526
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1526 is 97
9999 mem: storing 0 in location 1527
 103 run: break-unless newline?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1519 is 0
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1530
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1530 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1511 is 1031
9999 mem: location 1526 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1704
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1706
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1707
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1708
9999 mem: storing 0 in location 1709
 104 run: break-if color-found?:boolean, 
9999 mem: location 1709 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1708
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1710
9999 mem: storing 0 in location 1711
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1711 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1710
 104 run: break-unless x:address:screen, 
9999 mem: location 1706 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1706 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1706 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1712
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1706 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1706 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1713
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1706 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1706 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1714
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1706 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1706 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1715
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1707 is 97
9999 mem: storing 0 in location 1716
 104 run: break-unless newline?:boolean, 
9999 mem: location 1716 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1712 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1714 is 5
9999 mem: storing 0 in location 1719
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1719 is 0
9999 mem: location 1713 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1719
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1706 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1706 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1720
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1707 is 97
9999 mem: storing 0 in location 1721
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1721 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1720 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1719 is 0
9999 mem: location 1720 is 1036
9999 mem: location 1719 is 0
9999 mem: storing 1037 in location 1723
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1723 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1723 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1724
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1723 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1723 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1725
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1707 is 97
9999 mem: location 1724 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1708 is 7
9999 mem: location 1725 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1714 is 5
9999 mem: storing 4 in location 1726
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1713 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1726 is 4
9999 mem: storing 0 in location 1727
 104 run: break-if at-right?:boolean, 
9999 mem: location 1727 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1713 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1713 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1706 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1516 is 1214
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1735
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1737
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1737 is 1214
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1737 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1737 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1279
9999 mem: storing 1279 in location 1738
 104 run: reply result:address:duplex-list
9999 mem: location 1738 is 1279
9999 run: result 0 is 1279
9999 mem: storing 1279 in location 1516
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1517 is 1180
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1766
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1768
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1768 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1768 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 1214
9999 mem: location 1182 is 0
9999 mem: location 1768 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1214
9999 mem: storing 1214 in location 1769
 104 run: reply result:address:duplex-list
9999 mem: location 1769 is 1214
9999 run: result 0 is 1214
9999 mem: storing 1214 in location 1517
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 0
9999 mem: storing 1 in location 1519
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 1279
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 0
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1523
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1523 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 0
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1524
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1524 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1519 is 1
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1525
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1525 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1516 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1516 is 1279
9999 run: address to copy is 1279
9999 run: its type is number
9999 mem: location 1279 is 98
9999 mem: storing 98 in location 1526
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1526 is 98
9999 mem: storing 0 in location 1527
 103 run: break-unless newline?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 54
schedule: render/new-editor/run1001/editor-initially-wraps-barely-long-lines
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1519 is 1
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1530
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1530 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1511 is 1031
9999 mem: location 1526 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1797
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1799
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1800
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1801
9999 mem: storing 0 in location 1802
 104 run: break-if color-found?:boolean, 
9999 mem: location 1802 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1801
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1803
9999 mem: storing 0 in location 1804
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1804 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1803
 104 run: break-unless x:address:screen, 
9999 mem: location 1799 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1799 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1799 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1805
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1799 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1799 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1806
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1799 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1799 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1807
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1799 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1799 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1808
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1800 is 98
9999 mem: storing 0 in location 1809
 104 run: break-unless newline?:boolean, 
9999 mem: location 1809 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1805 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1807 is 5
9999 mem: storing 0 in location 1812
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1812 is 0
9999 mem: location 1806 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1812
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1799 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1799 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1813
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1800 is 98
9999 mem: storing 0 in location 1814
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1814 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1813 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1812 is 1
9999 mem: location 1813 is 1036
9999 mem: location 1812 is 1
9999 mem: storing 1039 in location 1816
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1816 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1816 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1817
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1816 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1816 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1818
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1800 is 98
9999 mem: location 1817 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1801 is 7
9999 mem: location 1818 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1807 is 5
9999 mem: storing 4 in location 1819
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1806 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1819 is 4
9999 mem: storing 0 in location 1820
 104 run: break-if at-right?:boolean, 
9999 mem: location 1820 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1806 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1806 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1799 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1516 is 1279
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1828
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1830
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1830 is 1279
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1830 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1830 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 1344
9999 mem: storing 1344 in location 1831
 104 run: reply result:address:duplex-list
9999 mem: location 1831 is 1344
9999 run: result 0 is 1344
9999 mem: storing 1344 in location 1516
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1517 is 1214
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1859
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1861
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1861 is 1214
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1861 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1861 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1279
9999 mem: storing 1279 in location 1862
 104 run: reply result:address:duplex-list
9999 mem: location 1862 is 1279
9999 run: result 0 is 1279
9999 mem: storing 1279 in location 1517
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 1
9999 mem: storing 2 in location 1519
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 1344
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 0
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1523
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1523 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 0
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1524
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1524 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1519 is 2
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1525
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1525 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1516 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 1516 is 1344
9999 run: address to copy is 1344
9999 run: its type is number
9999 mem: location 1344 is 99
9999 mem: storing 99 in location 1526
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1526 is 99
9999 mem: storing 0 in location 1527
 103 run: break-unless newline?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1519 is 2
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1530
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1530 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1511 is 1031
9999 mem: location 1526 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1890
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1892
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1893
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1894
9999 mem: storing 0 in location 1895
 104 run: break-if color-found?:boolean, 
9999 mem: location 1895 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1894
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1896
9999 mem: storing 0 in location 1897
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1897 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1896
 104 run: break-unless x:address:screen, 
9999 mem: location 1892 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1892 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1892 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1898
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1892 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1892 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1899
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1892 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1892 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1900
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1892 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1892 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1901
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1893 is 99
9999 mem: storing 0 in location 1902
 104 run: break-unless newline?:boolean, 
9999 mem: location 1902 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1898 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1900 is 5
9999 mem: storing 0 in location 1905
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1905 is 0
9999 mem: location 1899 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1905
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1892 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1892 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1906
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1893 is 99
9999 mem: storing 0 in location 1907
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1907 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1906 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1905 is 2
9999 mem: location 1906 is 1036
9999 mem: location 1905 is 2
9999 mem: storing 1041 in location 1909
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1909 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1909 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1910
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1909 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1909 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1911
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1893 is 99
9999 mem: location 1910 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1894 is 7
9999 mem: location 1911 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1900 is 5
9999 mem: storing 4 in location 1912
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1899 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1912 is 4
9999 mem: storing 0 in location 1913
 104 run: break-if at-right?:boolean, 
9999 mem: location 1913 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1899 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1899 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1892 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1516 is 1344
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1921
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 1923
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1923 is 1344
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1923 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 1923 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 1409
9999 mem: storing 1409 in location 1924
 104 run: reply result:address:duplex-list
9999 mem: location 1924 is 1409
9999 run: result 0 is 1409
9999 mem: storing 1409 in location 1516
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1517 is 1279
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1952
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1954
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1954 is 1279
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1954 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1954 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 1344
9999 mem: storing 1344 in location 1955
 104 run: reply result:address:duplex-list
9999 mem: location 1955 is 1344
9999 run: result 0 is 1344
9999 mem: storing 1344 in location 1517
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 2
9999 mem: storing 3 in location 1519
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 1409
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 0
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1523
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1523 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 0
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1524
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1524 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1519 is 3
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1525
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1525 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1516 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 1516 is 1409
9999 run: address to copy is 1409
9999 run: its type is number
9999 mem: location 1409 is 100
9999 mem: storing 100 in location 1526
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1526 is 100
9999 mem: storing 0 in location 1527
 103 run: break-unless newline?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1519 is 3
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1530
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1530 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1511 is 1031
9999 mem: location 1526 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1983
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1985
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1986
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1987
9999 mem: storing 0 in location 1988
 104 run: break-if color-found?:boolean, 
9999 mem: location 1988 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1987
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1990 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1989
 104 run: break-unless x:address:screen, 
9999 mem: location 1985 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1985 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1985 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1991
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1985 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1985 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1992
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1985 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1985 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1993
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1985 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1985 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1994
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1986 is 100
9999 mem: storing 0 in location 1995
 104 run: break-unless newline?:boolean, 
9999 mem: location 1995 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1991 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1993 is 5
9999 mem: storing 0 in location 1998
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1998 is 0
9999 mem: location 1992 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1998
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1985 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1985 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1999
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1986 is 100
9999 mem: storing 0 in location 2000
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2000 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1999 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1998 is 3
9999 mem: location 1999 is 1036
9999 mem: location 1998 is 3
9999 mem: storing 1043 in location 2002
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2002 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2002 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2003
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2002 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2002 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2004
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1986 is 100
9999 mem: location 2003 is 1043
9999 mem: storing 100 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1987 is 7
9999 mem: location 2004 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1993 is 5
9999 mem: storing 4 in location 2005
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1992 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2005 is 4
9999 mem: storing 0 in location 2006
 104 run: break-if at-right?:boolean, 
9999 mem: location 2006 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1992 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1992 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1985 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1516 is 1409
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2014
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 2016
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2016 is 1409
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2016 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 2016 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 1474
9999 mem: storing 1474 in location 2017
 104 run: reply result:address:duplex-list
9999 mem: location 2017 is 1474
9999 run: result 0 is 1474
9999 mem: storing 1474 in location 1516
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1517 is 1344
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2045
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 2047
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2047 is 1344
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2047 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 2047 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 1409
9999 mem: storing 1409 in location 2048
 104 run: reply result:address:duplex-list
9999 mem: location 2048 is 1409
9999 run: result 0 is 1409
9999 mem: storing 1409 in location 1517
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 3
9999 mem: storing 4 in location 1519
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 1474
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 0
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1523
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1523 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 0
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 1 in location 1524
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1524 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1519 is 4
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1525
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1525 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1516 is 1474
9999 mem: location 1474 is 101
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 1516 is 1474
9999 run: address to copy is 1474
9999 run: its type is number
9999 mem: location 1474 is 101
9999 mem: storing 101 in location 1526
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1526 is 101
9999 mem: storing 0 in location 1527
 103 run: break-unless newline?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1519 is 4
9999 mem: location 1515 is 4
9999 mem: storing 1 in location 1530
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1530 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2076
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2078
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 2079
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2080
9999 mem: storing 1 in location 2081
 104 run: break-if color-found?:boolean, 
9999 mem: location 2081 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2082
9999 mem: storing 0 in location 2083
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2083 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2082
 104 run: break-unless x:address:screen, 
9999 mem: location 2078 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2078 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2078 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2084
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2078 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2078 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2085
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2078 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2078 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2086
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2078 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2078 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2087
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2079 is 8617
9999 mem: storing 0 in location 2088
 104 run: break-unless newline?:boolean, 
9999 mem: location 2088 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2084 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2086 is 5
9999 mem: storing 0 in location 2091
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2091 is 0
9999 mem: location 2085 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2091
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2078 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2078 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2092
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2079 is 8617
9999 mem: storing 0 in location 2093
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2093 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2092 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2091 is 4
9999 mem: location 2092 is 1036
9999 mem: location 2091 is 4
9999 mem: storing 1045 in location 2095
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2095 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2095 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2096
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2095 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2095 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2097
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2079 is 8617
9999 mem: location 2096 is 1045
9999 mem: storing 8617 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2080 is 245
9999 mem: location 2097 is 1046
9999 mem: storing 245 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2086 is 5
9999 mem: storing 4 in location 2098
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2085 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2098 is 4
9999 mem: storing 1 in location 2099
 104 run: break-if at-right?:boolean, 
9999 mem: location 2099 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2078 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 1513 is 0
9999 mem: storing 0 in location 1519
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1518 is 0
9999 mem: storing 1 in location 1518
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1511 is 1031
9999 mem: location 1518 is 1
9999 mem: location 1519 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2107
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2109
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2110
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2111
 104 run: break-unless x:address:screen, 
9999 mem: location 2109 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2109 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2109 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2112
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2110 is 1
9999 mem: location 2112 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2109 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2109 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2113
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2111 is 0
9999 mem: location 2113 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2109 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 1474
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 1
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1523
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1523 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 1
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1524
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1524 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1516 is 1474
9999 mem: location 1474 is 101
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 1516 is 1474
9999 run: address to copy is 1474
9999 run: its type is number
9999 mem: location 1474 is 101
9999 mem: storing 101 in location 1526
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1526 is 101
9999 mem: storing 0 in location 1527
 103 run: break-unless newline?:boolean, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1519 is 0
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1530
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1530 is 0
9999 run: jumping to instruction 63
 103 run: print-character screen:address, c:character
9999 mem: location 1511 is 1031
9999 mem: location 1526 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2138
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2140
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2141
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2142
9999 mem: storing 0 in location 2143
 104 run: break-if color-found?:boolean, 
9999 mem: location 2143 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2142
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2144
9999 mem: storing 0 in location 2145
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2145 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2144
 104 run: break-unless x:address:screen, 
9999 mem: location 2140 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2140 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2140 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2146
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2140 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2140 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2147
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2140 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2140 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2148
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2140 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2140 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2149
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2141 is 101
9999 mem: storing 0 in location 2150
 104 run: break-unless newline?:boolean, 
9999 mem: location 2150 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2146 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2148 is 5
9999 mem: storing 5 in location 2153
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2153 is 5
9999 mem: location 2147 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 2153
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2140 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2140 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2154
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2141 is 101
9999 mem: storing 0 in location 2155
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2155 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2154 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2153 is 5
9999 mem: location 2154 is 1036
9999 mem: location 2153 is 5
9999 mem: storing 1047 in location 2157
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2157 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2157 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2158
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2157 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2157 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2159
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2141 is 101
9999 mem: location 2158 is 1047
9999 mem: storing 101 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2142 is 7
9999 mem: location 2159 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2148 is 5
9999 mem: storing 4 in location 2160
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2147 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2160 is 4
9999 mem: storing 0 in location 2161
 104 run: break-if at-right?:boolean, 
9999 mem: location 2161 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2147 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2147 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2140 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1516 is 1474
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2169
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1474 in location 2171
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2171 is 1474
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2171 is 1474
9999 mem: location 1474 is 101
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 2171 is 1474
9999 run: address to copy is 1475
9999 run: its type is address
9999 mem: location 1475 is 0
9999 mem: storing 0 in location 2172
 104 run: reply result:address:duplex-list
9999 mem: location 2172 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1516
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1517 is 1409
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2200
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 2202
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2202 is 1409
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2202 is 1409
9999 mem: location 1409 is 100
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 2202 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 1474
9999 mem: storing 1474 in location 2203
 104 run: reply result:address:duplex-list
9999 mem: location 2203 is 1474
9999 run: result 0 is 1474
9999 mem: storing 1474 in location 1517
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 0
9999 mem: storing 1 in location 1519
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1516 is 0
9999 run: jumping to instruction 69
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1531
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1518 is 1
9999 mem: location 1531 is 1141
9999 mem: storing 1 in location 1141
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 1
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1524
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1519 is 1
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1532
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1524 is 0
9999 mem: location 1532 is 0
9999 mem: storing 0 in location 1533
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1518 is 1
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1534
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1533 is 0
9999 mem: location 1534 is 0
9999 mem: storing 0 in location 1535
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1535 is 0
9999 run: jumping to instruction 90
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 1
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1529
 103 run: break-if done?:boolean, 
9999 mem: location 1529 is 0
9999 run: jump-if fell through
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1519 is 1
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2231
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2233
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2234
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2235
9999 mem: storing 0 in location 2236
 104 run: break-if color-found?:boolean, 
9999 mem: location 2236 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2235
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2237
9999 mem: storing 0 in location 2238
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2238 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2237
 104 run: break-unless x:address:screen, 
9999 mem: location 2233 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2233 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2233 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2239
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2233 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2233 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2240
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2233 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2233 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2241
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2233 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2233 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2242
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2234 is 32
9999 mem: storing 0 in location 2243
 104 run: break-unless newline?:boolean, 
9999 mem: location 2243 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2239 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2241 is 5
9999 mem: storing 5 in location 2246
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2246 is 5
9999 mem: location 2240 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2246
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2233 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2233 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2247
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2234 is 32
9999 mem: storing 0 in location 2248
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2248 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2247 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2246 is 6
9999 mem: location 2247 is 1036
9999 mem: location 2246 is 6
9999 mem: storing 1049 in location 2250
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2250 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2250 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2251
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2250 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2250 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2252
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2234 is 32
9999 mem: location 2251 is 1049
9999 mem: storing 32 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2235 is 7
9999 mem: location 2252 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2241 is 5
9999 mem: storing 4 in location 2253
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2240 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2253 is 4
9999 mem: storing 0 in location 2254
 104 run: break-if at-right?:boolean, 
9999 mem: location 2254 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2240 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2240 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2233 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 1
9999 mem: storing 2 in location 1519
 103 run: loop 
9999 run: jumping to instruction 95
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1519 is 2
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2262
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2264
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2265
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2266
9999 mem: storing 0 in location 2267
 104 run: break-if color-found?:boolean, 
9999 mem: location 2267 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2266
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2268
9999 mem: storing 0 in location 2269
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2269 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2268
 104 run: break-unless x:address:screen, 
9999 mem: location 2264 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2264 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2264 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2270
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2264 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2264 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2271
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2264 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2264 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2272
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2264 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2264 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2273
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2265 is 32
9999 mem: storing 0 in location 2274
 104 run: break-unless newline?:boolean, 
9999 mem: location 2274 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2270 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2272 is 5
9999 mem: storing 5 in location 2277
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2277 is 5
9999 mem: location 2271 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2277
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2264 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2264 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2278
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2265 is 32
9999 mem: storing 0 in location 2279
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2279 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2278 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2277 is 7
9999 mem: location 2278 is 1036
9999 mem: location 2277 is 7
9999 mem: storing 1051 in location 2281
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2281 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2281 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2282
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2281 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2281 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2283
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2265 is 32
9999 mem: location 2282 is 1051
9999 mem: storing 32 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2266 is 7
9999 mem: location 2283 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2272 is 5
9999 mem: storing 4 in location 2284
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2271 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2284 is 4
9999 mem: storing 0 in location 2285
 104 run: break-if at-right?:boolean, 
9999 mem: location 2285 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2271 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2271 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2264 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 2
9999 mem: storing 3 in location 1519
 103 run: loop 
9999 run: jumping to instruction 95
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1519 is 3
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2293
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2295
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2296
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2297
9999 mem: storing 0 in location 2298
 104 run: break-if color-found?:boolean, 
9999 mem: location 2298 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2297
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2299
9999 mem: storing 0 in location 2300
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2300 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2299
 104 run: break-unless x:address:screen, 
9999 mem: location 2295 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2295 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2301
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2295 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2302
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2295 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2303
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2295 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2304
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2296 is 32
9999 mem: storing 0 in location 2305
 104 run: break-unless newline?:boolean, 
9999 mem: location 2305 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2301 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2303 is 5
9999 mem: storing 5 in location 2308
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2308 is 5
9999 mem: location 2302 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2308
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2295 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2295 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2309
schedule: print-character/render/new-editor/run1001/editor-initially-wraps-barely-long-lines
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2296 is 32
9999 mem: storing 0 in location 2310
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2310 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2309 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2308 is 8
9999 mem: location 2309 is 1036
9999 mem: location 2308 is 8
9999 mem: storing 1053 in location 2312
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2312 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2312 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2313
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2312 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2312 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2314
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2296 is 32
9999 mem: location 2313 is 1053
9999 mem: storing 32 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2297 is 7
9999 mem: location 2314 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2303 is 5
9999 mem: storing 4 in location 2315
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2302 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2315 is 4
9999 mem: storing 0 in location 2316
 104 run: break-if at-right?:boolean, 
9999 mem: location 2316 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2302 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2302 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2295 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 3
9999 mem: storing 4 in location 1519
 103 run: loop 
9999 run: jumping to instruction 95
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1519 is 4
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2324
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2326
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2327
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2328
9999 mem: storing 0 in location 2329
 104 run: break-if color-found?:boolean, 
9999 mem: location 2329 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2328
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2330
9999 mem: storing 0 in location 2331
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2331 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2330
 104 run: break-unless x:address:screen, 
9999 mem: location 2326 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2326 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2332
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2326 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2333
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2326 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2334
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2326 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2335
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2327 is 32
9999 mem: storing 0 in location 2336
 104 run: break-unless newline?:boolean, 
9999 mem: location 2336 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2332 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2334 is 5
9999 mem: storing 5 in location 2339
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2339 is 5
9999 mem: location 2333 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2339
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2326 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2326 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2340
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2327 is 32
9999 mem: storing 0 in location 2341
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2341 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2340 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2339 is 9
9999 mem: location 2340 is 1036
9999 mem: location 2339 is 9
9999 mem: storing 1055 in location 2343
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2343 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2343 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2344
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2343 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2343 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2345
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2327 is 32
9999 mem: location 2344 is 1055
9999 mem: storing 32 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2328 is 7
9999 mem: location 2345 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2334 is 5
9999 mem: storing 4 in location 2346
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2333 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2346 is 4
9999 mem: storing 1 in location 2347
 104 run: break-if at-right?:boolean, 
9999 mem: location 2347 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2326 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 4
9999 mem: storing 5 in location 1519
 103 run: loop 
9999 run: jumping to instruction 95
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1519 is 5
9999 mem: location 1515 is 4
9999 mem: storing 1 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 1
9999 run: jumping to instruction 100
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1518 is 1
9999 mem: storing 2 in location 1518
 103 run: column:number <- copy left:number
9999 mem: location 1513 is 0
9999 mem: storing 0 in location 1519
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1518 is 2
9999 mem: location 1514 is 3
9999 mem: storing 0 in location 1529
 103 run: break-if done?:boolean, 
9999 mem: location 1529 is 0
9999 run: jump-if fell through
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1511 is 1031
9999 mem: location 1518 is 2
9999 mem: location 1519 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2355
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2357
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2358
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2359
 104 run: break-unless x:address:screen, 
9999 mem: location 2357 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2357 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2357 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2360
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2358 is 2
9999 mem: location 2360 is 1033
9999 mem: storing 2 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2357 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2357 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2361
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2359 is 0
9999 mem: location 2361 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2357 is 1031
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1519 is 0
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2386
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2388
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2389
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2390
9999 mem: storing 0 in location 2391
 104 run: break-if color-found?:boolean, 
9999 mem: location 2391 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2390
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2392
9999 mem: storing 0 in location 2393
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2393 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2392
 104 run: break-unless x:address:screen, 
9999 mem: location 2388 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2388 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2388 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2394
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2388 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2388 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2395
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2388 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2388 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2396
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2388 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2388 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2397
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2389 is 32
9999 mem: storing 0 in location 2398
 104 run: break-unless newline?:boolean, 
9999 mem: location 2398 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2394 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2396 is 5
9999 mem: storing 10 in location 2401
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2401 is 10
9999 mem: location 2395 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2401
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2388 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2388 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2402
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2389 is 32
9999 mem: storing 0 in location 2403
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2403 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2402 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2401 is 10
9999 mem: location 2402 is 1036
9999 mem: location 2401 is 10
9999 mem: storing 1057 in location 2405
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2405 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2405 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2406
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2405 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2405 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2407
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2389 is 32
9999 mem: location 2406 is 1057
9999 mem: storing 32 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2390 is 7
9999 mem: location 2407 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2396 is 5
9999 mem: storing 4 in location 2408
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2395 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2408 is 4
9999 mem: storing 0 in location 2409
 104 run: break-if at-right?:boolean, 
9999 mem: location 2409 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2395 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2395 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2388 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 0
9999 mem: storing 1 in location 1519
 103 run: loop 
9999 run: jumping to instruction 107
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1519 is 1
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2417
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2419
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2420
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2421
9999 mem: storing 0 in location 2422
 104 run: break-if color-found?:boolean, 
9999 mem: location 2422 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2421
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2423
9999 mem: storing 0 in location 2424
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2424 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2423
 104 run: break-unless x:address:screen, 
9999 mem: location 2419 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2419 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2425
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2419 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2426
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2419 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2427
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2419 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2428
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2420 is 32
9999 mem: storing 0 in location 2429
 104 run: break-unless newline?:boolean, 
9999 mem: location 2429 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2425 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2427 is 5
9999 mem: storing 10 in location 2432
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2432 is 10
9999 mem: location 2426 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2432
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2419 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2419 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2433
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2420 is 32
9999 mem: storing 0 in location 2434
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2434 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2433 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2432 is 11
9999 mem: location 2433 is 1036
9999 mem: location 2432 is 11
9999 mem: storing 1059 in location 2436
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2436 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2436 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2437
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2436 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2436 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2438
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2420 is 32
9999 mem: location 2437 is 1059
9999 mem: storing 32 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2421 is 7
9999 mem: location 2438 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2427 is 5
9999 mem: storing 4 in location 2439
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2426 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2439 is 4
9999 mem: storing 0 in location 2440
 104 run: break-if at-right?:boolean, 
9999 mem: location 2440 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2426 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2426 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2419 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 1
9999 mem: storing 2 in location 1519
 103 run: loop 
9999 run: jumping to instruction 107
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1519 is 2
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2448
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2450
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2451
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2452
9999 mem: storing 0 in location 2453
 104 run: break-if color-found?:boolean, 
9999 mem: location 2453 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2452
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2454
9999 mem: storing 0 in location 2455
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2455 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2454
 104 run: break-unless x:address:screen, 
9999 mem: location 2450 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2450 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2450 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2456
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2450 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2450 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2457
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2450 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2450 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2458
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2450 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2450 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2459
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2451 is 32
9999 mem: storing 0 in location 2460
 104 run: break-unless newline?:boolean, 
9999 mem: location 2460 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2456 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2458 is 5
9999 mem: storing 10 in location 2463
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2463 is 10
9999 mem: location 2457 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2463
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2450 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2450 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2464
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2451 is 32
9999 mem: storing 0 in location 2465
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2465 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2464 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2463 is 12
9999 mem: location 2464 is 1036
9999 mem: location 2463 is 12
9999 mem: storing 1061 in location 2467
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2467 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2467 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2468
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2467 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2467 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2469
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2451 is 32
9999 mem: location 2468 is 1061
9999 mem: storing 32 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2452 is 7
9999 mem: location 2469 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2458 is 5
9999 mem: storing 4 in location 2470
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2457 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2470 is 4
9999 mem: storing 0 in location 2471
 104 run: break-if at-right?:boolean, 
9999 mem: location 2471 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2457 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2457 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2450 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 2
9999 mem: storing 3 in location 1519
 103 run: loop 
9999 run: jumping to instruction 107
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1519 is 3
9999 mem: location 1515 is 4
9999 mem: storing 0 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2479
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2481
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2482
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2483
9999 mem: storing 0 in location 2484
 104 run: break-if color-found?:boolean, 
9999 mem: location 2484 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2483
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2485
9999 mem: storing 0 in location 2486
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2486 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2485
 104 run: break-unless x:address:screen, 
9999 mem: location 2481 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2481 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2481 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2487
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2481 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2481 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2488
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2481 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2481 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2489
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2481 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2481 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2490
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2482 is 32
9999 mem: storing 0 in location 2491
 104 run: break-unless newline?:boolean, 
9999 mem: location 2491 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2487 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2489 is 5
9999 mem: storing 10 in location 2494
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2494 is 10
9999 mem: location 2488 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2494
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2481 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2481 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2495
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2482 is 32
9999 mem: storing 0 in location 2496
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2496 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2495 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 101
9999 mem: location 1048 is 7
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2494 is 13
9999 mem: location 2495 is 1036
9999 mem: location 2494 is 13
9999 mem: storing 1063 in location 2498
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2498 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2498 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2499
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2498 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2498 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2500
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2482 is 32
9999 mem: location 2499 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2483 is 7
9999 mem: location 2500 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2489 is 5
9999 mem: storing 4 in location 2501
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2488 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2501 is 4
9999 mem: storing 0 in location 2502
 104 run: break-if at-right?:boolean, 
9999 mem: location 2502 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2488 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2488 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2481 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1519 is 3
9999 mem: storing 4 in location 1519
 103 run: loop 
9999 run: jumping to instruction 107
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1519 is 4
9999 mem: location 1515 is 4
9999 mem: storing 1 in location 1538
 103 run: break-if line-done?:boolean, 
9999 mem: location 1538 is 1
9999 run: jumping to instruction 112
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1510 is 1135
9999 mem: location 1135 is 1180
9999 mem: location 1136 is 1180
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1031
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1
9999 mem: location 1142 is 4
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1510 is 1135
9999 run: address to copy is 1146
9999 run: its type is boolean
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1539
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1539 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: location 1515 is 4
9999 mem: storing 1 in location 1540
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1540 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
9999 mem: location 1513 is 0
9999 mem: storing 1 in location 1541
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1541 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1511 is 1031
9999 mem: location 1520 is 1143
9999 mem: location 1143 is 0
9999 mem: location 1521 is 1144
9999 mem: location 1144 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2510
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2512
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2513
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2514
 104 run: break-unless x:address:screen, 
9999 mem: location 2512 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2512 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2512 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2515
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2513 is 0
9999 mem: location 2515 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2512 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2512 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2516
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2514 is 0
9999 mem: location 2516 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2512 is 1031
 103 run: show-screen screen:address
9999 mem: location 1511 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2541
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2543
 104 run: break-unless x:address:screen, 
9999 mem: location 2543 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2543 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1510 is 1135
9999 run: result 0 is 1135
9999 mem: storing 1135 in location 1111
 102 run: reply result:address:editor-data
9999 mem: location 1111 is 1135
 100 run: screen-should-contain [
    .abcdâ†©.
    .e    .
    .     .
  ]
 100 run: screen-should-contain-in-color 245:literal/grey, [
    .    â†©.
    .     .
    .     .
  ]
