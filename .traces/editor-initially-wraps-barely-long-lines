parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abcde]\n    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .abcdâ†©.\n    .e    .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain-in-color
parse:   ingredient: {name: "245", properties: ["245": "literal", "grey": ]}
parse:   ingredient: {name: "\n    .     .\n    .    â†©.\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-wraps-barely-long-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: screen-should-contain-in-color ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-wraps-barely-long-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 5 in location 1009
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1065
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1067
 103 run: break-unless x:address:screen, 
9999 mem: location 1067 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1068
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1068 is 1014
9999 mem: storing 25 in location 1069
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1070
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 0
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 0
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 0
9999 mem: storing 1015 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1072 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1072 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1016
9999 mem: storing 7 in location 1016
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 0
9999 mem: storing 1 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 1
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 1
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 1
9999 mem: storing 1017 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1072 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1072 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1018
9999 mem: storing 7 in location 1018
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 1
9999 mem: storing 2 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 2
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 2
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 2
9999 mem: storing 1019 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1072 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1072 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1020
9999 mem: storing 7 in location 1020
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 2
9999 mem: storing 3 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 3
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 3
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 3
9999 mem: storing 1021 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1072 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1072 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1022
9999 mem: storing 7 in location 1022
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 3
9999 mem: storing 4 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 4
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 4
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 4
9999 mem: storing 1023 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1072 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1072 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1024
9999 mem: storing 7 in location 1024
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 4
9999 mem: storing 5 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 5
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 5
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 5
9999 mem: storing 1025 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1072 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1072 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1026
9999 mem: storing 7 in location 1026
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 5
9999 mem: storing 6 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 6
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 6
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 6
9999 mem: storing 1027 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1072 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1072 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1028
9999 mem: storing 7 in location 1028
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 6
9999 mem: storing 7 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 7
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 7
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 7
9999 mem: storing 1029 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1072 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1072 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1030
9999 mem: storing 7 in location 1030
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 7
9999 mem: storing 8 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 8
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 8
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 8
9999 mem: storing 1031 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1072 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1072 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1032
9999 mem: storing 7 in location 1032
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 8
9999 mem: storing 9 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 9
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 9
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 9
9999 mem: storing 1033 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1072 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1072 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1034
9999 mem: storing 7 in location 1034
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 9
9999 mem: storing 10 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 10
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 10
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 10
9999 mem: storing 1035 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1072 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1072 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1036
9999 mem: storing 7 in location 1036
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 10
9999 mem: storing 11 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 11
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 11
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 11
9999 mem: storing 1037 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1072 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1072 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 11
9999 mem: storing 12 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 12
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 12
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 12
9999 mem: storing 1039 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1072 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1072 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 12
9999 mem: storing 13 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 13
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 13
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 13
9999 mem: storing 1041 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1072 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1072 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 13
9999 mem: storing 14 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 14
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 14
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 14
9999 mem: storing 1043 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1072 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1072 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 14
9999 mem: storing 15 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 15
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 15
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 15
9999 mem: storing 1045 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1072 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1072 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 15
9999 mem: storing 16 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 16
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 16
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 16
9999 mem: storing 1047 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1072 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1072 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 16
9999 mem: storing 17 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 17
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 17
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 17
9999 mem: storing 1049 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1072 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1072 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 17
9999 mem: storing 18 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 18
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 18
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 18
9999 mem: storing 1051 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1072 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1072 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 18
9999 mem: storing 19 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 19
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 19
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 19
9999 mem: storing 1053 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1072 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1072 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 19
9999 mem: storing 20 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 20
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 20
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 20
9999 mem: storing 1055 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1072 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1072 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 20
9999 mem: storing 21 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 21
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 21
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 21
9999 mem: storing 1057 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1072 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1072 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 21
9999 mem: storing 22 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 22
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 22
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 22
9999 mem: storing 1059 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1072 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1072 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 22
9999 mem: storing 23 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 23
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 23
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 23
9999 mem: storing 1061 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1072 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1072 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 23
9999 mem: storing 24 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 24
9999 mem: location 1069 is 25
9999 mem: storing 0 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1068 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1070 is 24
9999 mem: location 1068 is 1014
9999 mem: location 1070 is 24
9999 mem: storing 1063 in location 1072
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1072 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1072 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1073
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1073 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1072 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1072 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1074
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1074 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1070 is 24
9999 mem: storing 25 in location 1070
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1070 is 25
9999 mem: location 1069 is 25
9999 mem: storing 1 in location 1071
 103 run: break-if done?:boolean, 
9999 mem: location 1071 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1075
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1075 is 1011
9999 mem: storing 0 in location 1011
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1067 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1067 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1075
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1075 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1067 is 1009
 102 run: reply result:address:screen
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: run [
    s:address:array:character <- new [abcde]
    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abcde", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abcde]
9999 mem: storing 1076 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1076
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1082
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1076 in location 1084
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1085
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1086
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1087
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1087 is 5
9999 mem: storing 4 in location 1087
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1097
9999 mem: storing 1097 in location 1088
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1099
9999 mem: storing 1099 in location 1089
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1086 is 0
9999 mem: location 1089 is 1099
9999 mem: storing 0 in location 1099
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1100
9999 mem: storing 1100 in location 1089
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1087 is 4
9999 mem: location 1089 is 1100
9999 mem: storing 4 in location 1100
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1089
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1089 is 1101
9999 mem: storing 1 in location 1101
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1089
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1086 is 0
9999 mem: location 1089 is 1102
9999 mem: storing 0 in location 1102
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1090
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1103
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1105
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1106
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1111
9999 mem: storing 1111 in location 1107
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1107 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1107 is 1111
9999 run: address to copy is 1111
9999 mem: storing 1111 in location 1108
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1105 is 167
9999 mem: location 1108 is 1111
9999 mem: storing 167 in location 1111
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1107 is 1111
9999 mem: location 1111 is 167
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1107 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1109
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1106 is 0
9999 mem: location 1109 is 1112
9999 mem: storing 0 in location 1112
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1107 is 1111
9999 run: result 0 is 1111
9999 mem: location 1090 is 1097
9999 mem: storing 1111 in location 1097
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1091
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1090 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1091 is 1098
9999 mem: storing 1111 in location 1098
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1084 is 1076
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1084 is 1076
9999 mem: location 1076 is 5
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1080 is 100
9999 mem: location 1081 is 101
9999 mem: location 1084 is 1076
9999 mem: storing 5 in location 1092
 102 run: jump-if len:number, 1:offset
9999 mem: location 1092 is 5
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1093
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1090 is 1097
9999 mem: location 1097 is 1111
9999 mem: storing 1111 in location 1094
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1093 is 0
9999 mem: location 1092 is 5
9999 mem: storing 0 in location 1095
 102 run: break-if done?:boolean, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1084 is 1076
9999 mem: location 1076 is 5
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1080 is 100
9999 mem: location 1081 is 101
9999 mem: location 1093 is 0
9999 mem: location 1084 is 1076
9999 mem: location 1093 is 0
9999 run: address to copy is 1077
9999 run: its type is character
9999 mem: location 1077 is 97
9999 mem: storing 97 in location 1096
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1096 is 97
9999 mem: location 1094 is 1111
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1114
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1116
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1117
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1122
9999 mem: storing 1122 in location 1118
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1118 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1118 is 1122
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1119
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1116 is 97
9999 mem: location 1119 is 1122
9999 mem: storing 97 in location 1122
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1111
9999 mem: location 1111 is 167
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1117 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 0
9999 mem: storing 0 in location 1120
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1117 is 1111
9999 mem: location 1111 is 167
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1117 is 1111
9999 run: address to copy is 1112
9999 mem: storing 1112 in location 1121
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1118 is 1122
9999 mem: location 1121 is 1112
9999 mem: storing 1122 in location 1112
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1118 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 0
9999 mem: location 1124 is 0
9999 mem: location 1118 is 1122
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1121
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1117 is 1111
9999 mem: location 1121 is 1124
9999 mem: storing 1111 in location 1124
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1118 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1111
9999 mem: location 1118 is 1122
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1121
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1120 is 0
9999 mem: location 1121 is 1123
9999 mem: storing 0 in location 1123
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1120 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1118 is 1122
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1094 is 1111
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1125
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1127
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1127 is 1111
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1127 is 1111
9999 mem: location 1111 is 167
9999 mem: location 1112 is 1122
9999 mem: location 1113 is 0
9999 mem: location 1127 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1122
9999 mem: storing 1122 in location 1128
 103 run: reply result:address:duplex-list
9999 mem: location 1128 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1094
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1093 is 0
9999 mem: storing 1 in location 1093
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1093 is 1
9999 mem: location 1092 is 5
9999 mem: storing 0 in location 1095
 102 run: break-if done?:boolean, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1084 is 1076
9999 mem: location 1076 is 5
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1080 is 100
9999 mem: location 1081 is 101
9999 mem: location 1093 is 1
9999 mem: location 1084 is 1076
9999 mem: location 1093 is 1
9999 run: address to copy is 1078
9999 run: its type is character
9999 mem: location 1078 is 98
9999 mem: storing 98 in location 1096
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1096 is 98
9999 mem: location 1094 is 1122
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1129
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1131
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1132
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1133
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1133 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1133 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1134
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1131 is 98
9999 mem: location 1134 is 1137
9999 mem: storing 98 in location 1137
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1132 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1111
9999 mem: location 1132 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 0
9999 mem: storing 0 in location 1135
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1132 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1111
9999 mem: location 1132 is 1122
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1136
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1133 is 1137
9999 mem: location 1136 is 1123
9999 mem: storing 1137 in location 1123
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1133 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1133 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1136
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1132 is 1122
9999 mem: location 1136 is 1139
9999 mem: storing 1122 in location 1139
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1133 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 0
9999 mem: location 1139 is 1122
9999 mem: location 1133 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1136
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1135 is 0
9999 mem: location 1136 is 1138
9999 mem: storing 0 in location 1138
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1135 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1133 is 1137
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1094 is 1122
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1140
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1142
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1142 is 1122
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1142 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 1137
9999 mem: location 1124 is 1111
9999 mem: location 1142 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1137
9999 mem: storing 1137 in location 1143
 103 run: reply result:address:duplex-list
9999 mem: location 1143 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1094
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1093 is 1
9999 mem: storing 2 in location 1093
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1093 is 2
9999 mem: location 1092 is 5
9999 mem: storing 0 in location 1095
 102 run: break-if done?:boolean, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1084 is 1076
9999 mem: location 1076 is 5
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1080 is 100
9999 mem: location 1081 is 101
9999 mem: location 1093 is 2
9999 mem: location 1084 is 1076
9999 mem: location 1093 is 2
9999 run: address to copy is 1079
9999 run: its type is character
9999 mem: location 1079 is 99
9999 mem: storing 99 in location 1096
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1096 is 99
9999 mem: location 1094 is 1137
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1144
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1146
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1137 in location 1147
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1152
9999 mem: storing 1152 in location 1148
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1148 is 1152
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1148 is 1152
9999 run: address to copy is 1152
9999 mem: storing 1152 in location 1149
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1146 is 99
9999 mem: location 1149 is 1152
9999 mem: storing 99 in location 1152
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1147 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 0
9999 mem: location 1139 is 1122
9999 mem: location 1147 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 0
9999 mem: storing 0 in location 1150
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1147 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 0
9999 mem: location 1139 is 1122
9999 mem: location 1147 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1151
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1148 is 1152
9999 mem: location 1151 is 1138
9999 mem: storing 1152 in location 1138
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1148 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1148 is 1152
9999 run: address to copy is 1154
9999 mem: storing 1154 in location 1151
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1147 is 1137
9999 mem: location 1151 is 1154
9999 mem: storing 1137 in location 1154
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1148 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1137
9999 mem: location 1148 is 1152
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 1151
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1153
9999 mem: storing 0 in location 1153
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1150 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1148 is 1152
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1094 is 1137
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1155
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1137 in location 1157
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1157 is 1137
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1157 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 1152
9999 mem: location 1139 is 1122
9999 mem: location 1157 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1152
9999 mem: storing 1152 in location 1158
 103 run: reply result:address:duplex-list
9999 mem: location 1158 is 1152
9999 run: result 0 is 1152
9999 mem: storing 1152 in location 1094
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1093 is 2
9999 mem: storing 3 in location 1093
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1093 is 3
9999 mem: location 1092 is 5
9999 mem: storing 0 in location 1095
 102 run: break-if done?:boolean, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1084 is 1076
9999 mem: location 1076 is 5
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1080 is 100
9999 mem: location 1081 is 101
9999 mem: location 1093 is 3
9999 mem: location 1084 is 1076
9999 mem: location 1093 is 3
9999 run: address to copy is 1080
9999 run: its type is character
9999 mem: location 1080 is 100
9999 mem: storing 100 in location 1096
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1096 is 100
9999 mem: location 1094 is 1152
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1159
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1161
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1162
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1167
9999 mem: storing 1167 in location 1163
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1163 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1163 is 1167
9999 run: address to copy is 1167
9999 mem: storing 1167 in location 1164
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1161 is 100
9999 mem: location 1164 is 1167
9999 mem: storing 100 in location 1167
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1162 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1137
9999 mem: location 1162 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1165
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1162 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1137
9999 mem: location 1162 is 1152
9999 run: address to copy is 1153
9999 mem: storing 1153 in location 1166
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1163 is 1167
9999 mem: location 1166 is 1153
9999 mem: storing 1167 in location 1153
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1163 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1163 is 1167
9999 run: address to copy is 1169
9999 mem: storing 1169 in location 1166
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1162 is 1152
9999 mem: location 1166 is 1169
9999 mem: storing 1152 in location 1169
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1163 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1152
9999 mem: location 1163 is 1167
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 1166
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1168
9999 mem: storing 0 in location 1168
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1165 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1163 is 1167
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1094 is 1152
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1170
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1172
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1172 is 1152
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1172 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1167
9999 mem: location 1154 is 1137
9999 mem: location 1172 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1167
9999 mem: storing 1167 in location 1173
 103 run: reply result:address:duplex-list
9999 mem: location 1173 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1094
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1093 is 3
9999 mem: storing 4 in location 1093
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1093 is 4
9999 mem: location 1092 is 5
9999 mem: storing 0 in location 1095
 102 run: break-if done?:boolean, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1084 is 1076
9999 mem: location 1076 is 5
9999 mem: location 1077 is 97
9999 mem: location 1078 is 98
9999 mem: location 1079 is 99
9999 mem: location 1080 is 100
9999 mem: location 1081 is 101
9999 mem: location 1093 is 4
9999 mem: location 1084 is 1076
9999 mem: location 1093 is 4
9999 run: address to copy is 1081
9999 run: its type is character
9999 mem: location 1081 is 101
9999 mem: storing 101 in location 1096
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1096 is 101
9999 mem: location 1094 is 1167
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1174
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1176
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1177
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1182
9999 mem: storing 1182 in location 1178
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1178 is 1182
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1178 is 1182
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1179
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1176 is 101
9999 mem: location 1179 is 1182
9999 mem: storing 101 in location 1182
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1177 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1152
9999 mem: location 1177 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1180
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1177 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1152
9999 mem: location 1177 is 1167
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 1181
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1178 is 1182
9999 mem: location 1181 is 1168
9999 mem: storing 1182 in location 1168
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1178 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1178 is 1182
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1181
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1177 is 1167
9999 mem: location 1181 is 1184
9999 mem: storing 1167 in location 1184
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1178 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1167
9999 mem: location 1178 is 1182
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1181
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1183
9999 mem: storing 0 in location 1183
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1178 is 1182
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1094 is 1167
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1185
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1187
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1187 is 1167
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1187 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 1182
9999 mem: location 1169 is 1152
9999 mem: location 1187 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1182
9999 mem: storing 1182 in location 1188
 103 run: reply result:address:duplex-list
9999 mem: location 1188 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1094
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1093 is 4
9999 mem: storing 5 in location 1093
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1093 is 5
9999 mem: location 1092 is 5
9999 mem: storing 1 in location 1095
 102 run: break-if done?:boolean, 
9999 mem: location 1095 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1088 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1088 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1091
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1090 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1091 is 1098
9999 mem: storing 1111 in location 1098
 102 run: _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1085 is 1009
9999 mem: location 1088 is 1097
 103 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1189
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1191
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1097 in location 1192
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1192 is 1097
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1192 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1192 is 1097
9999 run: address to copy is 1099
9999 run: its type is number
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1193
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1191 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1216
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1218
 104 run: break-unless x:address:screen, 
9999 mem: location 1218 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1218 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1219
 104 run: reply height:number
9999 mem: location 1219 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1194
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1192 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1192 is 1097
9999 run: address to copy is 1100
9999 run: its type is number
9999 mem: location 1100 is 4
9999 mem: storing 4 in location 1195
 103 run: hide-screen screen:address
9999 mem: location 1191 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: new alloc: 1220
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1222
 104 run: break-unless x:address:screen, 
9999 mem: location 1222 is 1009
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1222 is 1009
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1192 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1192 is 1097
9999 run: address to copy is 1097
9999 run: its type is address
9999 mem: location 1097 is 1111
9999 mem: storing 1111 in location 1196
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1196 is 1111
9999 mem: storing 1111 in location 1197
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1196 is 1111
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1223
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1225
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1225 is 1111
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1225 is 1111
9999 mem: location 1111 is 167
9999 mem: location 1112 is 1122
9999 mem: location 1113 is 0
9999 mem: location 1225 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1122
9999 mem: storing 1122 in location 1226
 104 run: reply result:address:duplex-list
9999 mem: location 1226 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1196
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1198
 103 run: column:number <- copy left:number
9999 mem: location 1193 is 0
9999 mem: storing 0 in location 1199
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1192 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1192 is 1097
9999 run: address to copy is 1101
9999 mem: storing 1101 in location 1200
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1192 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1192 is 1097
9999 run: address to copy is 1102
9999 mem: storing 1102 in location 1201
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1192 is 1097
9999 mem: location 1097 is 1111
9999 mem: location 1098 is 1111
9999 mem: location 1099 is 0
9999 mem: location 1100 is 4
9999 mem: location 1101 is 1
9999 mem: location 1102 is 0
9999 mem: location 1192 is 1097
9999 run: address to copy is 1098
9999 mem: storing 1098 in location 1202
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1191 is 1009
9999 mem: location 1198 is 1
9999 mem: location 1199 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1227
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1230
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1231
 104 run: break-unless x:address:screen, 
9999 mem: location 1229 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1232
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1230 is 1
9999 mem: location 1232 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1233
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1231 is 0
9999 mem: location 1233 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1229 is 1009
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 1122
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1198 is 1
9999 mem: location 1194 is 5
9999 mem: storing 0 in location 1203
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1204
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1204 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1199 is 0
9999 mem: location 1201 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1205
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1205 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1196 is 1122
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1234
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1236
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1236 is 1122
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1236 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 1137
9999 mem: location 1124 is 1111
9999 mem: location 1236 is 1122
9999 run: address to copy is 1124
9999 run: its type is address
9999 mem: location 1124 is 1111
9999 mem: storing 1111 in location 1237
 104 run: reply result:address:duplex-list
9999 mem: location 1237 is 1111
9999 run: result 0 is 1111
9999 mem: location 1202 is 1098
9999 mem: storing 1111 in location 1098
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 1137
9999 mem: location 1124 is 1111
9999 mem: location 1196 is 1122
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 97
9999 mem: storing 97 in location 1206
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1206 is 97
9999 mem: storing 0 in location 1207
schedule: render/new-editor/run1001/editor-initially-wraps-barely-long-lines
 103 run: break-unless newline?:boolean, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1199 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1209
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1191 is 1009
9999 mem: location 1206 is 97
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1238
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1240
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1241
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 104 run: break-if color-found?:boolean, 
9999 mem: location 1243 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1242
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1245 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1244
 104 run: break-unless x:address:screen, 
9999 mem: location 1240 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1246
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1247
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1248
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1249
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1241 is 97
9999 mem: storing 0 in location 1250
 104 run: break-unless newline?:boolean, 
9999 mem: location 1250 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1246 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1248 is 5
9999 mem: storing 5 in location 1253
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1253 is 5
9999 mem: location 1247 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1253
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1240 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1254
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1241 is 97
9999 mem: storing 0 in location 1255
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1254 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1253 is 5
9999 mem: location 1254 is 1014
9999 mem: location 1253 is 5
9999 mem: storing 1025 in location 1257
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1257 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1257 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1258
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1257 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1257 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1259
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1241 is 97
9999 mem: location 1258 is 1025
9999 mem: storing 97 in location 1025
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1242 is 7
9999 mem: location 1259 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1248 is 5
9999 mem: storing 4 in location 1260
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1247 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1260 is 4
9999 mem: storing 0 in location 1261
 104 run: break-if at-right?:boolean, 
9999 mem: location 1261 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1247 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1247 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1240 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1196 is 1122
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1262
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1264
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1264 is 1122
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1264 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 1137
9999 mem: location 1124 is 1111
9999 mem: location 1264 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1137
9999 mem: storing 1137 in location 1265
 104 run: reply result:address:duplex-list
9999 mem: location 1265 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1196
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1197 is 1111
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1266
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1111 in location 1268
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1268 is 1111
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1268 is 1111
9999 mem: location 1111 is 167
9999 mem: location 1112 is 1122
9999 mem: location 1113 is 0
9999 mem: location 1268 is 1111
9999 run: address to copy is 1112
9999 run: its type is address
9999 mem: location 1112 is 1122
9999 mem: storing 1122 in location 1269
 104 run: reply result:address:duplex-list
9999 mem: location 1269 is 1122
9999 run: result 0 is 1122
9999 mem: storing 1122 in location 1197
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1199 is 0
9999 mem: storing 1 in location 1199
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 1137
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1198 is 1
9999 mem: location 1194 is 5
9999 mem: storing 0 in location 1203
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1204
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1204 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1205
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1196 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 1152
9999 mem: location 1139 is 1122
9999 mem: location 1196 is 1137
9999 run: address to copy is 1137
9999 run: its type is number
9999 mem: location 1137 is 98
9999 mem: storing 98 in location 1206
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1206 is 98
9999 mem: storing 0 in location 1207
 103 run: break-unless newline?:boolean, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1199 is 1
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1209
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1191 is 1009
9999 mem: location 1206 is 98
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1270
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1272
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1273
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 104 run: break-if color-found?:boolean, 
9999 mem: location 1275 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1274
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1276
9999 mem: storing 0 in location 1277
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1277 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1276
 104 run: break-unless x:address:screen, 
9999 mem: location 1272 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1278
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1279
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1280
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1281
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1273 is 98
9999 mem: storing 0 in location 1282
 104 run: break-unless newline?:boolean, 
9999 mem: location 1282 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1278 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1280 is 5
9999 mem: storing 5 in location 1285
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1285 is 5
9999 mem: location 1279 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1285
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1272 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1272 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1286
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1273 is 98
9999 mem: storing 0 in location 1287
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1286 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1285 is 6
9999 mem: location 1286 is 1014
9999 mem: location 1285 is 6
9999 mem: storing 1027 in location 1289
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1289 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1289 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1290
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1289 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1289 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1291
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1273 is 98
9999 mem: location 1290 is 1027
9999 mem: storing 98 in location 1027
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1274 is 7
9999 mem: location 1291 is 1028
9999 mem: storing 7 in location 1028
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1280 is 5
9999 mem: storing 4 in location 1292
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1279 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1292 is 4
9999 mem: storing 0 in location 1293
 104 run: break-if at-right?:boolean, 
9999 mem: location 1293 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1279 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1279 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1272 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1196 is 1137
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1294
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1137 in location 1296
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1296 is 1137
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1296 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 1152
9999 mem: location 1139 is 1122
9999 mem: location 1296 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1152
9999 mem: storing 1152 in location 1297
 104 run: reply result:address:duplex-list
9999 mem: location 1297 is 1152
9999 run: result 0 is 1152
9999 mem: storing 1152 in location 1196
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1197 is 1122
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1298
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1122 in location 1300
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1122
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1122
9999 mem: location 1122 is 97
9999 mem: location 1123 is 1137
9999 mem: location 1124 is 1111
9999 mem: location 1300 is 1122
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1137
9999 mem: storing 1137 in location 1301
 104 run: reply result:address:duplex-list
9999 mem: location 1301 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1197
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1199 is 1
9999 mem: storing 2 in location 1199
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 1152
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1198 is 1
9999 mem: location 1194 is 5
9999 mem: storing 0 in location 1203
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1204
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1204 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1199 is 2
9999 mem: location 1201 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1205
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1196 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1167
9999 mem: location 1154 is 1137
9999 mem: location 1196 is 1152
9999 run: address to copy is 1152
9999 run: its type is number
9999 mem: location 1152 is 99
9999 mem: storing 99 in location 1206
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1206 is 99
9999 mem: storing 0 in location 1207
 103 run: break-unless newline?:boolean, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1199 is 2
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1209
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1191 is 1009
9999 mem: location 1206 is 99
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1302
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1304
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1305
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
 104 run: break-if color-found?:boolean, 
9999 mem: location 1307 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1306
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1308
 104 run: break-unless x:address:screen, 
9999 mem: location 1304 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1304 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1304 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1310
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1304 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1304 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1311
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1304 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1304 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1312
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1304 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1304 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1313
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1305 is 99
9999 mem: storing 0 in location 1314
 104 run: break-unless newline?:boolean, 
9999 mem: location 1314 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1310 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1312 is 5
9999 mem: storing 5 in location 1317
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1317 is 5
9999 mem: location 1311 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1317
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1304 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1304 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1318
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1305 is 99
9999 mem: storing 0 in location 1319
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1319 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1318 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1317 is 7
9999 mem: location 1318 is 1014
9999 mem: location 1317 is 7
9999 mem: storing 1029 in location 1321
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1321 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1321 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1322
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1321 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1321 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1323
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1305 is 99
9999 mem: location 1322 is 1029
9999 mem: storing 99 in location 1029
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1306 is 7
9999 mem: location 1323 is 1030
9999 mem: storing 7 in location 1030
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1312 is 5
9999 mem: storing 4 in location 1324
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1311 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1325
 104 run: break-if at-right?:boolean, 
9999 mem: location 1325 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1311 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1311 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1304 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1196 is 1152
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1326
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1328
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1328 is 1152
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1167
9999 mem: location 1154 is 1137
9999 mem: location 1328 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1167
9999 mem: storing 1167 in location 1329
 104 run: reply result:address:duplex-list
9999 mem: location 1329 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1196
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1197 is 1137
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1330
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1137 in location 1332
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1332 is 1137
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1332 is 1137
9999 mem: location 1137 is 98
9999 mem: location 1138 is 1152
9999 mem: location 1139 is 1122
9999 mem: location 1332 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1152
9999 mem: storing 1152 in location 1333
 104 run: reply result:address:duplex-list
9999 mem: location 1333 is 1152
9999 run: result 0 is 1152
9999 mem: storing 1152 in location 1197
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1199 is 2
9999 mem: storing 3 in location 1199
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 1167
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1198 is 1
9999 mem: location 1194 is 5
9999 mem: storing 0 in location 1203
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1204
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1204 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1199 is 3
9999 mem: location 1201 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1205
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1196 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 1182
9999 mem: location 1169 is 1152
9999 mem: location 1196 is 1167
9999 run: address to copy is 1167
9999 run: its type is number
9999 mem: location 1167 is 100
9999 mem: storing 100 in location 1206
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1206 is 100
9999 mem: storing 0 in location 1207
 103 run: break-unless newline?:boolean, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1199 is 3
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1209
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1191 is 1009
9999 mem: location 1206 is 100
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1334
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1336
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1337
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
 104 run: break-if color-found?:boolean, 
9999 mem: location 1339 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1338
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1341 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1340
 104 run: break-unless x:address:screen, 
9999 mem: location 1336 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1336 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1336 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1342
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1336 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1336 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1343
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1336 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1336 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1344
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1336 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1336 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1345
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1337 is 100
9999 mem: storing 0 in location 1346
 104 run: break-unless newline?:boolean, 
9999 mem: location 1346 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1342 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1344 is 5
9999 mem: storing 5 in location 1349
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1349 is 5
9999 mem: location 1343 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1349
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1336 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1336 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1350
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1337 is 100
9999 mem: storing 0 in location 1351
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1351 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1350 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1349 is 8
9999 mem: location 1350 is 1014
9999 mem: location 1349 is 8
9999 mem: storing 1031 in location 1353
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1353 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1353 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1354
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1353 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1353 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1355
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1337 is 100
9999 mem: location 1354 is 1031
9999 mem: storing 100 in location 1031
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1338 is 7
9999 mem: location 1355 is 1032
9999 mem: storing 7 in location 1032
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1344 is 5
9999 mem: storing 4 in location 1356
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1343 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1356 is 4
9999 mem: storing 0 in location 1357
 104 run: break-if at-right?:boolean, 
9999 mem: location 1357 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1343 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1343 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1336 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1196 is 1167
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1358
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1360
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1360 is 1167
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1360 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 1182
9999 mem: location 1169 is 1152
9999 mem: location 1360 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1182
9999 mem: storing 1182 in location 1361
 104 run: reply result:address:duplex-list
9999 mem: location 1361 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1196
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1197 is 1152
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1362
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1152 in location 1364
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1364 is 1152
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1364 is 1152
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1167
9999 mem: location 1154 is 1137
9999 mem: location 1364 is 1152
9999 run: address to copy is 1153
9999 run: its type is address
9999 mem: location 1153 is 1167
9999 mem: storing 1167 in location 1365
 104 run: reply result:address:duplex-list
9999 mem: location 1365 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1197
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1199 is 3
9999 mem: storing 4 in location 1199
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 1182
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1198 is 1
9999 mem: location 1194 is 5
9999 mem: storing 0 in location 1203
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 1 in location 1204
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1204 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1199 is 4
9999 mem: location 1201 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1205
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1205 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1196 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1167
9999 mem: location 1196 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1206
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1206 is 101
9999 mem: storing 0 in location 1207
 103 run: break-unless newline?:boolean, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1199 is 4
9999 mem: location 1195 is 4
9999 mem: storing 1 in location 1209
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1209 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1191 is 1009
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1366
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1368
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1369
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1370
9999 mem: storing 1 in location 1371
 104 run: break-if color-found?:boolean, 
9999 mem: location 1371 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1373 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1372
 104 run: break-unless x:address:screen, 
9999 mem: location 1368 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1368 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1368 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1374
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1368 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1368 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1375
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1368 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1368 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1376
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1368 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1368 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1377
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1369 is 8617
9999 mem: storing 0 in location 1378
 104 run: break-unless newline?:boolean, 
9999 mem: location 1378 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1374 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1376 is 5
9999 mem: storing 5 in location 1381
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1381 is 5
9999 mem: location 1375 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1381
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1368 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1368 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1382
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1369 is 8617
9999 mem: storing 0 in location 1383
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1383 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1382 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 100
9999 mem: location 1032 is 7
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1381 is 9
9999 mem: location 1382 is 1014
9999 mem: location 1381 is 9
9999 mem: storing 1033 in location 1385
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1385 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1385 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1386
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1385 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1385 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1387
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1369 is 8617
9999 mem: location 1386 is 1033
9999 mem: storing 8617 in location 1033
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1370 is 245
9999 mem: location 1387 is 1034
9999 mem: storing 245 in location 1034
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1376 is 5
9999 mem: storing 4 in location 1388
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1375 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 104 run: break-if at-right?:boolean, 
9999 mem: location 1389 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1368 is 1009
 103 run: column:number <- copy left:number
9999 mem: location 1193 is 0
9999 mem: storing 0 in location 1199
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1191 is 1009
9999 mem: location 1198 is 2
9999 mem: location 1199 is 0
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1390
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1392
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1393
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1394
 104 run: break-unless x:address:screen, 
9999 mem: location 1392 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1392 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1392 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1395
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1393 is 2
9999 mem: location 1395 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1392 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1392 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1396
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1394 is 0
9999 mem: location 1396 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1392 is 1009
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 1182
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1198 is 2
9999 mem: location 1194 is 5
9999 mem: storing 0 in location 1203
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 2
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1204
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1196 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1167
9999 mem: location 1196 is 1182
9999 run: address to copy is 1182
9999 run: its type is number
9999 mem: location 1182 is 101
9999 mem: storing 101 in location 1206
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1206 is 101
9999 mem: storing 0 in location 1207
 103 run: break-unless newline?:boolean, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1199 is 0
9999 mem: location 1195 is 4
9999 mem: storing 0 in location 1209
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1209 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1191 is 1009
9999 mem: location 1206 is 101
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1397
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1399
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1400
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
 104 run: break-if color-found?:boolean, 
9999 mem: location 1402 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1401
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1404 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1403
 104 run: break-unless x:address:screen, 
9999 mem: location 1399 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1399 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1399 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1405
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1399 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1399 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1406
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1399 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1399 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1407
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1399 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1399 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1408
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1400 is 101
9999 mem: storing 0 in location 1409
 104 run: break-unless newline?:boolean, 
9999 mem: location 1409 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1405 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1407 is 5
9999 mem: storing 10 in location 1412
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1412 is 10
9999 mem: location 1406 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1412
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1399 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1399 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1413
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1400 is 101
9999 mem: storing 0 in location 1414
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1414 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1413 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 100
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1412 is 10
9999 mem: location 1413 is 1014
9999 mem: location 1412 is 10
9999 mem: storing 1035 in location 1416
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1416 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1416 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1417
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1416 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1416 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1418
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1400 is 101
9999 mem: location 1417 is 1035
9999 mem: storing 101 in location 1035
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1401 is 7
9999 mem: location 1418 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1407 is 5
9999 mem: storing 4 in location 1419
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1406 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 104 run: break-if at-right?:boolean, 
9999 mem: location 1420 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1406 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1406 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1399 is 1009
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1196 is 1182
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1421
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1182 in location 1423
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1423 is 1182
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1423 is 1182
9999 mem: location 1182 is 101
9999 mem: location 1183 is 0
9999 mem: location 1184 is 1167
9999 mem: location 1423 is 1182
9999 run: address to copy is 1183
9999 run: its type is address
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1424
 104 run: reply result:address:duplex-list
9999 mem: location 1424 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1196
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1197 is 1167
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1425
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1427
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1427 is 1167
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1427 is 1167
9999 mem: location 1167 is 100
9999 mem: location 1168 is 1182
9999 mem: location 1169 is 1152
9999 mem: location 1427 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1182
9999 mem: storing 1182 in location 1428
 104 run: reply result:address:duplex-list
9999 mem: location 1428 is 1182
9999 run: result 0 is 1182
9999 mem: storing 1182 in location 1197
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1199 is 0
9999 mem: storing 1 in location 1199
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1196 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 2
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1204
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1102
9999 mem: location 1102 is 0
9999 mem: storing 0 in location 1210
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1204 is 0
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1198 is 2
9999 mem: location 1200 is 1101
9999 mem: location 1101 is 1
9999 mem: storing 0 in location 1212
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: storing 0 in location 1213
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1213 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1191 is 1009
9999 mem: location 1199 is 1
9999 mem: location 1195 is 4
 104 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1429
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1431
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1432
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1433
 104 run: column:number <- copy left:number
9999 mem: location 1432 is 1
9999 mem: storing 1 in location 1434
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1434 is 1
9999 mem: location 1433 is 4
9999 mem: storing 0 in location 1435
 104 run: break-if done?:boolean, 
9999 mem: location 1435 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1431 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1436
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1438
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1439
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
 105 run: break-if color-found?:boolean, 
9999 mem: location 1441 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1440
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1443 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1442
 105 run: break-unless x:address:screen, 
9999 mem: location 1438 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1438 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1438 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1444
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1438 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1438 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1445
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1438 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1438 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1446
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1438 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1438 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1447
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1439 is 32
9999 mem: storing 0 in location 1448
 105 run: break-unless newline?:boolean, 
9999 mem: location 1448 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1444 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1446 is 5
9999 mem: storing 10 in location 1451
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1451 is 10
9999 mem: location 1445 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1451
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1438 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1438 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1452
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1439 is 32
9999 mem: storing 0 in location 1453
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1453 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1452 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 100
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1451 is 11
9999 mem: location 1452 is 1014
9999 mem: location 1451 is 11
9999 mem: storing 1037 in location 1455
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1455 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1455 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1456
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1455 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1455 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1457
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1439 is 32
9999 mem: location 1456 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1440 is 7
9999 mem: location 1457 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1446 is 5
9999 mem: storing 4 in location 1458
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1445 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1458 is 4
9999 mem: storing 0 in location 1459
 105 run: break-if at-right?:boolean, 
9999 mem: location 1459 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1445 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1445 is 1012
9999 mem: storing 2 in location 1012
schedule: print-character/clear-line-delimited/render/new-editor/run1001/editor-initially-wraps-barely-long-lines
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1438 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1434 is 1
9999 mem: storing 2 in location 1434
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1434 is 2
9999 mem: location 1433 is 4
9999 mem: storing 0 in location 1435
 104 run: break-if done?:boolean, 
9999 mem: location 1435 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1431 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1460
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1462
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1463
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1464
9999 mem: storing 0 in location 1465
 105 run: break-if color-found?:boolean, 
9999 mem: location 1465 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1464
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1466
9999 mem: storing 0 in location 1467
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1467 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1466
 105 run: break-unless x:address:screen, 
9999 mem: location 1462 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1462 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1462 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1468
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1462 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1462 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1469
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1462 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1462 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1470
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1462 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1462 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1471
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1463 is 32
9999 mem: storing 0 in location 1472
 105 run: break-unless newline?:boolean, 
9999 mem: location 1472 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1468 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1470 is 5
9999 mem: storing 10 in location 1475
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1475 is 10
9999 mem: location 1469 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1475
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1462 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1462 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1476
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1463 is 32
9999 mem: storing 0 in location 1477
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1477 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1476 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 100
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1475 is 12
9999 mem: location 1476 is 1014
9999 mem: location 1475 is 12
9999 mem: storing 1039 in location 1479
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1479 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1479 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1480
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1479 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1479 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1481
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1463 is 32
9999 mem: location 1480 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1464 is 7
9999 mem: location 1481 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1470 is 5
9999 mem: storing 4 in location 1482
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1469 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1482 is 4
9999 mem: storing 0 in location 1483
 105 run: break-if at-right?:boolean, 
9999 mem: location 1483 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1469 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1469 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1462 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1434 is 2
9999 mem: storing 3 in location 1434
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1434 is 3
9999 mem: location 1433 is 4
9999 mem: storing 0 in location 1435
 104 run: break-if done?:boolean, 
9999 mem: location 1435 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1431 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1484
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1486
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1487
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1488
9999 mem: storing 0 in location 1489
 105 run: break-if color-found?:boolean, 
9999 mem: location 1489 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1488
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1490
9999 mem: storing 0 in location 1491
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1491 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1490
 105 run: break-unless x:address:screen, 
9999 mem: location 1486 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1486 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1492
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1486 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1493
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1486 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1494
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1486 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1495
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1487 is 32
9999 mem: storing 0 in location 1496
 105 run: break-unless newline?:boolean, 
9999 mem: location 1496 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1492 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1494 is 5
9999 mem: storing 10 in location 1499
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1499 is 10
9999 mem: location 1493 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1499
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1486 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1486 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1500
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1487 is 32
9999 mem: storing 0 in location 1501
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1501 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1500 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 100
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1499 is 13
9999 mem: location 1500 is 1014
9999 mem: location 1499 is 13
9999 mem: storing 1041 in location 1503
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1503 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1503 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1504
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1503 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1503 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1505
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1487 is 32
9999 mem: location 1504 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1488 is 7
9999 mem: location 1505 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1494 is 5
9999 mem: storing 4 in location 1506
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1493 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1506 is 4
9999 mem: storing 0 in location 1507
 105 run: break-if at-right?:boolean, 
9999 mem: location 1507 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1493 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1493 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1486 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1434 is 3
9999 mem: storing 4 in location 1434
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1434 is 4
9999 mem: location 1433 is 4
9999 mem: storing 0 in location 1435
 104 run: break-if done?:boolean, 
9999 mem: location 1435 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 1431 is 1009
 105 run: default-space:address:array:location <- new-default-space location:type, number-of-locals:literal
9999 mem: array size is 23
9999 mem: new alloc: 1508
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1510
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1511
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1512
9999 mem: storing 0 in location 1513
 105 run: break-if color-found?:boolean, 
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1512
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1514
9999 mem: storing 0 in location 1515
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 1515 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1514
 105 run: break-unless x:address:screen, 
9999 mem: location 1510 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1510 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1510 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1516
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1510 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1510 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1517
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1510 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1510 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1518
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1510 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1510 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1519
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1511 is 32
9999 mem: storing 0 in location 1520
 105 run: break-unless newline?:boolean, 
9999 mem: location 1520 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1516 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1518 is 5
9999 mem: storing 10 in location 1523
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1523 is 10
9999 mem: location 1517 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1523
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1510 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1510 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1524
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1511 is 32
9999 mem: storing 0 in location 1525
 105 run: break-unless backspace?:boolean, 
9999 mem: location 1525 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1524 is 1014
9999 mem: location 1014 is 25
9999 mem: location 1015 is 0
9999 mem: location 1016 is 7
9999 mem: location 1017 is 0
9999 mem: location 1018 is 7
9999 mem: location 1019 is 0
9999 mem: location 1020 is 7
9999 mem: location 1021 is 0
9999 mem: location 1022 is 7
9999 mem: location 1023 is 0
9999 mem: location 1024 is 7
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1029 is 99
9999 mem: location 1030 is 7
9999 mem: location 1031 is 100
9999 mem: location 1032 is 7
9999 mem: location 1033 is 8617
9999 mem: location 1034 is 245
9999 mem: location 1035 is 101
9999 mem: location 1036 is 7
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1523 is 14
9999 mem: location 1524 is 1014
9999 mem: location 1523 is 14
9999 mem: storing 1043 in location 1527
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1527 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1527 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1528
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1527 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1527 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1529
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1511 is 32
9999 mem: location 1528 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1512 is 7
9999 mem: location 1529 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1518 is 5
9999 mem: storing 4 in location 1530
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1517 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1530 is 4
9999 mem: storing 1 in location 1531
 105 run: break-if at-right?:boolean, 
9999 mem: location 1531 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1510 is 1009
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 1434 is 4
9999 mem: storing 5 in location 1434
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1434 is 5
9999 mem: location 1433 is 4
9999 mem: storing 1 in location 1435
 104 run: break-if done?:boolean, 
9999 mem: location 1435 is 1
9999 run: jumping to instruction 11
 103 run: reply row:number, screen:address/same-as-ingredient:0
9999 mem: location 1198 is 2
9999 mem: location 1191 is 1009
9999 run: result 0 is 2
9999 run: result 1 is 1009
9999 mem: storing 1009 in location 1085
 102 run: reply result:address:editor-data
9999 mem: location 1088 is 1097
 100 run: screen-should-contain [
    .     .
    .abcdâ†©.
    .e    .
    .     .
  ]
 100 run: screen-should-contain-in-color 245:literal/grey, [
    .     .
    .    â†©.
    .     .
    .     .
  ]
