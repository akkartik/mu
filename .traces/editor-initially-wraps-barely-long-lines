parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abcde]\n    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .abcdâ†©.\n    .e    .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain-in-color
parse:   ingredient: {name: "245", properties: ["245": "literal", "grey": ]}
parse:   ingredient: {name: "\n    .     .\n    .    â†©.\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-wraps-barely-long-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: screen-should-contain-in-color ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-wraps-barely-long-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 5 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1087
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1089
 103 run: break-unless x:address:screen, 
9999 mem: location 1089 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1090
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1090 is 1036
9999 mem: storing 25 in location 1091
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1092
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 0
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 0
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 0
9999 mem: storing 1037 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 1
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 1
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 1
9999 mem: storing 1039 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 2
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 2
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 2
9999 mem: storing 1041 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 3
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 3
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 3
9999 mem: storing 1043 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 3
9999 mem: storing 4 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 4
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 4
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 4
9999 mem: storing 1045 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 4
9999 mem: storing 5 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 5
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 5
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 5
9999 mem: storing 1047 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 5
9999 mem: storing 6 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 6
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 6
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 6
9999 mem: storing 1049 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 6
9999 mem: storing 7 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 7
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 7
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 7
9999 mem: storing 1051 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 7
9999 mem: storing 8 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 8
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 8
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 8
9999 mem: storing 1053 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 8
9999 mem: storing 9 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 9
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 9
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 9
9999 mem: storing 1055 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 9
9999 mem: storing 10 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 10
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 10
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 10
9999 mem: storing 1057 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 10
9999 mem: storing 11 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 11
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 11
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 11
9999 mem: storing 1059 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 11
9999 mem: storing 12 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 12
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 12
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 12
9999 mem: storing 1061 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 12
9999 mem: storing 13 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 13
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 13
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 13
9999 mem: storing 1063 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 13
9999 mem: storing 14 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 14
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 14
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 14
9999 mem: storing 1065 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 14
9999 mem: storing 15 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 15
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 15
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 15
9999 mem: storing 1067 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 15
9999 mem: storing 16 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 16
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 16
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 16
9999 mem: storing 1069 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 16
9999 mem: storing 17 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 17
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 17
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 17
9999 mem: storing 1071 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 17
9999 mem: storing 18 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 18
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 18
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 18
9999 mem: storing 1073 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 18
9999 mem: storing 19 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 19
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 19
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 19
9999 mem: storing 1075 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 19
9999 mem: storing 20 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 20
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 20
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 20
9999 mem: storing 1077 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 20
9999 mem: storing 21 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 21
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 21
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 21
9999 mem: storing 1079 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 21
9999 mem: storing 22 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 22
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 22
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 22
9999 mem: storing 1081 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 22
9999 mem: storing 23 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 23
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 23
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 23
9999 mem: storing 1083 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 23
9999 mem: storing 24 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 24
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 24
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 24
9999 mem: storing 1085 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 24
9999 mem: storing 25 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 25
9999 mem: location 1091 is 25
9999 mem: storing 1 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1089 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abcde]
    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abcde", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abcde]
9999 mem: storing 1118 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1118
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1124
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1118 in location 1126
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1127
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1128
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1129
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1129 is 5
9999 mem: storing 4 in location 1129
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1155
9999 mem: storing 1155 in location 1130
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1131
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1128 is 0
9999 mem: location 1131 is 1157
9999 mem: storing 0 in location 1157
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1131
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1129 is 4
9999 mem: location 1131 is 1158
9999 mem: storing 4 in location 1158
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1131
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1131 is 1159
9999 mem: storing 1 in location 1159
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1131
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1128 is 0
9999 mem: location 1131 is 1160
9999 mem: storing 0 in location 1160
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1155
9999 mem: storing 1155 in location 1132
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1161
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1163
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1164
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1192
9999 mem: storing 1192 in location 1165
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1165 is 1192
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1165 is 1192
9999 run: address to copy is 1192
9999 mem: storing 1192 in location 1166
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1163 is 167
9999 mem: location 1166 is 1192
9999 mem: storing 167 in location 1192
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1165 is 1192
9999 mem: location 1192 is 167
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1165 is 1192
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1167
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1164 is 0
9999 mem: location 1167 is 1193
9999 mem: storing 0 in location 1193
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1164 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1165 is 1192
9999 run: result 0 is 1192
9999 mem: location 1132 is 1155
9999 mem: storing 1192 in location 1155
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1133
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1133 is 1156
9999 mem: storing 1192 in location 1156
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1126 is 1118
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1126 is 1118
9999 mem: location 1118 is 5
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 100
9999 mem: location 1123 is 101
9999 mem: location 1126 is 1118
9999 mem: storing 5 in location 1134
 102 run: jump-if len:number, 1:offset
9999 mem: location 1134 is 5
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1135
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1155
9999 mem: location 1155 is 1192
9999 mem: storing 1192 in location 1136
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1135 is 0
9999 mem: location 1134 is 5
9999 mem: storing 0 in location 1137
 102 run: break-if done?:boolean, 
9999 mem: location 1137 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1126 is 1118
9999 mem: location 1118 is 5
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 100
9999 mem: location 1123 is 101
9999 mem: location 1135 is 0
9999 mem: location 1126 is 1118
9999 mem: location 1135 is 0
9999 run: address to copy is 1119
9999 run: its type is character
9999 mem: location 1119 is 97
9999 mem: storing 97 in location 1138
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1138 is 97
9999 mem: location 1136 is 1192
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1195
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1197
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1198
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1226
9999 mem: storing 1226 in location 1199
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1199 is 1226
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1199 is 1226
9999 run: address to copy is 1226
9999 mem: storing 1226 in location 1200
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1197 is 97
9999 mem: location 1200 is 1226
9999 mem: storing 97 in location 1226
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1198 is 1192
9999 mem: location 1192 is 167
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1198 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 0
9999 mem: storing 0 in location 1201
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1198 is 1192
9999 mem: location 1192 is 167
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1198 is 1192
9999 run: address to copy is 1193
9999 mem: storing 1193 in location 1202
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1199 is 1226
9999 mem: location 1202 is 1193
9999 mem: storing 1226 in location 1193
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1199 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1199 is 1226
9999 run: address to copy is 1228
9999 mem: storing 1228 in location 1202
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1198 is 1192
9999 mem: location 1202 is 1228
9999 mem: storing 1192 in location 1228
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1199 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1192
9999 mem: location 1199 is 1226
9999 run: address to copy is 1227
9999 mem: storing 1227 in location 1202
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1227
9999 mem: storing 0 in location 1227
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1201 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1199 is 1226
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1136 is 1192
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1229
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1231
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1231 is 1192
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1231 is 1192
9999 mem: location 1192 is 167
9999 mem: location 1193 is 1226
9999 mem: location 1194 is 0
9999 mem: location 1231 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1226
9999 mem: storing 1226 in location 1232
 103 run: reply result:address:duplex-list
9999 mem: location 1232 is 1226
9999 run: result 0 is 1226
9999 mem: storing 1226 in location 1136
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1135 is 0
9999 mem: storing 1 in location 1135
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1135 is 1
9999 mem: location 1134 is 5
9999 mem: storing 0 in location 1137
 102 run: break-if done?:boolean, 
9999 mem: location 1137 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1126 is 1118
9999 mem: location 1118 is 5
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 100
9999 mem: location 1123 is 101
9999 mem: location 1135 is 1
9999 mem: location 1126 is 1118
9999 mem: location 1135 is 1
9999 run: address to copy is 1120
9999 run: its type is character
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1138
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1138 is 98
9999 mem: location 1136 is 1226
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1260
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1262
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1226 in location 1263
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1291
9999 mem: storing 1291 in location 1264
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1264 is 1291
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1264 is 1291
9999 run: address to copy is 1291
9999 mem: storing 1291 in location 1265
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1262 is 98
9999 mem: location 1265 is 1291
9999 mem: storing 98 in location 1291
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1263 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1192
9999 mem: location 1263 is 1226
9999 run: address to copy is 1227
9999 run: its type is address
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1266
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1263 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1192
9999 mem: location 1263 is 1226
9999 run: address to copy is 1227
9999 mem: storing 1227 in location 1267
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1264 is 1291
9999 mem: location 1267 is 1227
9999 mem: storing 1291 in location 1227
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1264 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1264 is 1291
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1267
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1263 is 1226
9999 mem: location 1267 is 1293
9999 mem: storing 1226 in location 1293
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1264 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1226
9999 mem: location 1264 is 1291
9999 run: address to copy is 1292
9999 mem: storing 1292 in location 1267
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1292
9999 mem: storing 0 in location 1292
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1266 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1264 is 1291
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1136 is 1226
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1294
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1226 in location 1296
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1296 is 1226
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1296 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 1291
9999 mem: location 1228 is 1192
9999 mem: location 1296 is 1226
9999 run: address to copy is 1227
9999 run: its type is address
9999 mem: location 1227 is 1291
9999 mem: storing 1291 in location 1297
 103 run: reply result:address:duplex-list
9999 mem: location 1297 is 1291
9999 run: result 0 is 1291
9999 mem: storing 1291 in location 1136
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1135 is 1
9999 mem: storing 2 in location 1135
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1135 is 2
9999 mem: location 1134 is 5
9999 mem: storing 0 in location 1137
 102 run: break-if done?:boolean, 
9999 mem: location 1137 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1126 is 1118
9999 mem: location 1118 is 5
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 100
9999 mem: location 1123 is 101
9999 mem: location 1135 is 2
9999 mem: location 1126 is 1118
9999 mem: location 1135 is 2
9999 run: address to copy is 1121
9999 run: its type is character
9999 mem: location 1121 is 99
9999 mem: storing 99 in location 1138
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1138 is 99
9999 mem: location 1136 is 1291
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1325
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1327
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1291 in location 1328
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1356
9999 mem: storing 1356 in location 1329
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1329 is 1356
9999 mem: location 1356 is 0
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: location 1329 is 1356
9999 run: address to copy is 1356
9999 mem: storing 1356 in location 1330
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1327 is 99
9999 mem: location 1330 is 1356
9999 mem: storing 99 in location 1356
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1328 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1226
9999 mem: location 1328 is 1291
9999 run: address to copy is 1292
9999 run: its type is address
9999 mem: location 1292 is 0
9999 mem: storing 0 in location 1331
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1328 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1226
9999 mem: location 1328 is 1291
9999 run: address to copy is 1292
9999 mem: storing 1292 in location 1332
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1329 is 1356
9999 mem: location 1332 is 1292
9999 mem: storing 1356 in location 1292
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1329 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: location 1329 is 1356
9999 run: address to copy is 1358
9999 mem: storing 1358 in location 1332
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1328 is 1291
9999 mem: location 1332 is 1358
9999 mem: storing 1291 in location 1358
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1329 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 0
9999 mem: location 1358 is 1291
9999 mem: location 1329 is 1356
9999 run: address to copy is 1357
9999 mem: storing 1357 in location 1332
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1331 is 0
9999 mem: location 1332 is 1357
9999 mem: storing 0 in location 1357
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1331 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1329 is 1356
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1136 is 1291
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1359
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1291 in location 1361
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1361 is 1291
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1361 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 1356
9999 mem: location 1293 is 1226
9999 mem: location 1361 is 1291
9999 run: address to copy is 1292
9999 run: its type is address
9999 mem: location 1292 is 1356
9999 mem: storing 1356 in location 1362
 103 run: reply result:address:duplex-list
9999 mem: location 1362 is 1356
9999 run: result 0 is 1356
9999 mem: storing 1356 in location 1136
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1135 is 2
9999 mem: storing 3 in location 1135
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1135 is 3
9999 mem: location 1134 is 5
9999 mem: storing 0 in location 1137
 102 run: break-if done?:boolean, 
9999 mem: location 1137 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1126 is 1118
9999 mem: location 1118 is 5
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 100
9999 mem: location 1123 is 101
9999 mem: location 1135 is 3
9999 mem: location 1126 is 1118
9999 mem: location 1135 is 3
9999 run: address to copy is 1122
9999 run: its type is character
9999 mem: location 1122 is 100
9999 mem: storing 100 in location 1138
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1138 is 100
9999 mem: location 1136 is 1356
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1390
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1392
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1356 in location 1393
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1421
9999 mem: storing 1421 in location 1394
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1394 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: location 1394 is 1421
9999 run: address to copy is 1421
9999 mem: storing 1421 in location 1395
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1392 is 100
9999 mem: location 1395 is 1421
9999 mem: storing 100 in location 1421
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1393 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 0
9999 mem: location 1358 is 1291
9999 mem: location 1393 is 1356
9999 run: address to copy is 1357
9999 run: its type is address
9999 mem: location 1357 is 0
9999 mem: storing 0 in location 1396
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1393 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 0
9999 mem: location 1358 is 1291
9999 mem: location 1393 is 1356
9999 run: address to copy is 1357
9999 mem: storing 1357 in location 1397
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1394 is 1421
9999 mem: location 1397 is 1357
9999 mem: storing 1421 in location 1357
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1394 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: location 1394 is 1421
9999 run: address to copy is 1423
9999 mem: storing 1423 in location 1397
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1393 is 1356
9999 mem: location 1397 is 1423
9999 mem: storing 1356 in location 1423
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1394 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1356
9999 mem: location 1394 is 1421
9999 run: address to copy is 1422
9999 mem: storing 1422 in location 1397
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1396 is 0
9999 mem: location 1397 is 1422
9999 mem: storing 0 in location 1422
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1396 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1394 is 1421
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1136 is 1356
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1424
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1356 in location 1426
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1426 is 1356
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1426 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 1421
9999 mem: location 1358 is 1291
9999 mem: location 1426 is 1356
9999 run: address to copy is 1357
9999 run: its type is address
9999 mem: location 1357 is 1421
9999 mem: storing 1421 in location 1427
 103 run: reply result:address:duplex-list
9999 mem: location 1427 is 1421
9999 run: result 0 is 1421
9999 mem: storing 1421 in location 1136
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1135 is 3
9999 mem: storing 4 in location 1135
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1135 is 4
9999 mem: location 1134 is 5
9999 mem: storing 0 in location 1137
 102 run: break-if done?:boolean, 
9999 mem: location 1137 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1126 is 1118
9999 mem: location 1118 is 5
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 100
9999 mem: location 1123 is 101
9999 mem: location 1135 is 4
9999 mem: location 1126 is 1118
9999 mem: location 1135 is 4
9999 run: address to copy is 1123
9999 run: its type is character
9999 mem: location 1123 is 101
9999 mem: storing 101 in location 1138
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1138 is 101
9999 mem: location 1136 is 1421
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1455
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1457
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1421 in location 1458
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1486
9999 mem: storing 1486 in location 1459
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1459 is 1486
9999 mem: location 1486 is 0
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: location 1459 is 1486
9999 run: address to copy is 1486
9999 mem: storing 1486 in location 1460
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1457 is 101
9999 mem: location 1460 is 1486
9999 mem: storing 101 in location 1486
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1458 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1356
9999 mem: location 1458 is 1421
9999 run: address to copy is 1422
9999 run: its type is address
9999 mem: location 1422 is 0
9999 mem: storing 0 in location 1461
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1458 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 0
9999 mem: location 1423 is 1356
9999 mem: location 1458 is 1421
9999 run: address to copy is 1422
9999 mem: storing 1422 in location 1462
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1459 is 1486
9999 mem: location 1462 is 1422
9999 mem: storing 1486 in location 1422
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1459 is 1486
9999 mem: location 1486 is 101
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: location 1459 is 1486
9999 run: address to copy is 1488
9999 mem: storing 1488 in location 1462
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1458 is 1421
9999 mem: location 1462 is 1488
9999 mem: storing 1421 in location 1488
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1459 is 1486
9999 mem: location 1486 is 101
9999 mem: location 1487 is 0
9999 mem: location 1488 is 1421
9999 mem: location 1459 is 1486
9999 run: address to copy is 1487
9999 mem: storing 1487 in location 1462
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1461 is 0
9999 mem: location 1462 is 1487
9999 mem: storing 0 in location 1487
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1461 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1459 is 1486
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1136 is 1421
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1489
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1421 in location 1491
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1491 is 1421
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1491 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 1486
9999 mem: location 1423 is 1356
9999 mem: location 1491 is 1421
9999 run: address to copy is 1422
9999 run: its type is address
9999 mem: location 1422 is 1486
9999 mem: storing 1486 in location 1492
 103 run: reply result:address:duplex-list
9999 mem: location 1492 is 1486
9999 run: result 0 is 1486
9999 mem: storing 1486 in location 1136
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1135 is 4
9999 mem: storing 5 in location 1135
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1135 is 5
9999 mem: location 1134 is 5
9999 mem: storing 1 in location 1137
 102 run: break-if done?:boolean, 
9999 mem: location 1137 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1130 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1130 is 1155
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1133
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1132 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1133 is 1156
9999 mem: storing 1192 in location 1156
 102 run: result:address:editor-data, _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1127 is 1031
9999 mem: location 1130 is 1155
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1520
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1522
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1155 in location 1523
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1523 is 1155
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1523 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1523 is 1155
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1524
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1522 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1561
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1563
 104 run: break-unless x:address:screen, 
9999 mem: location 1563 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1563 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1563 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1564
 104 run: reply height:number
9999 mem: location 1564 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1525
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1523 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1523 is 1155
9999 run: address to copy is 1158
9999 run: its type is number
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1526
 103 run: hide-screen screen:address
9999 mem: location 1522 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1592
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1594
 104 run: break-unless x:address:screen, 
9999 mem: location 1594 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1594 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1523 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1523 is 1155
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1192
9999 mem: storing 1192 in location 1527
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1527 is 1192
9999 mem: storing 1192 in location 1528
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1527 is 1192
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1623
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1625
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1625 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1625 is 1192
9999 mem: location 1192 is 167
9999 mem: location 1193 is 1226
9999 mem: location 1194 is 0
9999 mem: location 1625 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1226
9999 mem: storing 1226 in location 1626
 104 run: reply result:address:duplex-list
9999 mem: location 1626 is 1226
9999 run: result 0 is 1226
9999 mem: storing 1226 in location 1527
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1529
 103 run: column:number <- copy left:number
9999 mem: location 1524 is 0
9999 mem: storing 0 in location 1530
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1523 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1523 is 1155
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1531
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1523 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1523 is 1155
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1532
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1523 is 1155
9999 mem: location 1155 is 1192
9999 mem: location 1156 is 1192
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1523 is 1155
9999 run: address to copy is 1156
9999 mem: storing 1156 in location 1533
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1522 is 1031
9999 mem: location 1529 is 1
9999 mem: location 1530 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1654
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1656
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1657
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1658
 104 run: break-unless x:address:screen, 
9999 mem: location 1656 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1656 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1656 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1659
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1657 is 1
9999 mem: location 1659 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1656 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1656 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1660
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1658 is 0
9999 mem: location 1660 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1656 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 1226
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1529 is 1
9999 mem: location 1525 is 5
9999 mem: storing 0 in location 1534
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1534 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1535
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1535 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1530 is 0
9999 mem: location 1532 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 1 in location 1536
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1536 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1527 is 1226
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1685
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1226 in location 1687
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1687 is 1226
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1687 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 1291
9999 mem: location 1228 is 1192
9999 mem: location 1687 is 1226
9999 run: address to copy is 1228
9999 run: its type is address
9999 mem: location 1228 is 1192
9999 mem: storing 1192 in location 1688
 104 run: reply result:address:duplex-list
9999 mem: location 1688 is 1192
9999 run: result 0 is 1192
9999 mem: location 1533 is 1156
9999 mem: storing 1192 in location 1156
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1527 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 1291
9999 mem: location 1228 is 1192
9999 mem: location 1527 is 1226
9999 run: address to copy is 1226
9999 run: its type is number
9999 mem: location 1226 is 97
9999 mem: storing 97 in location 1537
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 97
9999 mem: storing 0 in location 1538
schedule: render/new-editor/run1001/editor-initially-wraps-barely-long-lines
 103 run: break-unless newline?:boolean, 
9999 mem: location 1538 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1530 is 0
9999 mem: location 1526 is 4
9999 mem: storing 0 in location 1540
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1540 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1522 is 1031
9999 mem: location 1537 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1716
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1718
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1719
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1720
9999 mem: storing 0 in location 1721
 104 run: break-if color-found?:boolean, 
9999 mem: location 1721 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1720
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1722
9999 mem: storing 0 in location 1723
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1723 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1722
 104 run: break-unless x:address:screen, 
9999 mem: location 1718 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1718 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1718 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1724
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1718 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1718 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1725
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1718 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1718 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1726
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1718 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1718 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1727
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1719 is 97
9999 mem: storing 0 in location 1728
 104 run: break-unless newline?:boolean, 
9999 mem: location 1728 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1724 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1726 is 5
9999 mem: storing 5 in location 1731
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1731 is 5
9999 mem: location 1725 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 1731
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1718 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1718 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1732
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1719 is 97
9999 mem: storing 0 in location 1733
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1733 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1732 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1731 is 5
9999 mem: location 1732 is 1036
9999 mem: location 1731 is 5
9999 mem: storing 1047 in location 1735
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1735 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1735 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1736
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1735 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1735 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1737
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1719 is 97
9999 mem: location 1736 is 1047
9999 mem: storing 97 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1720 is 7
9999 mem: location 1737 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1726 is 5
9999 mem: storing 4 in location 1738
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1725 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1738 is 4
9999 mem: storing 0 in location 1739
 104 run: break-if at-right?:boolean, 
9999 mem: location 1739 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1725 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1725 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1718 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1527 is 1226
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1747
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1226 in location 1749
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1749 is 1226
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1749 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 1291
9999 mem: location 1228 is 1192
9999 mem: location 1749 is 1226
9999 run: address to copy is 1227
9999 run: its type is address
9999 mem: location 1227 is 1291
9999 mem: storing 1291 in location 1750
 104 run: reply result:address:duplex-list
9999 mem: location 1750 is 1291
9999 run: result 0 is 1291
9999 mem: storing 1291 in location 1527
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1528 is 1192
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1778
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1780
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1780 is 1192
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1780 is 1192
9999 mem: location 1192 is 167
9999 mem: location 1193 is 1226
9999 mem: location 1194 is 0
9999 mem: location 1780 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1226
9999 mem: storing 1226 in location 1781
 104 run: reply result:address:duplex-list
9999 mem: location 1781 is 1226
9999 run: result 0 is 1226
9999 mem: storing 1226 in location 1528
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1530 is 0
9999 mem: storing 1 in location 1530
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 1291
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1529 is 1
9999 mem: location 1525 is 5
9999 mem: storing 0 in location 1534
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1534 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1535
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1535 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1530 is 1
9999 mem: location 1532 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1536
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1536 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1527 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 1356
9999 mem: location 1293 is 1226
9999 mem: location 1527 is 1291
9999 run: address to copy is 1291
9999 run: its type is number
9999 mem: location 1291 is 98
9999 mem: storing 98 in location 1537
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 98
9999 mem: storing 0 in location 1538
 103 run: break-unless newline?:boolean, 
9999 mem: location 1538 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1530 is 1
9999 mem: location 1526 is 4
9999 mem: storing 0 in location 1540
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1540 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1522 is 1031
9999 mem: location 1537 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1809
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1811
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1812
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1813
9999 mem: storing 0 in location 1814
 104 run: break-if color-found?:boolean, 
9999 mem: location 1814 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1813
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1815
9999 mem: storing 0 in location 1816
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1816 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1815
 104 run: break-unless x:address:screen, 
9999 mem: location 1811 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1811 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1811 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1817
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1811 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1811 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1818
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1811 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1811 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1819
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1811 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1811 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1820
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1812 is 98
9999 mem: storing 0 in location 1821
 104 run: break-unless newline?:boolean, 
9999 mem: location 1821 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1817 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1819 is 5
9999 mem: storing 5 in location 1824
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1824 is 5
9999 mem: location 1818 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1824
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1811 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1811 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1825
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1812 is 98
9999 mem: storing 0 in location 1826
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1826 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1825 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1824 is 6
9999 mem: location 1825 is 1036
9999 mem: location 1824 is 6
9999 mem: storing 1049 in location 1828
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1828 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1828 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1829
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1828 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1828 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1830
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1812 is 98
9999 mem: location 1829 is 1049
9999 mem: storing 98 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1813 is 7
9999 mem: location 1830 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1819 is 5
9999 mem: storing 4 in location 1831
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1818 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1831 is 4
9999 mem: storing 0 in location 1832
 104 run: break-if at-right?:boolean, 
9999 mem: location 1832 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1818 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1818 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1811 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1527 is 1291
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1840
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1291 in location 1842
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1842 is 1291
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1842 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 1356
9999 mem: location 1293 is 1226
9999 mem: location 1842 is 1291
9999 run: address to copy is 1292
9999 run: its type is address
9999 mem: location 1292 is 1356
9999 mem: storing 1356 in location 1843
 104 run: reply result:address:duplex-list
9999 mem: location 1843 is 1356
9999 run: result 0 is 1356
9999 mem: storing 1356 in location 1527
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1528 is 1226
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1871
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1226 in location 1873
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1873 is 1226
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1873 is 1226
9999 mem: location 1226 is 97
9999 mem: location 1227 is 1291
9999 mem: location 1228 is 1192
9999 mem: location 1873 is 1226
9999 run: address to copy is 1227
9999 run: its type is address
9999 mem: location 1227 is 1291
9999 mem: storing 1291 in location 1874
 104 run: reply result:address:duplex-list
9999 mem: location 1874 is 1291
9999 run: result 0 is 1291
9999 mem: storing 1291 in location 1528
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1530 is 1
9999 mem: storing 2 in location 1530
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 1356
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1529 is 1
9999 mem: location 1525 is 5
9999 mem: storing 0 in location 1534
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1534 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1535
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1535 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1530 is 2
9999 mem: location 1532 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1536
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1536 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1527 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 1421
9999 mem: location 1358 is 1291
9999 mem: location 1527 is 1356
9999 run: address to copy is 1356
9999 run: its type is number
9999 mem: location 1356 is 99
9999 mem: storing 99 in location 1537
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 99
9999 mem: storing 0 in location 1538
 103 run: break-unless newline?:boolean, 
9999 mem: location 1538 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1530 is 2
9999 mem: location 1526 is 4
9999 mem: storing 0 in location 1540
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1540 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1522 is 1031
9999 mem: location 1537 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1902
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1904
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1905
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1906
9999 mem: storing 0 in location 1907
 104 run: break-if color-found?:boolean, 
9999 mem: location 1907 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1906
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1908
9999 mem: storing 0 in location 1909
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1909 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1908
 104 run: break-unless x:address:screen, 
9999 mem: location 1904 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1904 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1904 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1910
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1904 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1904 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1911
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1904 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1904 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1912
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1904 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1904 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1913
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1905 is 99
9999 mem: storing 0 in location 1914
 104 run: break-unless newline?:boolean, 
9999 mem: location 1914 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1910 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1912 is 5
9999 mem: storing 5 in location 1917
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1917 is 5
9999 mem: location 1911 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 1917
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1904 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1904 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1918
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1905 is 99
9999 mem: storing 0 in location 1919
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1919 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1918 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1917 is 7
9999 mem: location 1918 is 1036
9999 mem: location 1917 is 7
9999 mem: storing 1051 in location 1921
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1921 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1921 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1922
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1921 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1921 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1923
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1905 is 99
9999 mem: location 1922 is 1051
9999 mem: storing 99 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1906 is 7
9999 mem: location 1923 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1912 is 5
9999 mem: storing 4 in location 1924
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1911 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1924 is 4
9999 mem: storing 0 in location 1925
 104 run: break-if at-right?:boolean, 
9999 mem: location 1925 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1911 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1911 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1904 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1527 is 1356
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1933
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1356 in location 1935
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1935 is 1356
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1935 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 1421
9999 mem: location 1358 is 1291
9999 mem: location 1935 is 1356
9999 run: address to copy is 1357
9999 run: its type is address
9999 mem: location 1357 is 1421
9999 mem: storing 1421 in location 1936
 104 run: reply result:address:duplex-list
9999 mem: location 1936 is 1421
9999 run: result 0 is 1421
9999 mem: storing 1421 in location 1527
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1528 is 1291
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1964
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1291 in location 1966
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1966 is 1291
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1966 is 1291
9999 mem: location 1291 is 98
9999 mem: location 1292 is 1356
9999 mem: location 1293 is 1226
9999 mem: location 1966 is 1291
9999 run: address to copy is 1292
9999 run: its type is address
9999 mem: location 1292 is 1356
9999 mem: storing 1356 in location 1967
 104 run: reply result:address:duplex-list
9999 mem: location 1967 is 1356
9999 run: result 0 is 1356
9999 mem: storing 1356 in location 1528
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1530 is 2
9999 mem: storing 3 in location 1530
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 1421
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1529 is 1
9999 mem: location 1525 is 5
9999 mem: storing 0 in location 1534
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1534 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1535
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1535 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1530 is 3
9999 mem: location 1532 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1536
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1536 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1527 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 1486
9999 mem: location 1423 is 1356
9999 mem: location 1527 is 1421
9999 run: address to copy is 1421
9999 run: its type is number
9999 mem: location 1421 is 100
9999 mem: storing 100 in location 1537
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 100
9999 mem: storing 0 in location 1538
 103 run: break-unless newline?:boolean, 
9999 mem: location 1538 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1530 is 3
9999 mem: location 1526 is 4
9999 mem: storing 0 in location 1540
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1540 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1522 is 1031
9999 mem: location 1537 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1995
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1997
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1998
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1999
9999 mem: storing 0 in location 2000
 104 run: break-if color-found?:boolean, 
9999 mem: location 2000 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1999
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2001
9999 mem: storing 0 in location 2002
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2002 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2001
 104 run: break-unless x:address:screen, 
9999 mem: location 1997 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1997 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1997 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2003
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1997 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1997 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2004
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1997 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1997 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2005
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1997 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1997 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2006
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1998 is 100
9999 mem: storing 0 in location 2007
 104 run: break-unless newline?:boolean, 
9999 mem: location 2007 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2003 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2005 is 5
9999 mem: storing 5 in location 2010
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2010 is 5
9999 mem: location 2004 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2010
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1997 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1997 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2011
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1998 is 100
9999 mem: storing 0 in location 2012
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2012 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2011 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2010 is 8
9999 mem: location 2011 is 1036
9999 mem: location 2010 is 8
9999 mem: storing 1053 in location 2014
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2014 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2014 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2015
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2014 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2014 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2016
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1998 is 100
9999 mem: location 2015 is 1053
9999 mem: storing 100 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1999 is 7
9999 mem: location 2016 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2005 is 5
9999 mem: storing 4 in location 2017
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2004 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2017 is 4
9999 mem: storing 0 in location 2018
 104 run: break-if at-right?:boolean, 
9999 mem: location 2018 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2004 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2004 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1997 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1527 is 1421
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2026
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1421 in location 2028
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2028 is 1421
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2028 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 1486
9999 mem: location 1423 is 1356
9999 mem: location 2028 is 1421
9999 run: address to copy is 1422
9999 run: its type is address
9999 mem: location 1422 is 1486
9999 mem: storing 1486 in location 2029
 104 run: reply result:address:duplex-list
9999 mem: location 2029 is 1486
9999 run: result 0 is 1486
9999 mem: storing 1486 in location 1527
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1528 is 1356
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2057
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1356 in location 2059
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2059 is 1356
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2059 is 1356
9999 mem: location 1356 is 99
9999 mem: location 1357 is 1421
9999 mem: location 1358 is 1291
9999 mem: location 2059 is 1356
9999 run: address to copy is 1357
9999 run: its type is address
9999 mem: location 1357 is 1421
9999 mem: storing 1421 in location 2060
 104 run: reply result:address:duplex-list
9999 mem: location 2060 is 1421
9999 run: result 0 is 1421
9999 mem: storing 1421 in location 1528
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1530 is 3
9999 mem: storing 4 in location 1530
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 1486
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1529 is 1
9999 mem: location 1525 is 5
9999 mem: storing 0 in location 1534
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1534 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 1
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1535
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1535 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1530 is 4
9999 mem: location 1532 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1536
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1536 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1527 is 1486
9999 mem: location 1486 is 101
9999 mem: location 1487 is 0
9999 mem: location 1488 is 1421
9999 mem: location 1527 is 1486
9999 run: address to copy is 1486
9999 run: its type is number
9999 mem: location 1486 is 101
9999 mem: storing 101 in location 1537
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 101
9999 mem: storing 0 in location 1538
 103 run: break-unless newline?:boolean, 
9999 mem: location 1538 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1530 is 4
9999 mem: location 1526 is 4
9999 mem: storing 1 in location 1540
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1540 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1522 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2088
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2090
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 2091
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2092
9999 mem: storing 1 in location 2093
 104 run: break-if color-found?:boolean, 
9999 mem: location 2093 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2094
9999 mem: storing 0 in location 2095
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2095 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2094
 104 run: break-unless x:address:screen, 
9999 mem: location 2090 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2090 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2096
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2090 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2097
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2090 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2098
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2090 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2099
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2091 is 8617
9999 mem: storing 0 in location 2100
 104 run: break-unless newline?:boolean, 
9999 mem: location 2100 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2096 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2098 is 5
9999 mem: storing 5 in location 2103
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2103 is 5
9999 mem: location 2097 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2103
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2090 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2090 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2104
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2091 is 8617
9999 mem: storing 0 in location 2105
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2105 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2104 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 100
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2103 is 9
9999 mem: location 2104 is 1036
9999 mem: location 2103 is 9
9999 mem: storing 1055 in location 2107
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2107 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2107 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2108
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2107 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2107 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2109
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2091 is 8617
9999 mem: location 2108 is 1055
9999 mem: storing 8617 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2092 is 245
9999 mem: location 2109 is 1056
9999 mem: storing 245 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2098 is 5
9999 mem: storing 4 in location 2110
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2097 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2110 is 4
9999 mem: storing 1 in location 2111
 104 run: break-if at-right?:boolean, 
9999 mem: location 2111 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2090 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 1524 is 0
9999 mem: storing 0 in location 1530
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1529 is 1
9999 mem: storing 2 in location 1529
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1522 is 1031
9999 mem: location 1529 is 2
9999 mem: location 1530 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2119
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2121
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2122
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2123
 104 run: break-unless x:address:screen, 
9999 mem: location 2121 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2121 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2121 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2124
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2122 is 2
9999 mem: location 2124 is 1033
9999 mem: storing 2 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2121 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2121 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2125
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2123 is 0
9999 mem: location 2125 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2121 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 1486
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1529 is 2
9999 mem: location 1525 is 5
9999 mem: storing 0 in location 1534
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1534 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 2
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1535
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1535 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1527 is 1486
9999 mem: location 1486 is 101
9999 mem: location 1487 is 0
9999 mem: location 1488 is 1421
9999 mem: location 1527 is 1486
9999 run: address to copy is 1486
9999 run: its type is number
9999 mem: location 1486 is 101
9999 mem: storing 101 in location 1537
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1537 is 101
9999 mem: storing 0 in location 1538
 103 run: break-unless newline?:boolean, 
9999 mem: location 1538 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1530 is 0
9999 mem: location 1526 is 4
9999 mem: storing 0 in location 1540
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1540 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1522 is 1031
9999 mem: location 1537 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2150
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2152
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2153
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2154
9999 mem: storing 0 in location 2155
 104 run: break-if color-found?:boolean, 
9999 mem: location 2155 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2154
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2156
9999 mem: storing 0 in location 2157
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2157 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2156
 104 run: break-unless x:address:screen, 
9999 mem: location 2152 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2152 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2152 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2158
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2152 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2152 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2159
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2152 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2152 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2160
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2152 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2152 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2161
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2153 is 101
9999 mem: storing 0 in location 2162
 104 run: break-unless newline?:boolean, 
9999 mem: location 2162 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2158 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2160 is 5
9999 mem: storing 10 in location 2165
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2165 is 10
9999 mem: location 2159 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2165
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2152 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2152 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2166
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2153 is 101
9999 mem: storing 0 in location 2167
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2167 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2166 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 100
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2165 is 10
9999 mem: location 2166 is 1036
9999 mem: location 2165 is 10
9999 mem: storing 1057 in location 2169
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2169 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2169 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2170
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2169 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2169 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2171
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2153 is 101
9999 mem: location 2170 is 1057
9999 mem: storing 101 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2154 is 7
9999 mem: location 2171 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2160 is 5
9999 mem: storing 4 in location 2172
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2159 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2172 is 4
9999 mem: storing 0 in location 2173
 104 run: break-if at-right?:boolean, 
9999 mem: location 2173 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2159 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2159 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2152 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1527 is 1486
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2181
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1486 in location 2183
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2183 is 1486
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2183 is 1486
9999 mem: location 1486 is 101
9999 mem: location 1487 is 0
9999 mem: location 1488 is 1421
9999 mem: location 2183 is 1486
9999 run: address to copy is 1487
9999 run: its type is address
9999 mem: location 1487 is 0
9999 mem: storing 0 in location 2184
 104 run: reply result:address:duplex-list
9999 mem: location 2184 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1527
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1528 is 1421
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2212
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1421 in location 2214
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2214 is 1421
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2214 is 1421
9999 mem: location 1421 is 100
9999 mem: location 1422 is 1486
9999 mem: location 1423 is 1356
9999 mem: location 2214 is 1421
9999 run: address to copy is 1422
9999 run: its type is address
9999 mem: location 1422 is 1486
9999 mem: storing 1486 in location 2215
 104 run: reply result:address:duplex-list
9999 mem: location 2215 is 1486
9999 run: result 0 is 1486
9999 mem: storing 1486 in location 1528
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1530 is 0
9999 mem: storing 1 in location 1530
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1527 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 2
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1535
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1530 is 1
9999 mem: location 1532 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1541
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1535 is 0
9999 mem: location 1541 is 0
9999 mem: storing 0 in location 1542
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1529 is 2
9999 mem: location 1531 is 1159
9999 mem: location 1159 is 1
9999 mem: storing 0 in location 1543
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1542 is 0
9999 mem: location 1543 is 0
9999 mem: storing 0 in location 1544
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1544 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1522 is 1031
9999 mem: location 1530 is 1
9999 mem: location 1526 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2243
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2245
 104 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 2246
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2247
 104 run: column:number <- copy left:number
9999 mem: location 2246 is 1
9999 mem: storing 1 in location 2248
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2248 is 1
9999 mem: location 2247 is 4
9999 mem: storing 0 in location 2249
 104 run: break-if done?:boolean, 
9999 mem: location 2249 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2245 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2284
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2286
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2287
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2288
9999 mem: storing 0 in location 2289
 105 run: break-if color-found?:boolean, 
9999 mem: location 2289 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2288
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2290
9999 mem: storing 0 in location 2291
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2291 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2290
 105 run: break-unless x:address:screen, 
9999 mem: location 2286 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2286 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2286 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2292
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2286 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2286 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2293
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2286 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2286 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2294
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2286 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2286 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2295
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2287 is 32
9999 mem: storing 0 in location 2296
 105 run: break-unless newline?:boolean, 
9999 mem: location 2296 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2292 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2294 is 5
9999 mem: storing 10 in location 2299
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2299 is 10
9999 mem: location 2293 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2299
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2286 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2286 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2300
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2287 is 32
9999 mem: storing 0 in location 2301
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2301 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2300 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 100
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2299 is 11
9999 mem: location 2300 is 1036
9999 mem: location 2299 is 11
9999 mem: storing 1059 in location 2303
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2303 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2303 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2304
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2303 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2303 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2305
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2287 is 32
9999 mem: location 2304 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2288 is 7
9999 mem: location 2305 is 1060
9999 mem: storing 7 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2294 is 5
9999 mem: storing 4 in location 2306
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2293 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2306 is 4
9999 mem: storing 0 in location 2307
 105 run: break-if at-right?:boolean, 
9999 mem: location 2307 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2293 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2293 is 1034
9999 mem: storing 2 in location 1034
schedule: print-character/clear-line-delimited/render/new-editor/run1001/editor-initially-wraps-barely-long-lines
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2286 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2248 is 1
9999 mem: storing 2 in location 2248
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2248 is 2
9999 mem: location 2247 is 4
9999 mem: storing 0 in location 2249
 104 run: break-if done?:boolean, 
9999 mem: location 2249 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2245 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2315
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2317
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2318
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2319
9999 mem: storing 0 in location 2320
 105 run: break-if color-found?:boolean, 
9999 mem: location 2320 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2319
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2321
9999 mem: storing 0 in location 2322
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2322 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2321
 105 run: break-unless x:address:screen, 
9999 mem: location 2317 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2317 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2317 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2323
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2317 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2317 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2324
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2317 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2317 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2325
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2317 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2317 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2326
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2318 is 32
9999 mem: storing 0 in location 2327
 105 run: break-unless newline?:boolean, 
9999 mem: location 2327 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2323 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2325 is 5
9999 mem: storing 10 in location 2330
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2330 is 10
9999 mem: location 2324 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2330
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2317 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2317 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2331
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2318 is 32
9999 mem: storing 0 in location 2332
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2332 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2331 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 100
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2330 is 12
9999 mem: location 2331 is 1036
9999 mem: location 2330 is 12
9999 mem: storing 1061 in location 2334
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2334 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2334 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2335
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2334 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2334 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2336
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2318 is 32
9999 mem: location 2335 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2319 is 7
9999 mem: location 2336 is 1062
9999 mem: storing 7 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2325 is 5
9999 mem: storing 4 in location 2337
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2324 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2337 is 4
9999 mem: storing 0 in location 2338
 105 run: break-if at-right?:boolean, 
9999 mem: location 2338 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2324 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2324 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2317 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2248 is 2
9999 mem: storing 3 in location 2248
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2248 is 3
9999 mem: location 2247 is 4
9999 mem: storing 0 in location 2249
 104 run: break-if done?:boolean, 
9999 mem: location 2249 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2245 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2346
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2348
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2349
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2350
9999 mem: storing 0 in location 2351
 105 run: break-if color-found?:boolean, 
9999 mem: location 2351 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2350
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2352
9999 mem: storing 0 in location 2353
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2353 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2352
 105 run: break-unless x:address:screen, 
9999 mem: location 2348 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2348 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2348 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2354
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2348 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2348 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2355
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2348 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2348 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2356
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2348 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2348 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2357
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2349 is 32
9999 mem: storing 0 in location 2358
 105 run: break-unless newline?:boolean, 
9999 mem: location 2358 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2354 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2356 is 5
9999 mem: storing 10 in location 2361
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2361 is 10
9999 mem: location 2355 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2361
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2348 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2348 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2362
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2349 is 32
9999 mem: storing 0 in location 2363
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2363 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2362 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 100
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2361 is 13
9999 mem: location 2362 is 1036
9999 mem: location 2361 is 13
9999 mem: storing 1063 in location 2365
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2365 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2365 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2366
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2365 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2365 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2367
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2349 is 32
9999 mem: location 2366 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2350 is 7
9999 mem: location 2367 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2356 is 5
9999 mem: storing 4 in location 2368
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2355 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2368 is 4
9999 mem: storing 0 in location 2369
 105 run: break-if at-right?:boolean, 
9999 mem: location 2369 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2355 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2355 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2348 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2248 is 3
9999 mem: storing 4 in location 2248
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2248 is 4
9999 mem: location 2247 is 4
9999 mem: storing 0 in location 2249
 104 run: break-if done?:boolean, 
9999 mem: location 2249 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2245 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2377
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2379
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2380
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2381
9999 mem: storing 0 in location 2382
 105 run: break-if color-found?:boolean, 
9999 mem: location 2382 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2381
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2383
9999 mem: storing 0 in location 2384
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2384 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2383
 105 run: break-unless x:address:screen, 
9999 mem: location 2379 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2379 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2379 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2385
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2379 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2379 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2386
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2379 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2379 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2387
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2379 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2379 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2388
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2380 is 32
9999 mem: storing 0 in location 2389
 105 run: break-unless newline?:boolean, 
9999 mem: location 2389 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2385 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2387 is 5
9999 mem: storing 10 in location 2392
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2392 is 10
9999 mem: location 2386 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 14 in location 2392
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2379 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2379 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2393
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2380 is 32
9999 mem: storing 0 in location 2394
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2394 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2393 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 100
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2392 is 14
9999 mem: location 2393 is 1036
9999 mem: location 2392 is 14
9999 mem: storing 1065 in location 2396
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2396 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2396 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 2397
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2396 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2396 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 2398
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2380 is 32
9999 mem: location 2397 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2381 is 7
9999 mem: location 2398 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2387 is 5
9999 mem: storing 4 in location 2399
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2386 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2399 is 4
9999 mem: storing 1 in location 2400
 105 run: break-if at-right?:boolean, 
9999 mem: location 2400 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2379 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2248 is 4
9999 mem: storing 5 in location 2248
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2248 is 5
9999 mem: location 2247 is 4
9999 mem: storing 1 in location 2249
 104 run: break-if done?:boolean, 
9999 mem: location 2249 is 1
9999 run: jumping to instruction 11
 103 run: reply editor:address:editor-data/same-as-ingredient:1, row:number, screen:address/same-as-ingredient:0
9999 mem: location 1523 is 1155
9999 mem: location 1529 is 2
9999 mem: location 1522 is 1031
9999 run: result 0 is 1155
9999 run: result 1 is 2
9999 run: result 2 is 1031
9999 mem: storing 1155 in location 1130
9999 mem: storing 1031 in location 1127
 102 run: reply result:address:editor-data, screen:address/same-as-ingredient:0
9999 mem: location 1130 is 1155
9999 mem: location 1127 is 1031
 100 run: screen-should-contain [
    .     .
    .abcdâ†©.
    .e    .
    .     .
  ]
 100 run: screen-should-contain-in-color 245:literal/grey, [
    .     .
    .    â†©.
    .     .
    .     .
  ]
