 102 run: assume-console [
    left-click 1, 4
    press backspace
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"4": "literal"}
9992 load: after rewriting: left-click 1, 4
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"backspace": <>}
9992 load: after rewriting: press backspace
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1316
9999 mem: location 2 is 1115
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1318
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1320
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1316 in location 1321
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1322
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1322 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1322 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1323
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1322 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1322 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1324
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1323 is 1
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1232
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1233
 105 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 105 run: *row <- copy new-row
9999 mem: location 1232 is 1
9999 mem: location 1234 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 105 run: *column <- copy new-column
9999 mem: location 1233 is 0
9999 mem: location 1235 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1321 is 1316
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1316 in location 1281
 105 run: jump-unless x, 
9999 mem: location 1281 is 1316
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1281 is 1316
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1307
9999 mem: location 1281 is 1316
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1282
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1281 is 1316
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1307
9999 mem: location 1281 is 1316
9998 run: address to copy is 1317
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1317 is 1307
9999 mem: storing 1307 in location 1283
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1307
9999 mem: storing 2 in location 1284
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 0
9999 mem: location 1284 is 2
9999 mem: storing 0 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1283 is 1307
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 0
9998 run: address to copy is 1308
9998 run: its type is event
9999 mem: location 1308 is 2
9999 mem: location 1309 is 65513
9999 mem: location 1310 is 1
9999 mem: location 1311 is 4
9999 mem: storing 2 in location 1287
9999 mem: storing 65513 in location 1288
9999 mem: storing 1 in location 1289
9999 mem: storing 4 in location 1290
 105 run: *idx <- add *idx, 1
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 0
9999 mem: location 1282 is 1316
9999 mem: storing 1 in location 1316
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1287 is 2
9999 mem: location 1288 is 65513
9999 mem: location 1289 is 1
9999 mem: location 1290 is 4
9999 mem: location 1281 is 1316
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 4]
9998 run: result 1 is 1316
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1325
9999 mem: storing 65513 in location 1326
9999 mem: storing 1 in location 1327
9999 mem: storing 4 in location 1328
9999 mem: storing 1316 in location 1321
9999 mem: storing 1 in location 1329
9999 mem: storing 0 in location 1330
 104 run: jump-unless found?, 
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1330 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1325 is 2
9999 mem: location 1326 is 65513
9999 mem: location 1327 is 1
9999 mem: location 1328 is 4
9999 mem: storing 1326 in location 1331
 104 run: jump-unless t, 
9999 mem: location 1331 is 1326
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1320 is 1009
9999 mem: location 1322 is 1115
9999 mem: location 1331 is 1326
9999 mem: location 1326 is 65513
9999 mem: location 1327 is 1
9999 mem: location 1328 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1333
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1335
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1336
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1337
9999 mem: storing 1 in location 1338
9999 mem: storing 4 in location 1339
 105 run: jump-if editor, 1:offset
9999 mem: location 1336 is 1115
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 1
9999 mem: location 1339 is 4
9998 run: address to copy is 1338
9998 run: its type is number
9999 mem: location 1338 is 1
9999 mem: storing 1 in location 1340
 105 run: jump-if click-row, 1:offset
9999 mem: location 1340 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 1
9999 mem: location 1339 is 4
9998 run: address to copy is 1339
9998 run: its type is number
9999 mem: location 1339 is 4
9999 mem: storing 4 in location 1341
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1342
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1341 is 4
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1343
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1343 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 7
9999 mem: storing 7 in location 1344
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1341 is 4
9999 mem: location 1344 is 7
9999 mem: storing 0 in location 1345
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1346
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1347
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1159
9999 mem: storing 1159 in location 1348
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1335 is 1009
9999 mem: location 1336 is 1115
9999 mem: location 1340 is 1
9999 mem: location 1341 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1205
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 1 in location 1206
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 4 in location 1207
 106 run: jump-if editor, 1:offset
9999 mem: location 1205 is 1115
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1208
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 7
9999 mem: storing 7 in location 1209
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1204 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 107 run: jump-unless sc, 
9999 mem: location 1167 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 107 run: reply height
9999 mem: location 1168 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1210
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1159
9999 mem: storing 1159 in location 1211
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1211 is 1159
9999 mem: storing 1159 in location 1212
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1159 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1159
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1159 is 167
9999 mem: location 1160 is 1162
9999 mem: location 1161 is 0
9999 mem: location 1167 is 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1160 is 1162
9999 mem: storing 1162 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1162
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1162
9999 mem: storing 1162 in location 1211
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1213
 106 run: column:number <- copy left
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1214
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1215
 106 run: *cursor-row <- copy target-row
9999 mem: location 1206 is 1
9999 mem: location 1215 is 1121
9999 mem: storing 1 in location 1121
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1216
 106 run: *cursor-column <- copy target-column
9999 mem: location 1207 is 4
9999 mem: location 1216 is 1122
9999 mem: storing 4 in location 1122
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1159
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1217
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1162
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 0
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1159
9999 mem: location 1211 is 1162
9998 run: address to copy is 1162
9998 run: its type is character
9999 mem: location 1162 is 97
9999 mem: storing 97 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 0
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1162 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1159
9999 mem: location 1167 is 1162
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1169
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: storing 1169 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1159 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1159
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1159 is 167
9999 mem: location 1160 is 1162
9999 mem: location 1161 is 0
9999 mem: location 1167 is 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1160 is 1162
9999 mem: storing 1162 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1162
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1162
9999 mem: storing 1162 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 0
9999 mem: storing 1 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1169
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 1
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1211 is 1169
9998 run: address to copy is 1169
9998 run: its type is character
9999 mem: location 1169 is 98
9999 mem: storing 98 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 98
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 1
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1169 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1167 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1170
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1172
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1162 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1159
9999 mem: location 1167 is 1162
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1169
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: storing 1169 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 1
9999 mem: storing 2 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1172
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 2
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1211 is 1172
9998 run: address to copy is 1172
9998 run: its type is character
9999 mem: location 1172 is 99
9999 mem: storing 99 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 99
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 2
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 1175
9999 mem: storing 1175 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1175
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: storing 1175 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1169 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1167 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1170
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1172
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 2
9999 mem: storing 3 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1175
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 3
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1211 is 1175
9998 run: address to copy is 1175
9998 run: its type is character
9999 mem: location 1175 is 32
9999 mem: storing 32 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 3
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1175 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1167 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1176 is 1178
9999 mem: storing 1178 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1178
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 1175
9999 mem: storing 1175 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1175
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: storing 1175 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 3
9999 mem: storing 4 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1178
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 4
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 1 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1212 is 1175
9999 mem: location 1217 is 1118
9999 mem: storing 1175 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1211 is 1178
9998 run: address to copy is 1178
9998 run: its type is character
9999 mem: location 1178 is 100
9999 mem: storing 100 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 4
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1178 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1178
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1167 is 1178
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1181
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1175 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1167 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1176 is 1178
9999 mem: storing 1178 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1178
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 4
9999 mem: storing 5 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1181
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 5
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1211 is 1181
9998 run: address to copy is 1181
9998 run: its type is character
9999 mem: location 1181 is 101
9999 mem: storing 101 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 101
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 5
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1181 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1167 is 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1184
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1178 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1178
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1167 is 1178
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1181
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 5
9999 mem: storing 6 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1184
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 6
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1211 is 1184
9998 run: address to copy is 1184
9998 run: its type is character
9999 mem: location 1184 is 102
9999 mem: storing 102 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 102
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 6
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1184 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1167 is 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1187
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1181 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1167 is 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1184
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 6
9999 mem: storing 7 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1187
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 1
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1214 is 7
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1220
 106 run: jump-unless at-cursor?, 
9999 mem: location 1220 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1211 is 1187
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 32
9999 mem: storing 32 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 7
9999 mem: location 1209 is 7
9999 mem: storing 1 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 1
9998 run: jump-unless fell through
 106 run: column <- copy left
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1214
 106 run: row <- add row, 1
9999 mem: location 1213 is 1
9999 mem: storing 2 in location 1213
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1187
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1211 is 1187
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 32
9999 mem: storing 32 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 0
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1187 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1187
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1167 is 1187
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1190
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1184 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1167 is 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1187
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 0
9999 mem: storing 1 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1211 is 1190
9998 run: address to copy is 1190
9998 run: its type is character
9999 mem: location 1190 is 103
9999 mem: storing 103 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 103
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 1
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1190 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1167 is 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1193
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1187 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1187
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1167 is 1187
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1190
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 1
9999 mem: storing 2 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1193
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 104
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1211 is 1193
9998 run: address to copy is 1193
9998 run: its type is character
9999 mem: location 1193 is 104
9999 mem: storing 104 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 104
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 2
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1193 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 104
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1167 is 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1196
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1190 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1167 is 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1193
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 2
9999 mem: storing 3 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1196
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 105
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1193
9999 mem: location 1211 is 1196
9998 run: address to copy is 1196
9998 run: its type is character
9999 mem: location 1196 is 105
9999 mem: storing 105 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 105
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 3
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1196 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 105
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1193
9999 mem: location 1167 is 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1199
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1193 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 104
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1167 is 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1196
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 3
9999 mem: storing 4 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1213 is 2
9999 mem: location 1210 is 5
9999 mem: storing 0 in location 1218
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 106 run: jump-if off-screen?, 
9999 mem: location 1218 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1211 is 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 106
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1196
9999 mem: location 1211 is 1199
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 106
9999 mem: storing 106 in location 1221
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1221 is 106
9999 mem: storing 0 in location 1222
 106 run: jump-unless newline?, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1214 is 4
9999 mem: location 1209 is 7
9999 mem: storing 0 in location 1224
 106 run: jump-unless at-right?, 
9999 mem: location 1224 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1211 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1199 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 106
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1196
9999 mem: location 1167 is 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1211
 106 run: prev <- next_2 prev
9999 mem: location 1212 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1196 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 105
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1193
9999 mem: location 1167 is 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1199
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1212
 106 run: column <- add column, 1
9999 mem: location 1214 is 4
9999 mem: storing 5 in location 1214
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1219
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1214 is 5
9999 mem: location 1216 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 0 in location 1225
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1219 is 0
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1226
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1227
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1228
 106 run: jump-unless before-cursor?, 
9999 mem: location 1228 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:editor-data
9999 mem: location 1205 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1336
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1349
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1350
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1351
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1336 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1336 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1159
9999 mem: storing 1159 in location 1352
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 44
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1236 in location 1354
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 mem: location 1348 is 1159
9999 mem: location 1350 is 1
9999 mem: location 1351 is 4
9999 mem: location 1352 is 1159
9999 mem: location 1349 is 0
9999 mem: location 1354 is 1236
9999 mem: location 1354 is 1236
9999 mem: storing 1 in location 1236
9999 mem: storing 1 in location 1237
9999 mem: storing 0 in location 1238
9999 mem: storing 1159 in location 1239
9999 mem: storing 1 in location 1240
9999 mem: storing 4 in location 1241
9999 mem: storing 1159 in location 1242
9999 mem: storing 0 in location 1243
 105 run: editor <- add-operation editor, op
9999 mem: location 1336 is 1115
9999 mem: location 1354 is 1236
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1275
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1236 in location 1276
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1275 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1275 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1277
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1276 is 1236
9999 mem: location 1277 is 1124
9999 mem: location 1124 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1236 in location 1231
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 0 in location 1232
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1361
9999 mem: storing 1361 in location 1233
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1233 is 1361
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: location 1233 is 1361
9998 run: address to copy is 1361
9999 mem: storing 1361 in location 1234
 107 run: *val <- copy x
9999 mem: location 1231 is 1236
9999 mem: location 1234 is 1361
9999 mem: storing 1236 in location 1361
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1233 is 1361
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1361 is 1236
9999 mem: location 1362 is 0
9999 mem: location 1233 is 1361
9999 type: type deduced to be address$
9998 run: address to copy is 1362
9999 mem: storing 1362 in location 1235
 107 run: *next <- copy in
9999 mem: location 1232 is 0
9999 mem: location 1235 is 1362
9999 mem: storing 0 in location 1362
 107 run: reply result
9999 mem: location 1233 is 1361
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1361
9999 mem: location 1277 is 1124
9999 mem: storing 1361 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1275 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1275 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1278
 106 run: *redo <- copy 0
9999 mem: location 1278 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1275 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1336
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1322 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1322 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1323
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1322 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1322 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1324
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1323 is 1
9999 mem: location 1324 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1232
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 4 in location 1233
 105 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 105 run: *row <- copy new-row
9999 mem: location 1232 is 1
9999 mem: location 1234 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 105 run: *column <- copy new-column
9999 mem: location 1233 is 4
9999 mem: location 1235 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1321 is 1316
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1316 in location 1281
 105 run: jump-unless x, 
9999 mem: location 1281 is 1316
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1281 is 1316
9999 mem: location 1316 is 1
9999 mem: location 1317 is 1307
9999 mem: location 1281 is 1316
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1282
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1281 is 1316
9999 mem: location 1316 is 1
9999 mem: location 1317 is 1307
9999 mem: location 1281 is 1316
9998 run: address to copy is 1317
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1317 is 1307
9999 mem: storing 1307 in location 1283
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1307
9999 mem: storing 2 in location 1284
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 1
9999 mem: location 1284 is 2
9999 mem: storing 0 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1283 is 1307
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 1
9998 run: address to copy is 1312
9998 run: its type is event
9999 mem: location 1312 is 0
9999 mem: location 1313 is 8
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1287
9999 mem: storing 8 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 105 run: *idx <- add *idx, 1
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 1
9999 mem: location 1282 is 1316
9999 mem: storing 2 in location 1316
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1287 is 0
9999 mem: location 1288 is 8
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1281 is 1316
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 8, 0, 0]
9998 run: result 1 is 1316
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1325
9999 mem: storing 8 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 1316 in location 1321
9999 mem: storing 1 in location 1329
9999 mem: storing 0 in location 1330
 104 run: jump-unless found?, 
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1330 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1325 is 0
9999 mem: location 1326 is 8
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 mem: storing 0 in location 1331
 104 run: jump-unless t, 
9999 mem: location 1331 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1320 is 1009
9999 mem: location 1322 is 1115
9999 mem: location 1325 is 0
9999 mem: location 1326 is 8
9999 mem: location 1327 is 0
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1363
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1365
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1366
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1367
9999 mem: storing 8 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1371
 105 run: jump-if editor, 1:offset
9999 mem: location 1366 is 1115
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1365 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 106 run: jump-unless sc, 
9999 mem: location 1167 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1168
 106 run: reply width
9999 mem: location 1168 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1372
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1365 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 106 run: jump-unless sc, 
9999 mem: location 1167 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 106 run: reply height
9999 mem: location 1168 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1373
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1374
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 7
9999 mem: storing 7 in location 1375
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1376
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1377
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1378
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1377 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1379
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1378 is 1122
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 1380
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1367 is 0
9999 mem: location 1368 is 8
9999 mem: location 1369 is 0
9999 mem: location 1370 is 0
9999 mem: storing 1368 in location 1381
 105 run: jump-unless c, 
9999 mem: location 1381 is 1368
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1382
 105 run: jump-unless redo?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1393
 105 run: jump-unless undo?, 
9999 mem: location 1393 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1398
 105 run: jump-unless page-up?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1414
 105 run: jump-unless page-down?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1415
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1420
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1421
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1421 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 0 in location 1422
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1422 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1381 is 1368
9999 mem: location 1368 is 8
9999 mem: storing 1 in location 1423
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 105 run: top-before:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1159
9999 mem: storing 1159 in location 1416
 105 run: editor, screen, go-render?:boolean, backspaced-cell:address:duplex-list:character <- delete-before-cursor editor, screen
9999 mem: location 1366 is 1115
9999 mem: location 1365 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: new alloc: 1449
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1451
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1452
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1451 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1451 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1453
 106 run: prev:address:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1453 is 1118
9999 mem: location 1118 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1175 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1167 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1167 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1172
9999 mem: storing 1172 in location 1168
 107 run: reply result
9999 mem: location 1168 is 1172
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1454
 106 run: go-render?, backspaced-cell <- copy 0/no-more-render, 0/nothing-deleted
9999 mem: storing 0 in location 1455
9999 mem: storing 0 in location 1456
 106 run: jump-if prev, 1:offset
9999 mem: location 1454 is 1172
9998 run: jumping to instruction 8
 106 run: trace 10, [app], [delete-before-cursor]
  10 app: delete-before-cursor 
 106 run: original-row:number <- get *editor, cursor-row:offset
9999 mem: location 1451 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1451 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1457
 106 run: editor, scroll?:boolean <- move-cursor-coordinates-left editor
9999 mem: location 1451 is 1115
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: new alloc: 1470
 107 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1472
 107 run: before-cursor:address:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1472 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1472 is 1115
9998 run: address to copy is 1118
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1118 is 1175
9999 mem: storing 1175 in location 1473
 107 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1472 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1472 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1474
 107 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1472 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1472 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1475
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1472 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1175
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1472 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1476
 107 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1475 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1476 is 0
9999 mem: storing 0 in location 1477
 107 run: jump-if at-left-margin?, 
9999 mem: location 1477 is 0
9998 run: jump-if fell through
 107 run: trace 10, [app], [decrementing cursor column]
  10 app: decrementing cursor column 
 107 run: *cursor-column <- subtract *cursor-column, 1
9999 mem: location 1475 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1475 is 1122
9999 mem: storing 3 in location 1122
 107 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1478
 107 run: reply editor:address:editor-data, go-render?:boolean
9999 mem: location 1472 is 1115
9999 mem: location 1478 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1115
9998 run: result 1 is 0
9999 mem: storing 1115 in location 1451
9999 mem: storing 0 in location 1458
 106 run: backspaced-cell:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1453 is 1118
9999 mem: location 1118 is 1175
9999 mem: storing 1175 in location 1456
 106 run: remove_2 *before-cursor
9999 mem: location 1453 is 1118
9999 mem: location 1118 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1175 in location 1275
 107 run: jump-if in, 1:offset
9999 mem: location 1275 is 1175
9998 run: jumping to instruction 4
 107 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1275 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1275 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1176 is 1178
9999 mem: storing 1178 in location 1276
 107 run: prev-node:address:duplex-list:_elem <- get *in, prev:offset
9999 mem: location 1275 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1275 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1172
9999 mem: storing 1172 in location 1277
 107 run: x:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1275 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 1178
9999 mem: location 1177 is 1172
9999 mem: location 1275 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1176
9999 mem: storing 1176 in location 1278
 107 run: *x <- copy 0
9999 mem: location 1278 is 1176
9999 mem: storing 0 in location 1176
 107 run: x <- get-address *in, prev:offset
9999 mem: location 1275 is 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1175 is 32
9999 mem: location 1176 is 0
9999 mem: location 1177 is 1172
9999 mem: location 1275 is 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1278
 107 run: *x <- copy 0
9999 mem: location 1278 is 1177
9999 mem: storing 0 in location 1177
 107 run: jump-unless next-node, 
9999 mem: location 1276 is 1178
9998 run: jump-unless fell through
 107 run: x <- get-address *next-node, prev:offset
9999 mem: location 1276 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1175
9999 mem: location 1276 is 1178
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9999 mem: storing 1180 in location 1278
 107 run: *x <- copy prev-node
9999 mem: location 1277 is 1172
9999 mem: location 1278 is 1180
9999 mem: storing 1172 in location 1180
 107 run: jump-unless prev-node, 
9999 mem: location 1277 is 1172
9998 run: jump-unless fell through
 107 run: x <- get-address *prev-node, next:offset
9999 mem: location 1277 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1175
9999 mem: location 1174 is 1169
9999 mem: location 1277 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9999 mem: storing 1173 in location 1278
 107 run: *x <- copy next-node
9999 mem: location 1276 is 1178
9999 mem: location 1278 is 1173
9999 mem: storing 1178 in location 1173
 107 run: reply prev-node
9999 mem: location 1277 is 1172
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- copy prev
9999 mem: location 1454 is 1172
9999 mem: location 1453 is 1118
9999 mem: storing 1172 in location 1118
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-unless scroll?, 1:offset
9999 mem: location 1458 is 0
9998 run: jumping to instruction 17
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1452 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 107 run: jump-unless sc, 
9999 mem: location 1167 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1168
 107 run: reply width
9999 mem: location 1168 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1459
 106 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1451 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1451 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1460
 106 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1451 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1451 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1461
 106 run: same-row?:boolean <- equal cursor-row, original-row
9999 mem: location 1460 is 1
9999 mem: location 1457 is 1
9999 mem: storing 1 in location 1462
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-if same-row?, 1:offset
9999 mem: location 1462 is 1
9998 run: jumping to instruction 24
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1451 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1451 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1463
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1451 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1451 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 7
9999 mem: storing 7 in location 1464
 106 run: curr:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1453 is 1118
9999 mem: location 1118 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1178
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 1178
9999 mem: storing 1178 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1178
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1465
 106 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1452 is 1009
9999 mem: location 1460 is 1
9999 mem: location 1461 is 3
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1232
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1233
 107 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 107 run: *row <- copy new-row
9999 mem: location 1232 is 1
9999 mem: location 1234 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 107 run: *column <- copy new-column
9999 mem: location 1233 is 3
9999 mem: location 1235 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1452
 106 run: curr-column:number <- copy cursor-column
9999 mem: location 1461 is 3
9999 mem: storing 3 in location 1466
 106 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1466 is 3
9999 mem: location 1464 is 7
9999 mem: storing 0 in location 1467
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1467 is 0
9998 run: jumping to instruction 34
 106 run: jump-unless curr, 
9999 mem: location 1465 is 1178
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1465 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1172
9999 mem: location 1465 is 1178
9998 run: address to copy is 1178
9998 run: its type is character
9999 mem: location 1178 is 100
9999 mem: storing 100 in location 1468
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1468 is 100
9999 mem: storing 0 in location 1469
 106 run: jump-if at-newline?, 
9999 mem: location 1469 is 0
9998 run: jump-if fell through
 106 run: screen <- print-character screen, currc
9999 mem: location 1452 is 1009
9999 mem: location 1468 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 100
  90 print-character: 100 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 100
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 100
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 13
9999 mem: storing 1041 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1268 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 100
9999 mem: location 1269 is 1041
9999 mem: storing 100 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1268 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1259 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1452
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1466 is 3
9999 mem: storing 4 in location 1466
 106 run: curr <- next_2 curr
9999 mem: location 1465 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1178 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1178
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1172
9999 mem: location 1167 is 1178
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1181
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1465
 106 run: jump 
9998 run: jumping to instruction 30
 106 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1466 is 4
9999 mem: location 1464 is 7
9999 mem: storing 0 in location 1467
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1467 is 0
9998 run: jumping to instruction 34
 106 run: jump-unless curr, 
9999 mem: location 1465 is 1181
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1465 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1465 is 1181
9998 run: address to copy is 1181
9998 run: its type is character
9999 mem: location 1181 is 101
9999 mem: storing 101 in location 1468
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1468 is 101
9999 mem: storing 0 in location 1469
 106 run: jump-if at-newline?, 
9999 mem: location 1469 is 0
9998 run: jump-if fell through
 106 run: screen <- print-character screen, currc
9999 mem: location 1452 is 1009
9999 mem: location 1468 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 101
  90 print-character: 101 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 101
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 101
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 14
9999 mem: storing 1043 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1043
9999 mem: location 1043 is 100
9999 mem: location 1044 is 7
9999 mem: location 1268 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 101
9999 mem: location 1269 is 1043
9999 mem: storing 101 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1268 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1259 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1452
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1466 is 4
9999 mem: storing 5 in location 1466
 106 run: curr <- next_2 curr
9999 mem: location 1465 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1181 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1167 is 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1184
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1465
 106 run: jump 
9998 run: jumping to instruction 30
 106 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1466 is 5
9999 mem: location 1464 is 7
9999 mem: storing 0 in location 1467
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1467 is 0
9998 run: jumping to instruction 34
 106 run: jump-unless curr, 
9999 mem: location 1465 is 1184
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1465 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1465 is 1184
9998 run: address to copy is 1184
9998 run: its type is character
9999 mem: location 1184 is 102
9999 mem: storing 102 in location 1468
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1468 is 102
9999 mem: storing 0 in location 1469
 106 run: jump-if at-newline?, 
9999 mem: location 1469 is 0
9998 run: jump-if fell through
 106 run: screen <- print-character screen, currc
9999 mem: location 1452 is 1009
9999 mem: location 1468 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 102
  90 print-character: 102 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 102
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 102
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 15
9999 mem: storing 1045 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1045
9999 mem: location 1045 is 101
9999 mem: location 1046 is 7
9999 mem: location 1268 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 102
9999 mem: location 1269 is 1045
9999 mem: storing 102 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1268 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1259 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1452
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1466 is 5
9999 mem: storing 6 in location 1466
 106 run: curr <- next_2 curr
9999 mem: location 1465 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1184 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1167 is 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1187
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1465
 106 run: jump 
9998 run: jumping to instruction 30
 106 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1466 is 6
9999 mem: location 1464 is 7
9999 mem: storing 0 in location 1467
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1467 is 0
9998 run: jumping to instruction 34
 106 run: jump-unless curr, 
9999 mem: location 1465 is 1187
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1465 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1465 is 1187
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 32
9999 mem: storing 32 in location 1468
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1468 is 32
9999 mem: storing 0 in location 1469
 106 run: jump-if at-newline?, 
9999 mem: location 1469 is 0
9998 run: jump-if fell through
 106 run: screen <- print-character screen, currc
9999 mem: location 1452 is 1009
9999 mem: location 1468 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
9990 schedule: print-character/delete-before-cursor/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 16
9999 mem: storing 1047 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1047
9999 mem: location 1047 is 102
9999 mem: location 1048 is 7
9999 mem: location 1268 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1268 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1259 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1452
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1466 is 6
9999 mem: storing 7 in location 1466
 106 run: curr <- next_2 curr
9999 mem: location 1465 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1187 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1187
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1167 is 1187
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1190
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1465
 106 run: jump 
9998 run: jumping to instruction 30
 106 run: at-right?:boolean <- greater-or-equal curr-column, right
9999 mem: location 1466 is 7
9999 mem: location 1464 is 7
9999 mem: storing 1 in location 1467
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1455
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 106 run: reply editor:address:editor-data, screen:address:screen, go-render?:boolean, backspaced-cell:address:duplex-list:character
9999 mem: location 1451 is 1115
9999 mem: location 1452 is 1009
9999 mem: location 1455 is 1
9999 mem: location 1456 is 1175
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9998 run: result 1 is 1009
9998 run: result 2 is 1
9998 run: result 3 is 1175
9999 mem: storing 1115 in location 1366
9999 mem: storing 1009 in location 1365
9999 mem: storing 1 in location 1371
9999 mem: storing 1175 in location 1424
 105 run: jump-unless backspaced-cell, 
9999 mem: location 1424 is 1175
9998 run: jump-unless fell through
 105 run: top-after:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1159
9999 mem: storing 1159 in location 1418
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1366 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1366 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1385
 105 run: jump-unless *undo, 
9999 mem: location 1385 is 1124
9999 mem: location 1124 is 1361
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1385 is 1124
9999 mem: location 1124 is 1361
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1361 in location 1167
 106 run: result <- get *in, value:offset
9999 mem: location 1167 is 1361
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1361 is 1236
9999 mem: location 1362 is 0
9999 mem: location 1167 is 1361
9998 run: address to copy is 1361
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1361 is 1236
9999 mem: storing 1236 in location 1168
 106 run: reply result:_elem
9999 mem: location 1168 is 1236
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1236
9999 mem: storing 1236 in location 1384
 105 run: deletion:address:delete-operation <- maybe-convert *op, delete:variant
9999 mem: location 1384 is 1236
9999 mem: location 1236 is 1
9999 mem: location 1237 is 1
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1159
9999 mem: location 1240 is 1
9999 mem: location 1241 is 4
9999 mem: location 1242 is 1159
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1384 is 1236
9999 mem: storing 0 in location 1386
 105 run: jump-unless deletion, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 337
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1488
9999 mem: storing 1488 in location 1384
 105 run: deleted-until:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1376 is 1118
9999 mem: location 1118 is 1172
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1167
 106 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1178
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 1178
9999 mem: storing 1178 in location 1168
 106 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1178
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1419
 105 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, backspaced-cell/deleted, *before-cursor/delete-from, deleted-until, 1/coalesce-backspace
9999 mem: location 1379 is 1
9999 mem: location 1380 is 4
9999 mem: location 1416 is 1159
9999 mem: location 1377 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1378 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1418 is 1159
9999 mem: location 1424 is 1175
9999 mem: location 1376 is 1118
9999 mem: location 1118 is 1172
9999 mem: location 1419 is 1178
9999 mem: location 1384 is 1488
9999 mem: location 1384 is 1488
9999 mem: storing 2 in location 1488
9999 mem: storing 1 in location 1489
9999 mem: storing 4 in location 1490
9999 mem: storing 1159 in location 1491
9999 mem: storing 1 in location 1492
9999 mem: storing 3 in location 1493
9999 mem: storing 1159 in location 1494
9999 mem: storing 1175 in location 1495
9999 mem: storing 1172 in location 1496
9999 mem: storing 1178 in location 1497
9999 mem: storing 1 in location 1498
 105 run: editor <- add-operation editor, op
9999 mem: location 1366 is 1115
9999 mem: location 1384 is 1488
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1275
 106 run: op:address:operation <- next-ingredient 
9999 mem: storing 1488 in location 1276
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1275 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1361
9999 mem: location 1125 is 0
9999 mem: location 1275 is 1115
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1277
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1276 is 1488
9999 mem: location 1277 is 1124
9999 mem: location 1124 is 1361
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 1488 in location 1231
 107 run: in:address:list:_elem <- next-ingredient 
9999 mem: storing 1361 in location 1232
 107 run: result <- new {(list _elem): type}
9999 mem: new alloc: 1499
9999 mem: storing 1499 in location 1233
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1233 is 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1499 is 0
9999 mem: location 1500 is 0
9999 mem: location 1233 is 1499
9998 run: address to copy is 1499
9999 mem: storing 1499 in location 1234
 107 run: *val <- copy x
9999 mem: location 1231 is 1488
9999 mem: location 1234 is 1499
9999 mem: storing 1488 in location 1499
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1233 is 1499
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1499 is 1488
9999 mem: location 1500 is 0
9999 mem: location 1233 is 1499
9999 type: type deduced to be address$
9998 run: address to copy is 1500
9999 mem: storing 1500 in location 1235
 107 run: *next <- copy in
9999 mem: location 1232 is 1361
9999 mem: location 1235 is 1500
9999 mem: storing 1361 in location 1500
 107 run: reply result
9999 mem: location 1233 is 1499
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1499
9999 mem: location 1277 is 1124
9999 mem: storing 1499 in location 1124
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1275 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1275 is 1115
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1278
 106 run: *redo <- copy 0
9999 mem: location 1278 is 1125
9999 mem: storing 0 in location 1125
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1275 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1115
9999 mem: storing 1115 in location 1366
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1365 is 1009
9999 mem: location 1366 is 1115
9999 mem: location 1371 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1115
9998 run: result 2 is 1
9999 mem: storing 1009 in location 1320
9999 mem: storing 1115 in location 1322
9999 mem: storing 1 in location 1332
 104 run: jump-unless go-render?, 
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1320 is 1009
9999 mem: location 1322 is 1115
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1153
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1154
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1154 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1154 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1155
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1154 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1154 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 7
9999 mem: storing 7 in location 1156
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1153 is 1009
9999 mem: location 1154 is 1115
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1204
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1205
 106 run: jump-if editor, 1:offset
9999 mem: location 1205 is 1115
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1119
9998 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1206
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1204 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 107 run: jump-unless sc, 
9999 mem: location 1167 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 107 run: reply height
9999 mem: location 1168 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1207
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1120
9998 run: its type is number
9999 mem: location 1120 is 7
9999 mem: storing 7 in location 1208
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1116
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1116 is 1159
9999 mem: storing 1159 in location 1209
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1209 is 1159
9999 mem: storing 1159 in location 1210
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1159 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1159
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1159 is 167
9999 mem: location 1160 is 1162
9999 mem: location 1161 is 0
9999 mem: location 1167 is 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1160 is 1162
9999 mem: storing 1162 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1162
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1162
9999 mem: storing 1162 in location 1209
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1211
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1212
 106 run: column:number <- copy left
9999 mem: location 1206 is 0
9999 mem: storing 0 in location 1213
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1214
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1215
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1216
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1204 is 1009
9999 mem: location 1212 is 1
9999 mem: location 1213 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1232
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1233
 107 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 107 run: *row <- copy new-row
9999 mem: location 1232 is 1
9999 mem: location 1234 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 107 run: *column <- copy new-column
9999 mem: location 1233 is 0
9999 mem: location 1235 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1204
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1162
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 0
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1159
9999 mem: location 1209 is 1162
9998 run: address to copy is 1162
9998 run: its type is character
9999 mem: location 1162 is 97
9999 mem: storing 97 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 97
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1501
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 97
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 97
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 97
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 0
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 97
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 97
  90 print-character: 97 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 97
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 97
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 10
9999 mem: storing 1035 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1268 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 97
9999 mem: location 1269 is 1035
9999 mem: storing 97 in location 1035
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1035
9999 mem: location 1035 is 97
9999 mem: location 1036 is 7
9999 mem: location 1268 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1036
9999 mem: storing 7 in location 1036
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1259 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1162 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1159
9999 mem: location 1167 is 1162
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1169
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: storing 1169 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1159 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1159
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1159
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1159 is 167
9999 mem: location 1160 is 1162
9999 mem: location 1161 is 0
9999 mem: location 1167 is 1159
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1160 is 1162
9999 mem: storing 1162 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1162
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1162
9999 mem: storing 1162 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 0
9999 mem: storing 1 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1169
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 1
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1209 is 1169
9998 run: address to copy is 1169
9998 run: its type is character
9999 mem: location 1169 is 98
9999 mem: storing 98 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 98
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 98
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 98
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 1
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 98
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 98
  90 print-character: 98 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 98
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 98
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 11
9999 mem: storing 1037 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1268 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 98
9999 mem: location 1269 is 1037
9999 mem: storing 98 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1268 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1259 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1169 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1167 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1170
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1172
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1162 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1162
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 97
9999 mem: location 1163 is 1169
9999 mem: location 1164 is 1159
9999 mem: location 1167 is 1162
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1163 is 1169
9999 mem: storing 1169 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1169
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: storing 1169 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 1
9999 mem: storing 2 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1172
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 2
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1178
9999 mem: location 1174 is 1169
9999 mem: location 1209 is 1172
9998 run: address to copy is 1172
9998 run: its type is character
9999 mem: location 1172 is 99
9999 mem: storing 99 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 99
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 99
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 99
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 2
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 99
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 99
  90 print-character: 99 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 99
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 99
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 12
9999 mem: storing 1039 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1268 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 99
9999 mem: location 1269 is 1039
9999 mem: storing 99 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1039
9999 mem: location 1039 is 99
9999 mem: location 1040 is 7
9999 mem: location 1268 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1259 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1178
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 1178
9999 mem: storing 1178 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1178
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1169 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1169 is 98
9999 mem: location 1170 is 1172
9999 mem: location 1171 is 1162
9999 mem: location 1167 is 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1170
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1170 is 1172
9999 mem: storing 1172 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1172
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1172
9999 mem: storing 1172 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 2
9999 mem: storing 3 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1178
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 3
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 1 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1210 is 1172
9999 mem: location 1216 is 1118
9999 mem: storing 1172 in location 1118
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1172
9999 mem: location 1209 is 1178
9998 run: address to copy is 1178
9998 run: its type is character
9999 mem: location 1178 is 100
9999 mem: storing 100 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 100
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 100
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/editor-render/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 100
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 3
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 100
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 100
  90 print-character: 100 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 100
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 100
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 13
9999 mem: storing 1041 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1268 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 100
9999 mem: location 1269 is 1041
9999 mem: storing 100 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1041
9999 mem: location 1041 is 100
9999 mem: location 1042 is 7
9999 mem: location 1268 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1259 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1178 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1178
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1172
9999 mem: location 1167 is 1178
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1181
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1172
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1172 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1172
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1172
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1172 is 99
9999 mem: location 1173 is 1178
9999 mem: location 1174 is 1169
9999 mem: location 1167 is 1172
9999 type: type deduced to be character$
9998 run: address to copy is 1173
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1173 is 1178
9999 mem: storing 1178 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1178
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 3
9999 mem: storing 4 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1181
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 4
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1209 is 1181
9998 run: address to copy is 1181
9998 run: its type is character
9999 mem: location 1181 is 101
9999 mem: storing 101 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 101
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 101
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 101
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 4
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 101
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 101
  90 print-character: 101 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 101
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 101
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 14
9999 mem: storing 1043 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1268 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 101
9999 mem: location 1269 is 1043
9999 mem: storing 101 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1043
9999 mem: location 1043 is 101
9999 mem: location 1044 is 7
9999 mem: location 1268 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1259 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1181 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1167 is 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1184
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1178 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1178
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1178
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1178 is 100
9999 mem: location 1179 is 1181
9999 mem: location 1180 is 1172
9999 mem: location 1167 is 1178
9999 type: type deduced to be character$
9998 run: address to copy is 1179
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1179 is 1181
9999 mem: storing 1181 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1181
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 4
9999 mem: storing 5 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1184
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 5
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1209 is 1184
9998 run: address to copy is 1184
9998 run: its type is character
9999 mem: location 1184 is 102
9999 mem: storing 102 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 102
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 102
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 102
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 5
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 102
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 102
  90 print-character: 102 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 102
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 102
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 15
9999 mem: storing 1045 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1268 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 102
9999 mem: location 1269 is 1045
9999 mem: storing 102 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1045
9999 mem: location 1045 is 102
9999 mem: location 1046 is 7
9999 mem: location 1268 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1046
9999 mem: storing 7 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1259 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1184 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1167 is 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1187
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1181 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 101
9999 mem: location 1182 is 1184
9999 mem: location 1183 is 1178
9999 mem: location 1167 is 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1182 is 1184
9999 mem: storing 1184 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1184
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 5
9999 mem: storing 6 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1187
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 6
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1209 is 1187
9998 run: address to copy is 1187
9998 run: its type is character
9999 mem: location 1187 is 32
9999 mem: storing 32 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 32
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 32
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 32
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 6
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 32
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 16
9999 mem: storing 1047 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1268 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1047
9999 mem: storing 32 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1268 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1259 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1187 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1187
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1167 is 1187
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1190
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1184 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1184 is 102
9999 mem: location 1185 is 1187
9999 mem: location 1186 is 1181
9999 mem: location 1167 is 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1185
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1185 is 1187
9999 mem: storing 1187 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1187
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 6
9999 mem: storing 7 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 1
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1213 is 7
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1219
 106 run: jump-unless at-cursor?, 
9999 mem: location 1219 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1209 is 1190
9998 run: address to copy is 1190
9998 run: its type is character
9999 mem: location 1190 is 103
9999 mem: storing 103 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 103
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 103
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 103
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 7
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, 8617/loop-back-to-left, 245/grey
9999 mem: location 1204 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 8617
  90 print-character: 8617 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 8617
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1255 is 10
9999 mem: storing 10 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 10
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 8617
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 17
9999 mem: storing 1049 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1049
9999 mem: location 1049 is 8617
9999 mem: location 1050 is 245
9999 mem: location 1268 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1269
9990 schedule: print-character/render/editor-render/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 8617
9999 mem: location 1269 is 1049
9999 mem: storing 8617 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1049
9999 mem: location 1049 is 8617
9999 mem: location 1050 is 245
9999 mem: location 1268 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1050
9999 mem: storing 245 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1259 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- copy left
9999 mem: location 1206 is 0
9999 mem: storing 0 in location 1213
 106 run: row <- add row, 1
9999 mem: location 1212 is 1
9999 mem: storing 2 in location 1212
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1204 is 1009
9999 mem: location 1212 is 2
9999 mem: location 1213 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1232
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1233
 107 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 107 run: *row <- copy new-row
9999 mem: location 1232 is 2
9999 mem: location 1234 is 1011
9999 mem: storing 2 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 107 run: *column <- copy new-column
9999 mem: location 1233 is 0
9999 mem: location 1235 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1204
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1209 is 1190
9998 run: address to copy is 1190
9998 run: its type is character
9999 mem: location 1190 is 103
9999 mem: storing 103 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 103
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 103
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 103
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 0
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 103
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 103 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 103
  90 print-character: 103 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 103
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 103
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 20
9999 mem: storing 1055 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1268 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 103
9999 mem: location 1269 is 1055
9999 mem: storing 103 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1055
9999 mem: location 1055 is 103
9999 mem: location 1056 is 7
9999 mem: location 1268 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1056
9999 mem: storing 7 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1259 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1190 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1167 is 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1193
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1187 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1187
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1187
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1187 is 32
9999 mem: location 1188 is 1190
9999 mem: location 1189 is 1184
9999 mem: location 1167 is 1187
9999 type: type deduced to be character$
9998 run: address to copy is 1188
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1188 is 1190
9999 mem: storing 1190 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1190
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 0
9999 mem: storing 1 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1193
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 104
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1209 is 1193
9998 run: address to copy is 1193
9998 run: its type is character
9999 mem: location 1193 is 104
9999 mem: storing 104 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 104
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 104
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 104
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 1
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 104
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 104 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 104
  90 print-character: 104 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 104
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 104
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 21
9999 mem: storing 1057 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1057
9999 mem: location 1057 is 103
9999 mem: location 1058 is 7
9999 mem: location 1268 is 1057
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 104
9999 mem: location 1269 is 1057
9999 mem: storing 104 in location 1057
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1057
9999 mem: location 1057 is 104
9999 mem: location 1058 is 7
9999 mem: location 1268 is 1057
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1058
9999 mem: storing 7 in location 1058
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1259 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1193 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 104
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1167 is 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1196
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1190 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 103
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1187
9999 mem: location 1167 is 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1193
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 1
9999 mem: storing 2 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1196
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 105
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1193
9999 mem: location 1209 is 1196
9998 run: address to copy is 1196
9998 run: its type is character
9999 mem: location 1196 is 105
9999 mem: storing 105 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 105
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 105
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 105
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 105
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 2
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 105
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 105 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 105
  90 print-character: 105 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 105
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 105
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 22
9999 mem: storing 1059 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1059
9999 mem: location 1059 is 104
9999 mem: location 1060 is 7
9999 mem: location 1268 is 1059
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 105
9999 mem: location 1269 is 1059
9999 mem: storing 105 in location 1059
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1059
9999 mem: location 1059 is 105
9999 mem: location 1060 is 7
9999 mem: location 1268 is 1059
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1060
9999 mem: storing 7 in location 1060
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1259 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1196 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 105
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1193
9999 mem: location 1167 is 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1199
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1193 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 104
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1190
9999 mem: location 1167 is 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1196
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: storing 1196 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 2
9999 mem: storing 3 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1212 is 2
9999 mem: location 1207 is 5
9999 mem: storing 0 in location 1217
 106 run: jump-if off-screen?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1218
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1218 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1209 is 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 106
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1196
9999 mem: location 1209 is 1199
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 106
9999 mem: storing 106 in location 1220
 106 run: color <- get-color color, c
9999 mem: location 1211 is 7
9999 mem: location 1220 is 106
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1503
 107 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1504
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1503 is 7
9999 mem: storing 1 in location 1505
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1504 is 106
9999 mem: storing 0 in location 1506
 107 run: jump-unless starting-comment?, 
9999 mem: location 1506 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1507
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1507 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1505 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1504 is 106
9999 mem: storing 0 in location 1509
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1503 is 7
9999 mem: storing 0 in location 1510
 107 run: jump-unless color-is-red?, 
9999 mem: location 1510 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1503 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1211
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1220 is 106
9999 mem: storing 0 in location 1221
 106 run: jump-unless newline?, 
9999 mem: location 1221 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1213 is 3
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1223
 106 run: jump-unless at-right?, 
9999 mem: location 1223 is 0
9998 run: jumping to instruction 61
 106 run: print-character screen, c, color
9999 mem: location 1204 is 1009
9999 mem: location 1220 is 106
9999 mem: location 1211 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 106 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 106
  90 print-character: 106 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 106
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 106
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 23
9999 mem: storing 1061 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1061
9999 mem: location 1061 is 105
9999 mem: location 1062 is 7
9999 mem: location 1268 is 1061
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 106
9999 mem: location 1269 is 1061
9999 mem: storing 106 in location 1061
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1061
9999 mem: location 1061 is 106
9999 mem: location 1062 is 7
9999 mem: location 1268 is 1061
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1062
9999 mem: storing 7 in location 1062
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1259 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1209 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1199 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 106
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1196
9999 mem: location 1167 is 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1209
 106 run: prev <- next_2 prev
9999 mem: location 1210 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1196 in location 1167
 107 run: jump-if in, 1:offset
9999 mem: location 1167 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1167 is 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1196 is 105
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1193
9999 mem: location 1167 is 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1197
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1168
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1168 is 1199
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1210
 106 run: column <- add column, 1
9999 mem: location 1213 is 3
9999 mem: storing 4 in location 1213
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1209 is 0
9998 run: jumping to instruction 67
 106 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1205 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1205 is 1115
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1224
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1209 is 0
9999 mem: location 1224 is 1117
9999 mem: storing 0 in location 1117
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1218
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1213 is 4
9999 mem: location 1215 is 1122
9999 mem: location 1122 is 3
9999 mem: storing 0 in location 1225
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1218 is 0
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1226
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1212 is 2
9999 mem: location 1214 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1227
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1228
 106 run: jump-unless before-cursor?, 
9999 mem: location 1228 is 0
9998 run: jumping to instruction 80
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1212 is 2
9999 mem: location 1213 is 4
9999 mem: location 1204 is 1009
9999 mem: location 1205 is 1115
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 4
9999 mem: storing 2 in location 1157
9999 mem: storing 4 in location 1158
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1153 is 1009
9999 mem: location 1158 is 4
9999 mem: location 1156 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1275
 106 run: column:number <- next-ingredient 
9999 mem: storing 4 in location 1276
 106 run: right:number <- next-ingredient 
9999 mem: storing 7 in location 1277
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 4
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 106 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
9990 schedule: print-character/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 24
9999 mem: storing 1063 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1063
9999 mem: location 1063 is 106
9999 mem: location 1064 is 7
9999 mem: location 1268 is 1063
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1063
9999 mem: storing 32 in location 1063
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1063
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1268 is 1063
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1064
9999 mem: storing 7 in location 1064
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1259 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1276 is 4
9999 mem: storing 5 in location 1276
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 5
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 106 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 25
9999 mem: storing 1065 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1268 is 1065
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1065
9999 mem: storing 32 in location 1065
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1065
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1268 is 1065
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1066
9999 mem: storing 7 in location 1066
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1259 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1276 is 5
9999 mem: storing 6 in location 1276
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 6
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 106 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 26
9999 mem: storing 1067 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1268 is 1067
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1067
9999 mem: storing 32 in location 1067
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1067
9999 mem: location 1067 is 32
9999 mem: location 1068 is 7
9999 mem: location 1268 is 1067
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1068
9999 mem: storing 7 in location 1068
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1259 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1276 is 6
9999 mem: storing 7 in location 1276
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 7
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 106 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 106 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1255 is 10
9999 mem: storing 20 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 20
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 27
9999 mem: storing 1069 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1268 is 1069
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1069
9999 mem: storing 32 in location 1069
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1069
9999 mem: location 1069 is 32
9999 mem: location 1070 is 7
9999 mem: location 1268 is 1069
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1070
9999 mem: storing 7 in location 1070
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1259 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- add column, 1
9999 mem: location 1276 is 7
9999 mem: storing 8 in location 1276
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 8
9999 mem: location 1277 is 7
9999 mem: storing 1 in location 1278
 106 run: jump-if done?, 
9999 mem: location 1278 is 1
9998 run: jumping to instruction 10
 106 run: reply 
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1157 is 2
9999 mem: storing 3 in location 1157
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1153 is 1009
9999 mem: location 1157 is 3
9999 mem: location 1155 is 0
9999 mem: location 1156 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1281
 106 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 1282
 106 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1283
 106 run: right:number <- next-ingredient 
9999 mem: storing 7 in location 1284
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1285
9999 mem: storing 1 in location 1286
 106 run: jump-if style-found?, 
9999 mem: location 1286 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 106 run: jump-if color-found?, 
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1287
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 106 run: jump-if bg-color-found?, 
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1289
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1281 is 1009
9999 mem: location 1282 is 3
9999 mem: location 1283 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1232
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1233
 107 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 107 run: *row <- copy new-row
9999 mem: location 1232 is 3
9999 mem: location 1234 is 1011
9999 mem: storing 3 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 107 run: *column <- copy new-column
9999 mem: location 1233 is 0
9999 mem: location 1235 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1281
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 0
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 30
9999 mem: storing 1075 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1075
9999 mem: location 1075 is 9480
9999 mem: location 1076 is 245
9999 mem: location 1268 is 1075
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1075
9999 mem: storing 9480 in location 1075
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1075
9999 mem: location 1075 is 9480
9999 mem: location 1076 is 245
9999 mem: location 1268 is 1075
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1076
9999 mem: storing 245 in location 1076
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1259 is 1012
9999 mem: storing 1 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 0
9999 mem: storing 1 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 1
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 31
9999 mem: storing 1077 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1077
9999 mem: location 1077 is 9480
9999 mem: location 1078 is 245
9999 mem: location 1268 is 1077
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1077
9999 mem: storing 9480 in location 1077
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1077
9999 mem: location 1077 is 9480
9999 mem: location 1078 is 245
9999 mem: location 1268 is 1077
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1078
9999 mem: storing 245 in location 1078
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1259 is 1012
9999 mem: storing 2 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 1
9999 mem: storing 2 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 2
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 32
9999 mem: storing 1079 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1079
9999 mem: location 1079 is 9480
9999 mem: location 1080 is 245
9999 mem: location 1268 is 1079
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1079
9999 mem: storing 9480 in location 1079
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1079
9999 mem: location 1079 is 9480
9999 mem: location 1080 is 245
9999 mem: location 1268 is 1079
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1080
9999 mem: storing 245 in location 1080
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1259 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 2
9999 mem: storing 3 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 3
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 33
9999 mem: storing 1081 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1081
9999 mem: location 1081 is 9480
9999 mem: location 1082 is 245
9999 mem: location 1268 is 1081
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1081
9999 mem: storing 9480 in location 1081
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1081
9999 mem: location 1081 is 9480
9999 mem: location 1082 is 245
9999 mem: location 1268 is 1081
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1082
9999 mem: storing 245 in location 1082
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1259 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 3
9999 mem: storing 4 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 4
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
9990 schedule: print-character/draw-horizontal/editor-render/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 34
9999 mem: storing 1083 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1083
9999 mem: location 1083 is 9480
9999 mem: location 1084 is 245
9999 mem: location 1268 is 1083
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1083
9999 mem: storing 9480 in location 1083
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1083
9999 mem: location 1083 is 9480
9999 mem: location 1084 is 245
9999 mem: location 1268 is 1083
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1084
9999 mem: storing 245 in location 1084
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1259 is 1012
9999 mem: storing 5 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 4
9999 mem: storing 5 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 5
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 35
9999 mem: storing 1085 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1085
9999 mem: location 1085 is 9480
9999 mem: location 1086 is 245
9999 mem: location 1268 is 1085
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1085
9999 mem: storing 9480 in location 1085
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1085
9999 mem: location 1085 is 9480
9999 mem: location 1086 is 245
9999 mem: location 1268 is 1085
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1086
9999 mem: storing 245 in location 1086
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1259 is 1012
9999 mem: storing 6 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 5
9999 mem: storing 6 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 6
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 36
9999 mem: storing 1087 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1087
9999 mem: location 1087 is 9480
9999 mem: location 1088 is 245
9999 mem: location 1268 is 1087
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1087
9999 mem: storing 9480 in location 1087
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1087
9999 mem: location 1087 is 9480
9999 mem: location 1088 is 245
9999 mem: location 1268 is 1087
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1088
9999 mem: storing 245 in location 1088
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1259 is 1012
9999 mem: storing 7 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 6
9999 mem: storing 7 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 7
9999 mem: location 1284 is 7
9999 mem: storing 1 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 106 run: print-character screen, style, color, bg-color
9999 mem: location 1281 is 1009
9999 mem: location 1285 is 9480
9999 mem: location 1287 is 245
9999 mem: location 1289 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 107 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1250
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1251
9999 mem: storing 1 in location 1252
 107 run: jump-if color-found?, 
9999 mem: location 1252 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 1 in location 1254
 107 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1250 is 9480
  90 print-character: 9480 
 107 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 107 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1260
 107 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1255 is 10
9999 mem: storing 30 in location 1263
 107 run: index <- add index, *column
9999 mem: location 1263 is 30
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1263
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 107 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 9480
9999 mem: storing 0 in location 1266
 107 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 37
9999 mem: storing 1089 in location 1268
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1089
9999 mem: location 1089 is 9480
9999 mem: location 1090 is 245
9999 mem: location 1268 is 1089
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1269
 107 run: *cursor-contents <- copy c
9999 mem: location 1250 is 9480
9999 mem: location 1269 is 1089
9999 mem: storing 9480 in location 1089
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1089
9999 mem: location 1089 is 9480
9999 mem: location 1090 is 245
9999 mem: location 1268 is 1089
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1270
 107 run: *cursor-color <- copy color
9999 mem: location 1251 is 245
9999 mem: location 1270 is 1090
9999 mem: storing 245 in location 1090
 107 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 107 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1259 is 1012
9999 mem: storing 8 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1283 is 7
9999 mem: storing 8 in location 1283
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1283 is 8
9999 mem: location 1284 is 7
9999 mem: storing 0 in location 1291
 106 run: jump-unless continue?, 
9999 mem: location 1291 is 0
9998 run: jumping to instruction 27
 106 run: reply 
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1157 is 3
9999 mem: storing 4 in location 1157
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1153 is 1009
9999 mem: location 1157 is 4
9999 mem: location 1155 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 106 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1232
 106 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1233
 106 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1234
 106 run: right:number <- next-ingredient 
9999 mem: storing 7 in location 1235
 106 run: jump-if screen, 
9999 mem: location 1231 is 1009
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1231 is 1009
9999 mem: location 1232 is 4
9999 mem: location 1233 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1294
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1295
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1296
 107 run: jump-unless sc, 
9999 mem: location 1294 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1294 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1294 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1297
 107 run: *row <- copy new-row
9999 mem: location 1295 is 4
9999 mem: location 1297 is 1011
9999 mem: storing 4 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1294 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1294 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1298
 107 run: *column <- copy new-column
9999 mem: location 1296 is 0
9999 mem: location 1298 is 1012
9999 mem: storing 0 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1294 is 1009
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1231
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1231 is 1009
9999 mem: location 1233 is 0
9999 mem: location 1235 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1275
 107 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1276
 107 run: right:number <- next-ingredient 
9999 mem: storing 7 in location 1277
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 0
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 40
9999 mem: storing 1095 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1268 is 1095
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1095
9999 mem: storing 32 in location 1095
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1095
9999 mem: location 1095 is 32
9999 mem: location 1096 is 7
9999 mem: location 1268 is 1095
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1096
9999 mem: storing 7 in location 1096
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1259 is 1012
9999 mem: storing 1 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 0
9999 mem: storing 1 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 1
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 41
9999 mem: storing 1097 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1268 is 1097
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1097
9999 mem: storing 32 in location 1097
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1097
9999 mem: location 1097 is 32
9999 mem: location 1098 is 7
9999 mem: location 1268 is 1097
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1098
9999 mem: storing 7 in location 1098
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1259 is 1012
9999 mem: storing 2 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 1
9999 mem: storing 2 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 2
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 42
9999 mem: storing 1099 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1268 is 1099
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1099
9999 mem: storing 32 in location 1099
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1099
9999 mem: location 1099 is 32
9999 mem: location 1100 is 7
9999 mem: location 1268 is 1099
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1100
9999 mem: storing 7 in location 1100
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1259 is 1012
9999 mem: storing 3 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 2
9999 mem: storing 3 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 3
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 43
9999 mem: storing 1101 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1268 is 1101
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1101
9999 mem: storing 32 in location 1101
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1101
9999 mem: location 1101 is 32
9999 mem: location 1102 is 7
9999 mem: location 1268 is 1101
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1102
9999 mem: storing 7 in location 1102
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1259 is 1012
9999 mem: storing 4 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 3
9999 mem: storing 4 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 4
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 44
9999 mem: storing 1103 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1268 is 1103
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1103
9999 mem: storing 32 in location 1103
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1103
9999 mem: location 1103 is 32
9999 mem: location 1104 is 7
9999 mem: location 1268 is 1103
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1104
9999 mem: storing 7 in location 1104
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1259 is 1012
9999 mem: storing 5 in location 1012
9990 schedule: print-character/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-wraps-long-lines-on-backspace
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 4
9999 mem: storing 5 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 5
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 45
9999 mem: storing 1105 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1268 is 1105
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1105
9999 mem: storing 32 in location 1105
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1105
9999 mem: location 1105 is 32
9999 mem: location 1106 is 7
9999 mem: location 1268 is 1105
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1106
9999 mem: storing 7 in location 1106
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1259 is 1012
9999 mem: storing 6 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 5
9999 mem: storing 6 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 6
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 46
9999 mem: storing 1107 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1268 is 1107
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1107
9999 mem: storing 32 in location 1107
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1107
9999 mem: location 1107 is 32
9999 mem: location 1108 is 7
9999 mem: location 1268 is 1107
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1108
9999 mem: storing 7 in location 1108
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1259 is 1012
9999 mem: storing 7 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 6
9999 mem: storing 7 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 7
9999 mem: location 1277 is 7
9999 mem: storing 0 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: print-character screen, 32/space
9999 mem: location 1275 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1249
 108 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1250
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
 108 run: jump-if color-found?, 
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1251
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
 108 run: jump-if bg-color-found?, 
9999 mem: location 1254 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1253
 108 run: trace 90, [print-character], c
9999 mem: location 1250 is 32
  90 print-character: 32 
 108 run: jump-unless sc, 
9999 mem: location 1249 is 1009
9998 run: jump-unless fell through
 108 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1255
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1256
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1257
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1256 is 5
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1259
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1255 is 10
9999 mem: storing 1 in location 1258
 108 run: jump-if legal?, 1:offset
9999 mem: location 1258 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1260
 108 run: jump-unless newline?, 
9999 mem: location 1260 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1257 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1255 is 10
9999 mem: storing 40 in location 1263
 108 run: index <- add index, *column
9999 mem: location 1263 is 40
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1263
 108 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1249 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1249 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1264
 108 run: len:number <- length *buf
9999 mem: location 1264 is 1014
9999 mem: storing 50 in location 1265
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1250 is 32
9999 mem: storing 0 in location 1266
 108 run: jump-unless backspace?, 
9999 mem: location 1266 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1264 is 1014
9999 mem: location 1263 is 47
9999 mem: storing 1109 in location 1268
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1268 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1268 is 1109
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1269
 108 run: *cursor-contents <- copy c
9999 mem: location 1250 is 32
9999 mem: location 1269 is 1109
9999 mem: storing 32 in location 1109
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1268 is 1109
9999 mem: location 1109 is 32
9999 mem: location 1110 is 7
9999 mem: location 1268 is 1109
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1270
 108 run: *cursor-color <- copy color
9999 mem: location 1251 is 7
9999 mem: location 1270 is 1110
9999 mem: storing 7 in location 1110
 108 run: right:number <- subtract width, 1
9999 mem: location 1255 is 10
9999 mem: storing 9 in location 1271
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1271 is 9
9999 mem: storing 0 in location 1272
 108 run: jump-if at-right?, 
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1259 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1259 is 1012
9999 mem: storing 8 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1249 is 1009
9999 trace: reply: decrementing callstack depth from 7
 107 run: column <- add column, 1
9999 mem: location 1276 is 7
9999 mem: storing 8 in location 1276
 107 run: jump 
9998 run: jumping to instruction 5
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1276 is 8
9999 mem: location 1277 is 7
9999 mem: storing 1 in location 1278
 107 run: jump-if done?, 
9999 mem: location 1278 is 1
9998 run: jumping to instruction 10
 107 run: reply 
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1231 is 1009
9999 mem: location 1232 is 4
9999 mem: location 1234 is 0
9999 mem: location 1235 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1301
 107 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1302
 107 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1303
 107 run: right:number <- next-ingredient 
9999 mem: storing 7 in location 1304
 107 run: row <- add row, 1
9999 mem: location 1302 is 4
9999 mem: storing 5 in location 1302
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1301 is 1009
9999 mem: location 1302 is 5
9999 mem: location 1303 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1294
 108 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1295
 108 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1296
 108 run: jump-unless sc, 
9999 mem: location 1294 is 1009
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1294 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1294 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1297
 108 run: *row <- copy new-row
9999 mem: location 1295 is 5
9999 mem: location 1297 is 1011
9999 mem: storing 5 in location 1011
 108 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1294 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1294 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1298
 108 run: *column <- copy new-column
9999 mem: location 1296 is 0
9999 mem: location 1298 is 1012
9999 mem: storing 0 in location 1012
 108 run: reply sc/same-as-ingredient:0
9999 mem: location 1294 is 1009
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1301
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1301 is 1009
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1167
 108 run: jump-unless sc, 
9999 mem: location 1167 is 1009
9998 run: jump-unless fell through
 108 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1167 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1168
 108 run: reply height
9999 mem: location 1168 is 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1305
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1302 is 5
9999 mem: location 1305 is 5
9999 mem: storing 1 in location 1306
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1306 is 1
9998 run: jumping to instruction 15
 107 run: reply 
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:screen
9999 mem: location 1153 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1322 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1322 is 1115
9998 run: address to copy is 1121
9998 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1323
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1322 is 1115
9999 mem: location 1115 is 1159
9999 mem: location 1116 is 1159
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1172
9999 mem: location 1119 is 0
9999 mem: location 1120 is 7
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1499
9999 mem: location 1125 is 0
9999 mem: location 1322 is 1115
9998 run: address to copy is 1122
9998 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1324
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1320 is 1009
9999 mem: location 1323 is 1
9999 mem: location 1324 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1231
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1232
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1233
 105 run: jump-unless sc, 
9999 mem: location 1231 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1234
 105 run: *row <- copy new-row
9999 mem: location 1232 is 1
9999 mem: location 1234 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1231 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1231 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1235
 105 run: *column <- copy new-column
9999 mem: location 1233 is 3
9999 mem: location 1235 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1231 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1320
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1321 is 1316
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1316 in location 1281
 105 run: jump-unless x, 
9999 mem: location 1281 is 1316
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1281 is 1316
9999 mem: location 1316 is 2
9999 mem: location 1317 is 1307
9999 mem: location 1281 is 1316
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1282
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1281 is 1316
9999 mem: location 1316 is 2
9999 mem: location 1317 is 1307
9999 mem: location 1281 is 1316
9998 run: address to copy is 1317
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1317 is 1307
9999 mem: storing 1307 in location 1283
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1307
9999 mem: storing 2 in location 1284
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1282 is 1316
9999 mem: location 1316 is 2
9999 mem: location 1284 is 2
9999 mem: storing 1 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1165 in location 1286
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1286 is 1165
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1281 is 1316
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1316
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 1316 in location 1321
9999 mem: storing 1 in location 1329
9999 mem: storing 1 in location 1330
 104 run: jump-unless found?, 
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1330 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abcdef ↩  .
    .ghij      .
    .┈┈┈┈┈┈┈┈  .
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
