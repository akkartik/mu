 102 run: assume-console [
    left-click 3, 5  # below all text
    type [ef]
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"5": "literal"}
9992 load: after rewriting: left-click 3, 5
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ef": "literal-string"}
9992 load: after rewriting: type [ef]
9999 mem: storing 'left-click' event starting at 1297
9999 mem: storing 'type' event starting at 1301
9999 mem: storing 'text' tag at 1301
9999 mem: storing character 101 at 1302
9999 mem: storing 'text' tag at 1305
9999 mem: storing character 102 at 1306
9999 mem: storing console in 1309
9999 mem: storing console data in 1311
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1309
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1312
9999 mem: storing 14 in location 1313
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 75 -> 76
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1317
9999 mem: incrementing refcount of 1000: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 1
9999 mem: location 1319 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1232
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1233
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1234
 105 run: jump-unless screen, 
9999 mem: location 1232 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1235
 105 run: *row <- copy new-row
9999 mem: location 1233 is 1
9999 mem: location 1235 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1236
 105 run: *column <- copy new-column
9999 mem: location 1234 is 0
9999 mem: location 1236 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1232 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 76 -> 77
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1267
9999 mem: incrementing refcount of 1309: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1267 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 0
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1268
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 0
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1295
9999 mem: storing 1295 in location 1269
9999 mem: incrementing refcount of 1295: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 3 in location 1270
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 0
9999 mem: location 1270 is 3
9999 mem: storing 0 in location 1271
 105 run: jump-unless done?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9998 run: base address is 1296
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 0
9998 run: address to copy is 1297
9998 run: its type is event
9999 mem: location 1297 is 2
9999 mem: location 1298 is 65513
9999 mem: location 1299 is 3
9999 mem: location 1300 is 5
9999 mem: storing 2 in location 1273
9999 mem: storing 65513 in location 1274
9999 mem: storing 3 in location 1275
9999 mem: storing 5 in location 1276
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 0
9999 mem: location 1268 is 1310
9999 mem: storing 1 in location 1310
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1273 is 2
9999 mem: location 1274 is 65513
9999 mem: location 1275 is 3
9999 mem: location 1276 is 5
9999 mem: location 1267 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 5]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1320
9999 mem: storing 65513 in location 1321
9999 mem: storing 3 in location 1322
9999 mem: storing 5 in location 1323
9999 mem: decrementing refcount of 1309: 2 -> 1
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 1 -> 2
9999 mem: storing 1 in location 1324
9999 mem: storing 0 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1320 is 2
9999 mem: location 1321 is 65513
9999 mem: location 1322 is 3
9999 mem: location 1323 is 5
9999 mem: storing 1321 in location 1326
 104 run: jump-unless t, 
9999 mem: location 1326 is 1321
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1315 is 1012
9999 mem: location 1317 is 1000
9999 mem: location 1326 is 1321
9999 mem: location 1321 is 65513
9999 mem: location 1322 is 3
9999 mem: location 1323 is 5
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 abandon: picking up space from free-list of size 29
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1203
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1204
9999 mem: incrementing refcount of 1000: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1205
9999 mem: storing 3 in location 1206
9999 mem: storing 5 in location 1207
 105 run: jump-if editor, 1:offset
9999 mem: location 1204 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1205 is 65513
9999 mem: location 1206 is 3
9999 mem: location 1207 is 5
9998 run: address to copy is 1206
9998 run: its type is number
9999 mem: location 1206 is 3
9999 mem: storing 3 in location 1208
 105 run: jump-if click-row, 1:offset
9999 mem: location 1208 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1205 is 65513
9999 mem: location 1206 is 3
9999 mem: location 1207 is 5
9998 run: address to copy is 1207
9998 run: its type is number
9999 mem: location 1207 is 5
9999 mem: storing 5 in location 1209
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1210
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1209 is 5
9999 mem: location 1210 is 0
9999 mem: storing 0 in location 1211
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1211 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1212
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1209 is 5
9999 mem: location 1212 is 9
9999 mem: storing 0 in location 1213
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1213 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1214
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1215
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1216
9999 mem: incrementing refcount of 1161: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1203 is 1012
9999 mem: location 1204 is 1000
9999 mem: location 1208 is 3
9999 mem: location 1209 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1328
9999 mem: storing 26 in location 1329
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1331
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1332
9999 mem: incrementing refcount of 1000: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1333
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1334
 106 run: jump-if editor, 1:offset
9999 mem: location 1332 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1335
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1336
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1331 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 79 -> 80
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1183
 107 run: reply height:number
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1337
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1338
9999 mem: incrementing refcount of 1161: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1338 is 1161
9999 mem: storing 1161 in location 1339
9999 mem: incrementing refcount of 1161: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1338 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1182
9999 mem: incrementing refcount of 1161: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 167
9999 mem: location 1163 is 1175
9999 mem: location 1164 is 0
9999 mem: location 1182 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1175
9999 mem: storing 1175 in location 1183
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1161: 15 -> 14
9999 mem: storing 1175 in location 1338
9999 mem: incrementing refcount of 1175: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1340
 106 run: column:number <- copy left
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1341
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1342
 106 run: *cursor-row <- copy target-row
9999 mem: location 1333 is 3
9999 mem: location 1342 is 1007
9999 mem: storing 3 in location 1007
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1343
 106 run: *cursor-column <- copy target-column
9999 mem: location 1334 is 5
9999 mem: location 1343 is 1008
9999 mem: storing 5 in location 1008
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1161
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 5
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1332 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1344
 106 run: jump-unless curr, 
9999 mem: location 1338 is 1175
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1340 is 1
9999 mem: location 1337 is 5
9999 mem: storing 0 in location 1345
 106 run: jump-if off-screen?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 1
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1338 is 1175
9999 mem: skipping refcount at 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1161
9999 mem: location 1338 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 97
9999 mem: storing 97 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1348 is 97
9999 mem: storing 0 in location 1349
 106 run: jump-unless newline?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1341 is 0
9999 mem: location 1336 is 9
9999 mem: storing 0 in location 1351
 106 run: jump-unless at-right?, 
9999 mem: location 1351 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1338 is 1175
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-inserts-characters-at-cursor-6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1182
9999 mem: incrementing refcount of 1175: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1161
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1184
9999 mem: storing 1184 in location 1183
9999 mem: incrementing refcount of 1184: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1175: 17 -> 16
9999 mem: storing 1184 in location 1338
9999 mem: incrementing refcount of 1184: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1339 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1182
9999 mem: incrementing refcount of 1161: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 167
9999 mem: location 1163 is 1175
9999 mem: location 1164 is 0
9999 mem: location 1182 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1175
9999 mem: storing 1175 in location 1183
9999 mem: incrementing refcount of 1175: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1161: 15 -> 14
9999 mem: storing 1175 in location 1339
9999 mem: incrementing refcount of 1175: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1341 is 0
9999 mem: storing 1 in location 1341
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1338 is 1184
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1340 is 1
9999 mem: location 1337 is 5
9999 mem: storing 0 in location 1345
 106 run: jump-if off-screen?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 1
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1338 is 1184
9999 mem: skipping refcount at 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1338 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is character
9999 mem: location 1185 is 98
9999 mem: storing 98 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1348 is 98
9999 mem: storing 0 in location 1349
 106 run: jump-unless newline?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1341 is 1
9999 mem: location 1336 is 9
9999 mem: storing 0 in location 1351
 106 run: jump-unless at-right?, 
9999 mem: location 1351 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1338 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1182
9999 mem: incrementing refcount of 1184: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1186
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1183
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1184: 17 -> 16
9999 mem: storing 1188 in location 1338
9999 mem: incrementing refcount of 1188: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1339 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1182
9999 mem: incrementing refcount of 1175: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1175
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 97
9999 mem: location 1177 is 1184
9999 mem: location 1178 is 1161
9999 mem: location 1182 is 1175
9999 mem: skipping refcount at 1175
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1177 is 1184
9999 mem: storing 1184 in location 1183
9999 mem: incrementing refcount of 1184: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1175: 19 -> 18
9999 mem: storing 1184 in location 1339
9999 mem: incrementing refcount of 1184: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1341 is 1
9999 mem: storing 2 in location 1341
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1338 is 1188
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1340 is 1
9999 mem: location 1337 is 5
9999 mem: storing 0 in location 1345
 106 run: jump-if off-screen?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 1
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1338 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1338 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is character
9999 mem: location 1189 is 99
9999 mem: storing 99 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1348 is 99
9999 mem: storing 0 in location 1349
 106 run: jump-unless newline?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1341 is 2
9999 mem: location 1336 is 9
9999 mem: storing 0 in location 1351
 106 run: jump-unless at-right?, 
9999 mem: location 1351 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1338 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1182
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1183
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 17 -> 16
9999 mem: storing 1192 in location 1338
9999 mem: incrementing refcount of 1192: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1339 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1182
9999 mem: incrementing refcount of 1184: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1184
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1185 is 98
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1175
9999 mem: location 1182 is 1184
9999 mem: skipping refcount at 1184
9999 type: type deduced to be character$
9998 run: address to copy is 1186
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1183
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1184: 19 -> 18
9999 mem: storing 1188 in location 1339
9999 mem: incrementing refcount of 1188: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1341 is 2
9999 mem: storing 3 in location 1341
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1338 is 1192
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1340 is 1
9999 mem: location 1337 is 5
9999 mem: storing 0 in location 1345
 106 run: jump-if off-screen?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 1
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1338 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 10
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1338 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is character
9999 mem: location 1193 is 10
9999 mem: storing 10 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1348 is 10
9999 mem: storing 1 in location 1349
 106 run: jump-unless newline?, 
9999 mem: location 1349 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 1
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1340 is 1
9999 mem: storing 2 in location 1340
 106 run: column <- copy left
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1341
 106 run: curr <- next_2 curr
9999 mem: location 1338 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 10
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1183
9999 mem: incrementing refcount of 1196: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 17 -> 16
9999 mem: storing 1196 in location 1338
9999 mem: incrementing refcount of 1196: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1339 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1182
9999 mem: incrementing refcount of 1188: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1189 is 99
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1184
9999 mem: location 1182 is 1188
9999 mem: skipping refcount at 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1190
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1183
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 19 -> 18
9999 mem: storing 1192 in location 1339
9999 mem: incrementing refcount of 1192: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1338 is 1196
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1340 is 2
9999 mem: location 1337 is 5
9999 mem: storing 0 in location 1345
 106 run: jump-if off-screen?, 
9999 mem: location 1345 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 2
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1346 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1338 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 100
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1338 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is character
9999 mem: location 1197 is 100
9999 mem: storing 100 in location 1348
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1348 is 100
9999 mem: storing 0 in location 1349
 106 run: jump-unless newline?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1341 is 0
9999 mem: location 1336 is 9
9999 mem: storing 0 in location 1351
 106 run: jump-unless at-right?, 
9999 mem: location 1351 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1338 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1182
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 100
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1183
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1196: 15 -> 14
9999 mem: storing 0 in location 1338
 106 run: prev <- next_2 prev
9999 mem: location 1339 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1192
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1193 is 10
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1182 is 1192
9999 mem: skipping refcount at 1192
9999 type: type deduced to be character$
9998 run: address to copy is 1194
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1183
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 19 -> 18
9999 mem: storing 1196 in location 1339
9999 mem: incrementing refcount of 1196: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1341 is 0
9999 mem: storing 1 in location 1341
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1338 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1340 is 2
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1346
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1008
9999 mem: location 1008 is 5
9999 mem: storing 1 in location 1352
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1346 is 0
9999 mem: location 1352 is 1
9999 mem: storing 0 in location 1353
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1340 is 2
9999 mem: location 1342 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1354
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1353 is 0
9999 mem: location 1354 is 1
9999 mem: storing 1 in location 1355
 106 run: jump-unless before-cursor?, 
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1340 is 2
9999 mem: location 1342 is 1007
9999 mem: storing 2 in location 1007
 106 run: *cursor-column <- copy column
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1008
9999 mem: storing 1 in location 1008
 106 run: *before-cursor <- copy prev
9999 mem: location 1339 is 1196
9999 mem: location 1344 is 1004
9999 mem: decrementing refcount of 1161: 14 -> 13
9999 mem: storing 1196 in location 1004
9999 mem: incrementing refcount of 1196: 16 -> 17
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1332 is 1000
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: decrementing refcount of 1000: 9 -> 8
9999 mem: storing 1000 in location 1204
9999 mem: incrementing refcount of 1000: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1217
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1218
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1219
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1204 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1220
9999 mem: incrementing refcount of 1161: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1217 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1222
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1214 is 1
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1161
9999 mem: location 1218 is 2
9999 mem: location 1219 is 1
9999 mem: location 1220 is 1161
9999 mem: location 1217 is 0
9999 mem: location 1222 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1222 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1161 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 1 in location 1126
9999 mem: storing 1161 in location 1127
9999 mem: storing 0 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1204 is 1000
9999 mem: location 1222 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1356
9999 mem: storing 5 in location 1357
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1359
9999 mem: incrementing refcount of 1000: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1360
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1361
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1360 is 1120
9999 mem: location 1361 is 1010
9999 mem: location 1010 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1232
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1233
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1363
9999 mem: storing 1363 in location 1234
9999 mem: incrementing refcount of 1363: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1234 is 1363
9999 mem: skipping refcount at 1363
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: location 1234 is 1363
9999 mem: skipping refcount at 1363
9998 run: address to copy is 1364
9999 mem: storing 1364 in location 1235
 107 run: *val <- copy x
9999 mem: location 1232 is 1120
9999 mem: location 1235 is 1364
9999 mem: storing 1120 in location 1364
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1234 is 1363
9999 mem: skipping refcount at 1363
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1364 is 1120
9999 mem: location 1365 is 0
9999 mem: location 1234 is 1363
9999 mem: skipping refcount at 1363
9999 type: type deduced to be address$
9998 run: address to copy is 1365
9999 mem: storing 1365 in location 1236
 107 run: *next <- copy in
9999 mem: location 1233 is 0
9999 mem: location 1236 is 1365
9999 mem: storing 0 in location 1365
 107 run: reply result
9999 mem: location 1234 is 1363
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1363
9999 mem: location 1361 is 1010
9999 mem: storing 1363 in location 1010
9999 mem: incrementing refcount of 1363: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1362
 106 run: *redo <- copy 0
9999 mem: location 1362 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1359 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: decrementing refcount of 1000: 10 -> 9
9999 mem: storing 1000 in location 1204
9999 mem: incrementing refcount of 1000: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 2
9999 mem: location 1319 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1232
9999 mem: incrementing refcount of 1012: 80 -> 81
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1233
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1234
 105 run: jump-unless screen, 
9999 mem: location 1232 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1235
 105 run: *row <- copy new-row
9999 mem: location 1233 is 2
9999 mem: location 1235 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1236
 105 run: *column <- copy new-column
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1232 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 80 -> 81
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1267
9999 mem: incrementing refcount of 1309: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1267 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 1
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1268
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 1
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1295
9999 mem: storing 1295 in location 1269
9999 mem: incrementing refcount of 1295: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 3 in location 1270
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 1
9999 mem: location 1270 is 3
9999 mem: storing 0 in location 1271
 105 run: jump-unless done?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9998 run: base address is 1296
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 1
9998 run: address to copy is 1301
9998 run: its type is event
9999 mem: location 1301 is 0
9999 mem: location 1302 is 101
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1273
9999 mem: storing 101 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 1
9999 mem: location 1268 is 1310
9999 mem: storing 2 in location 1310
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1273 is 0
9999 mem: location 1274 is 101
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1267 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 101, 0, 0]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1320
9999 mem: storing 101 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: decrementing refcount of 1309: 3 -> 2
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 2 -> 3
9999 mem: storing 1 in location 1324
9999 mem: storing 0 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1320 is 0
9999 mem: location 1321 is 101
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1326
 104 run: jump-unless t, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1315 is 1012
9999 mem: location 1317 is 1000
9999 mem: location 1320 is 0
9999 mem: location 1321 is 101
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1366
9999 mem: storing 85 in location 1367
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1369
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1370
9999 mem: incrementing refcount of 1000: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1371
9999 mem: storing 101 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1375
 105 run: jump-if editor, 1:offset
9999 mem: location 1370 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1369 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 82 -> 83
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1183
 106 run: reply width:number
9999 mem: location 1183 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1376
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1369 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 83 -> 84
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1183
 106 run: reply height:number
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1377
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1378
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1379
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1380
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1381
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1382
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1381 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1383
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1382 is 1008
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1384
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1371 is 0
9999 mem: location 1372 is 101
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: storing 1372 in location 1385
 105 run: jump-unless c, 
9999 mem: location 1385 is 1372
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1386
 105 run: jump-unless redo?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1397
 105 run: jump-unless undo?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1402
 105 run: jump-unless page-up?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1418
 105 run: jump-unless page-down?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1419
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1419 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1424
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1425
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1425 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1426
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1427
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1431
 105 run: jump-unless tab?, 
9999 mem: location 1431 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 0 in location 1435
 105 run: jump-unless newline?, 
9999 mem: location 1435 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: storing 1 in location 1438
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1375
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1438 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1420
9999 mem: incrementing refcount of 1161: 14 -> 15
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1380 is 1004
9999 mem: location 1004 is 1196
9999 mem: storing 1196 in location 1432
9999 mem: incrementing refcount of 1196: 17 -> 18
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1370 is 1000
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 101
9999 mem: location 1369 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1453
9999 mem: storing 31 in location 1454
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1456
9999 mem: incrementing refcount of 1000: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1457
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1458
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1196
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1459
 106 run: insert_2 c, *before-cursor
9999 mem: location 1457 is 101
9999 mem: location 1459 is 1004
9999 mem: location 1004 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1155
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1156
9999 mem: incrementing refcount of 1196: 18 -> 19
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1486
9999 mem: storing 1486 in location 1157
9999 mem: incrementing refcount of 1486: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1157 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 0
9999 mem: location 1488 is 0
9999 mem: location 1489 is 0
9999 mem: location 1157 is 1486
9999 mem: skipping refcount at 1486
9998 run: address to copy is 1487
9999 mem: storing 1487 in location 1158
 107 run: *val <- copy x
9999 mem: location 1155 is 101
9999 mem: location 1158 is 1487
9999 mem: storing 101 in location 1487
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1156 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 100
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1156 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1159
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1156 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 100
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1156 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9999 mem: storing 1198 in location 1160
 107 run: *y <- copy new-node
9999 mem: location 1157 is 1486
9999 mem: location 1160 is 1198
9999 mem: storing 1486 in location 1198
9999 mem: incrementing refcount of 1486: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1157 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 0
9999 mem: location 1489 is 0
9999 mem: location 1157 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1489
9999 mem: storing 1489 in location 1160
 107 run: *y <- copy in
9999 mem: location 1156 is 1196
9999 mem: location 1160 is 1489
9999 mem: storing 1196 in location 1489
9999 mem: incrementing refcount of 1196: 19 -> 20
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1157 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 0
9999 mem: location 1489 is 1196
9999 mem: location 1157 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1488
9999 mem: storing 1488 in location 1160
 107 run: *y <- copy next-node
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1488
9999 mem: storing 0 in location 1488
 107 run: jump-if next-node, 1:offset
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1156 is 1196
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1459 is 1004
9999 mem: location 1004 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1182
9999 mem: incrementing refcount of 1196: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1196
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 100
9999 mem: location 1198 is 1486
9999 mem: location 1199 is 1192
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1198 is 1486
9999 mem: storing 1486 in location 1183
9999 mem: incrementing refcount of 1486: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1486
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1486
9999 mem: location 1459 is 1004
9999 mem: decrementing refcount of 1196: 21 -> 20
9999 mem: storing 1486 in location 1004
9999 mem: incrementing refcount of 1486: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1460
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1461
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1462
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1463
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1460 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1464
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1465
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1458 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 85 -> 86
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1183
 107 run: reply width:number
9999 mem: location 1183 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1466
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1458 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 86 -> 87
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1183
 107 run: reply height:number
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1467
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1463 is 9
9999 mem: storing 8 in location 1468
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1468 is 8
9999 mem: storing 0 in location 1469
 106 run: jump-unless at-wrap?, 
9999 mem: location 1469 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1461 is 1008
9999 mem: storing 2 in location 1008
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1459 is 1004
9999 mem: location 1004 is 1486
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1486 in location 1182
9999 mem: incrementing refcount of 1486: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1486
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 0
9999 mem: location 1489 is 1196
9999 mem: location 1182 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1488
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1488 is 0
9999 mem: storing 0 in location 1183
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1476
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1476 is 0
9999 mem: storing 1 in location 1477
 106 run: jump-unless at-end?, 
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1467 is 5
9999 mem: storing 4 in location 1478
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1464 is 2
9999 mem: location 1478 is 4
9999 mem: storing 0 in location 1479
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1465 is 1
9999 mem: location 1463 is 9
9999 mem: storing 0 in location 1480
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1479 is 0
9999 mem: location 1480 is 0
9999 mem: storing 0 in location 1481
 106 run: jump-if overflow?, 
9999 mem: location 1481 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1458 is 1012
9999 mem: location 1464 is 2
9999 mem: location 1465 is 1
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1232
9999 mem: incrementing refcount of 1012: 87 -> 88
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1233
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1234
 107 run: jump-unless screen, 
9999 mem: location 1232 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1235
 107 run: *row <- copy new-row
9999 mem: location 1233 is 2
9999 mem: location 1235 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1236
 107 run: *column <- copy new-column
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1232 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1458 is 1012
9999 mem: location 1457 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1240
9999 mem: incrementing refcount of 1012: 88 -> 89
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1241
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 107 run: jump-if color-found?, 
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1242
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 107 run: jump-if bg-color-found?, 
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1244
 107 run: trace 90, [print-character], c
9999 mem: location 1241 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1240 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1246
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1247
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1248
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1248 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1248 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1247 is 5
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1250
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1241 is 101
9999 mem: storing 0 in location 1251
 107 run: jump-unless newline?, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1248 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1246 is 10
9999 mem: storing 20 in location 1254
 107 run: index <- add index, *column
9999 mem: location 1254 is 20
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1254
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1255
9999 mem: incrementing refcount of 1018: 53 -> 54
 107 run: len:number <- length *buf
9999 mem: location 1255 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1256
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1241 is 101
9999 mem: storing 0 in location 1257
 107 run: jump-unless backspace?, 
9999 mem: location 1257 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1255 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1254 is 21
9999 mem: storing 1062 in location 1259
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1259 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1259 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1260
 107 run: *cursor-contents <- copy c
9999 mem: location 1241 is 101
9999 mem: location 1260 is 1062
9999 mem: storing 101 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1259 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1259 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1261
 107 run: *cursor-color <- copy color
9999 mem: location 1242 is 7
9999 mem: location 1261 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1246 is 10
9999 mem: storing 9 in location 1262
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1262 is 9
9999 mem: storing 0 in location 1263
 107 run: jump-if at-right?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1250 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1240 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1475
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1456 is 1000
9999 mem: location 1458 is 1012
9999 mem: location 1475 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1000: 12 -> 11
9999 mem: storing 1000 in location 1370
9999 mem: incrementing refcount of 1000: 11 -> 12
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1369
9999 mem: incrementing refcount of 1012: 88 -> 89
9999 mem: storing 0 in location 1375
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1422
9999 mem: incrementing refcount of 1161: 15 -> 16
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1389
 105 run: jump-unless *undo, 
9999 mem: location 1389 is 1010
9999 mem: location 1010 is 1363
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1389 is 1010
9999 mem: location 1010 is 1363
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1363 in location 1182
9999 mem: incrementing refcount of 1363: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1182 is 1363
9999 mem: skipping refcount at 1363
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1364 is 1120
9999 mem: location 1365 is 0
9999 mem: location 1182 is 1363
9999 mem: skipping refcount at 1363
9998 run: address to copy is 1364
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1364 is 1120
9999 mem: storing 1120 in location 1183
9999 mem: incrementing refcount of 1120: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1183 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1388
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1388 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1161
9999 mem: location 1125 is 2
9999 mem: location 1126 is 1
9999 mem: location 1127 is 1161
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1388 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1395
 105 run: jump-unless typing, 
9999 mem: location 1395 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1432 is 1196
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1182
9999 mem: incrementing refcount of 1196: 20 -> 21
 106 run: jump-if in, 1:offset
9999 mem: location 1182 is 1196
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1197 is 100
9999 mem: location 1198 is 1486
9999 mem: location 1199 is 1192
9999 mem: location 1182 is 1196
9999 mem: skipping refcount at 1196
9999 type: type deduced to be character$
9998 run: address to copy is 1198
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1198 is 1486
9999 mem: storing 1486 in location 1183
9999 mem: incrementing refcount of 1486: 5 -> 6
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1486
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1486
9999 mem: storing 1486 in location 1396
9999 mem: incrementing refcount of 1486: 6 -> 7
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1396 is 1486
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1486 in location 1182
9999 mem: incrementing refcount of 1486: 7 -> 8
 106 run: jump-if in, 1:offset
9999 mem: location 1182 is 1486
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1182 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 0
9999 mem: location 1489 is 1196
9999 mem: location 1182 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1488
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1488 is 0
9999 mem: storing 0 in location 1183
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1434
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1490
9999 mem: decrementing refcount of 1120: 6 -> 5
9999 mem: storing 1490 in location 1388
9999 mem: incrementing refcount of 1490: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1383 is 2
9999 mem: location 1384 is 1
9999 mem: location 1420 is 1161
9999 mem: location 1381 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1382 is 1008
9999 mem: location 1008 is 2
9999 mem: location 1422 is 1161
9999 mem: location 1396 is 1486
9999 mem: location 1434 is 0
9999 mem: location 1388 is 1490
9999 mem: skipping refcount at 1490
9999 mem: location 1388 is 1490
9999 mem: skipping refcount at 1490
9999 mem: storing 0 in location 1491
9999 mem: storing 2 in location 1492
9999 mem: storing 1 in location 1493
9999 mem: storing 1161 in location 1494
9999 mem: storing 2 in location 1495
9999 mem: storing 2 in location 1496
9999 mem: storing 1161 in location 1497
9999 mem: storing 1486 in location 1498
9999 mem: storing 0 in location 1499
9999 mem: storing 1 in location 1500
 105 run: editor <- add-operation editor, op
9999 mem: location 1370 is 1000
9999 mem: location 1388 is 1490
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1359
9999 mem: incrementing refcount of 1000: 12 -> 13
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1490 in location 1360
9999 mem: incrementing refcount of 1490: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1363
9999 mem: location 1011 is 0
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1361
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1360 is 1490
9999 mem: location 1361 is 1010
9999 mem: location 1010 is 1363
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1490 in location 1232
9999 mem: incrementing refcount of 1490: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1363 in location 1233
9999 mem: incrementing refcount of 1363: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1502
9999 mem: storing 1502 in location 1234
9999 mem: incrementing refcount of 1502: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1234 is 1502
9999 mem: skipping refcount at 1502
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1503 is 0
9999 mem: location 1504 is 0
9999 mem: location 1234 is 1502
9999 mem: skipping refcount at 1502
9998 run: address to copy is 1503
9999 mem: storing 1503 in location 1235
 107 run: *val <- copy x
9999 mem: location 1232 is 1490
9999 mem: location 1235 is 1503
9999 mem: storing 1490 in location 1503
9999 mem: incrementing refcount of 1490: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1234 is 1502
9999 mem: skipping refcount at 1502
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1503 is 1490
9999 mem: location 1504 is 0
9999 mem: location 1234 is 1502
9999 mem: skipping refcount at 1502
9999 type: type deduced to be address$
9998 run: address to copy is 1504
9999 mem: storing 1504 in location 1236
 107 run: *next <- copy in
9999 mem: location 1233 is 1363
9999 mem: location 1236 is 1504
9999 mem: storing 1363 in location 1504
9999 mem: incrementing refcount of 1363: 4 -> 5
 107 run: reply result
9999 mem: location 1234 is 1502
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1502
9999 mem: location 1361 is 1010
9999 mem: decrementing refcount of 1363: 5 -> 4
9999 mem: storing 1502 in location 1010
9999 mem: incrementing refcount of 1502: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1359 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1362
 106 run: *redo <- copy 0
9999 mem: location 1362 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1359 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: decrementing refcount of 1000: 13 -> 12
9999 mem: storing 1000 in location 1370
9999 mem: incrementing refcount of 1000: 12 -> 13
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1369 is 1012
9999 mem: location 1370 is 1000
9999 mem: location 1375 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 88 -> 89
9999 mem: decrementing refcount of 1000: 13 -> 12
9999 mem: storing 1000 in location 1317
9999 mem: incrementing refcount of 1000: 12 -> 13
9999 mem: storing 0 in location 1327
 104 run: jump-unless go-render?, 
9999 mem: location 1327 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 2
9999 mem: storing 2 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 2
9999 mem: location 1319 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1232
9999 mem: incrementing refcount of 1012: 89 -> 90
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1233
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1234
9990 schedule: move-cursor/editor-event-loop/run1001/scenario-editor-inserts-characters-at-cursor-6
 105 run: jump-unless screen, 
9999 mem: location 1232 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1235
 105 run: *row <- copy new-row
9999 mem: location 1233 is 2
9999 mem: location 1235 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1236
 105 run: *column <- copy new-column
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1232 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 89 -> 90
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1267
9999 mem: incrementing refcount of 1309: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1267 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 2
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1268
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 2
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1295
9999 mem: storing 1295 in location 1269
9999 mem: incrementing refcount of 1295: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 3 in location 1270
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 2
9999 mem: location 1270 is 3
9999 mem: storing 0 in location 1271
 105 run: jump-unless done?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9998 run: base address is 1296
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 2
9998 run: address to copy is 1305
9998 run: its type is event
9999 mem: location 1305 is 0
9999 mem: location 1306 is 102
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: storing 0 in location 1273
9999 mem: storing 102 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 2
9999 mem: location 1268 is 1310
9999 mem: storing 3 in location 1310
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1273 is 0
9999 mem: location 1274 is 102
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1267 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 102, 0, 0]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1320
9999 mem: storing 102 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: decrementing refcount of 1309: 4 -> 3
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 3 -> 4
9999 mem: storing 1 in location 1324
9999 mem: storing 0 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1320 is 0
9999 mem: location 1321 is 102
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1326
 104 run: jump-unless t, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1315 is 1012
9999 mem: location 1317 is 1000
9999 mem: location 1320 is 0
9999 mem: location 1321 is 102
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1369
9999 mem: incrementing refcount of 1012: 90 -> 91
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1370
9999 mem: incrementing refcount of 1000: 13 -> 14
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1371
9999 mem: storing 102 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1375
 105 run: jump-if editor, 1:offset
9999 mem: location 1370 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1369 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1183
 106 run: reply width:number
9999 mem: location 1183 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1376
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1369 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 92 -> 93
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1183
 106 run: reply height:number
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1377
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1378
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1379
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1380
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1381
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1382
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1381 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1383
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1382 is 1008
9999 mem: location 1008 is 2
9999 mem: storing 2 in location 1384
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1371 is 0
9999 mem: location 1372 is 102
9999 mem: location 1373 is 0
9999 mem: location 1374 is 0
9999 mem: storing 1372 in location 1385
 105 run: jump-unless c, 
9999 mem: location 1385 is 1372
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1386
 105 run: jump-unless redo?, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1397
 105 run: jump-unless undo?, 
9999 mem: location 1397 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1402
 105 run: jump-unless page-up?, 
9999 mem: location 1402 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1418
 105 run: jump-unless page-down?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1419
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1419 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1424
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1425
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1425 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1426
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1427
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1431
 105 run: jump-unless tab?, 
9999 mem: location 1431 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 0 in location 1435
 105 run: jump-unless newline?, 
9999 mem: location 1435 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: storing 1 in location 1438
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1375
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1438 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1420
9999 mem: incrementing refcount of 1161: 16 -> 17
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1380 is 1004
9999 mem: location 1004 is 1486
9999 mem: storing 1486 in location 1432
9999 mem: incrementing refcount of 1486: 8 -> 9
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1370 is 1000
9999 mem: location 1385 is 1372
9999 mem: location 1372 is 102
9999 mem: location 1369 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1456
9999 mem: incrementing refcount of 1000: 14 -> 15
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1457
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1458
9999 mem: incrementing refcount of 1012: 93 -> 94
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1486
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1459
 106 run: insert_2 c, *before-cursor
9999 mem: location 1457 is 102
9999 mem: location 1459 is 1004
9999 mem: location 1004 is 1486
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1155
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1486 in location 1156
9999 mem: incrementing refcount of 1486: 9 -> 10
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1505
9999 mem: storing 1505 in location 1157
9999 mem: incrementing refcount of 1505: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1157 is 1505
9999 mem: skipping refcount at 1505
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1506 is 0
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: location 1157 is 1505
9999 mem: skipping refcount at 1505
9998 run: address to copy is 1506
9999 mem: storing 1506 in location 1158
 107 run: *val <- copy x
9999 mem: location 1155 is 102
9999 mem: location 1158 is 1506
9999 mem: storing 102 in location 1506
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1156 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 0
9999 mem: location 1489 is 1196
9999 mem: location 1156 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1488
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1488 is 0
9999 mem: storing 0 in location 1159
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1156 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 0
9999 mem: location 1489 is 1196
9999 mem: location 1156 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1488
9999 mem: storing 1488 in location 1160
 107 run: *y <- copy new-node
9999 mem: location 1157 is 1505
9999 mem: location 1160 is 1488
9999 mem: storing 1505 in location 1488
9999 mem: incrementing refcount of 1505: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1157 is 1505
9999 mem: skipping refcount at 1505
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1506 is 102
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: location 1157 is 1505
9999 mem: skipping refcount at 1505
9999 type: type deduced to be character$
9998 run: address to copy is 1508
9999 mem: storing 1508 in location 1160
 107 run: *y <- copy in
9999 mem: location 1156 is 1486
9999 mem: location 1160 is 1508
9999 mem: storing 1486 in location 1508
9999 mem: incrementing refcount of 1486: 10 -> 11
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1157 is 1505
9999 mem: skipping refcount at 1505
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1506 is 102
9999 mem: location 1507 is 0
9999 mem: location 1508 is 1486
9999 mem: location 1157 is 1505
9999 mem: skipping refcount at 1505
9999 type: type deduced to be character$
9998 run: address to copy is 1507
9999 mem: storing 1507 in location 1160
 107 run: *y <- copy next-node
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1507
9999 mem: storing 0 in location 1507
 107 run: jump-if next-node, 1:offset
9999 mem: location 1159 is 0
9998 run: jump-if fell through
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1156 is 1486
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1459 is 1004
9999 mem: location 1004 is 1486
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1486 in location 1182
9999 mem: incrementing refcount of 1486: 11 -> 12
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1486
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1486
9999 mem: skipping refcount at 1486
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1487 is 101
9999 mem: location 1488 is 1505
9999 mem: location 1489 is 1196
9999 mem: location 1182 is 1486
9999 mem: skipping refcount at 1486
9999 type: type deduced to be character$
9998 run: address to copy is 1488
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1488 is 1505
9999 mem: storing 1505 in location 1183
9999 mem: incrementing refcount of 1505: 2 -> 3
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 1505
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1505
9999 mem: location 1459 is 1004
9999 mem: decrementing refcount of 1486: 12 -> 11
9999 mem: storing 1505 in location 1004
9999 mem: incrementing refcount of 1505: 3 -> 4
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1460
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1461
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1462
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 2
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1456 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1463
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1460 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1464
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 2
9999 mem: storing 2 in location 1465
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1458 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1183
 107 run: reply width:number
9999 mem: location 1183 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1466
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1458 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1182
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1182 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1183
 107 run: reply height:number
9999 mem: location 1183 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1467
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1463 is 9
9999 mem: storing 8 in location 1468
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 2
9999 mem: location 1468 is 8
9999 mem: storing 0 in location 1469
 106 run: jump-unless at-wrap?, 
9999 mem: location 1469 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 2
9999 mem: location 1461 is 1008
9999 mem: storing 3 in location 1008
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1459 is 1004
9999 mem: location 1004 is 1505
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1505 in location 1182
9999 mem: incrementing refcount of 1505: 4 -> 5
 107 run: jump-if in, 1:offset
9999 mem: location 1182 is 1505
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1182 is 1505
9999 mem: skipping refcount at 1505
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1506 is 102
9999 mem: location 1507 is 0
9999 mem: location 1508 is 1486
9999 mem: location 1182 is 1505
9999 mem: skipping refcount at 1505
9999 type: type deduced to be character$
9998 run: address to copy is 1507
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1507 is 0
9999 mem: storing 0 in location 1183
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1476
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1476 is 0
9999 mem: storing 1 in location 1477
 106 run: jump-unless at-end?, 
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 106 run: bottom:number <- subtract screen-height, 1
9999 mem: location 1467 is 5
9999 mem: storing 4 in location 1478
 106 run: at-bottom?:boolean <- equal save-row, bottom
9999 mem: location 1464 is 2
9999 mem: location 1478 is 4
9999 mem: storing 0 in location 1479
 106 run: at-right?:boolean <- equal save-column, right
9999 mem: location 1465 is 2
9999 mem: location 1463 is 9
9999 mem: storing 0 in location 1480
 106 run: overflow?:boolean <- and at-bottom?, at-right?
9999 mem: location 1479 is 0
9999 mem: location 1480 is 0
9999 mem: storing 0 in location 1481
 106 run: jump-if overflow?, 
9999 mem: location 1481 is 0
9998 run: jump-if fell through
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1458 is 1012
9999 mem: location 1464 is 2
9999 mem: location 1465 is 2
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1232
9999 mem: incrementing refcount of 1012: 96 -> 97
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1233
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1234
 107 run: jump-unless screen, 
9999 mem: location 1232 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1235
 107 run: *row <- copy new-row
9999 mem: location 1233 is 2
9999 mem: location 1235 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1236
 107 run: *column <- copy new-column
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1232 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print screen, c
9999 mem: location 1458 is 1012
9999 mem: location 1457 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1240
9999 mem: incrementing refcount of 1012: 97 -> 98
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1241
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 107 run: jump-if color-found?, 
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1242
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 107 run: jump-if bg-color-found?, 
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1244
 107 run: trace 90, [print-character], c
9999 mem: location 1241 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1240 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1246
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1247
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1248
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1248 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1248 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1247 is 5
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1250
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1246 is 10
9999 mem: storing 1 in location 1249
 107 run: jump-if legal?, 1:offset
9999 mem: location 1249 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1241 is 102
9999 mem: storing 0 in location 1251
 107 run: jump-unless newline?, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1248 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1246 is 10
9999 mem: storing 20 in location 1254
 107 run: index <- add index, *column
9999 mem: location 1254 is 20
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1254
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1240 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1255
9999 mem: incrementing refcount of 1018: 54 -> 55
 107 run: len:number <- length *buf
9999 mem: location 1255 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1256
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1241 is 102
9999 mem: storing 0 in location 1257
 107 run: jump-unless backspace?, 
9999 mem: location 1257 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1255 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1254 is 22
9999 mem: storing 1064 in location 1259
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1259 is 1064
9999 mem: location 1064 is 32
9999 mem: location 1065 is 7
9999 mem: location 1259 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1260
 107 run: *cursor-contents <- copy c
9999 mem: location 1241 is 102
9999 mem: location 1260 is 1064
9999 mem: storing 102 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1259 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1259 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1261
 107 run: *cursor-color <- copy color
9999 mem: location 1242 is 7
9999 mem: location 1261 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1246 is 10
9999 mem: storing 9 in location 1262
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1262 is 9
9999 mem: storing 0 in location 1263
 107 run: jump-if at-right?, 
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1250 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1250 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1240 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1475
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1456 is 1000
9999 mem: location 1458 is 1012
9999 mem: location 1475 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1000: 15 -> 14
9999 mem: storing 1000 in location 1370
9999 mem: incrementing refcount of 1000: 14 -> 15
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1369
9999 mem: incrementing refcount of 1012: 97 -> 98
9999 mem: storing 0 in location 1375
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: storing 1161 in location 1422
9999 mem: incrementing refcount of 1161: 17 -> 18
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1389
 105 run: jump-unless *undo, 
9999 mem: location 1389 is 1010
9999 mem: location 1010 is 1502
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1389 is 1010
9999 mem: location 1010 is 1502
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1502 in location 1182
9999 mem: incrementing refcount of 1502: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1182 is 1502
9999 mem: skipping refcount at 1502
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1503 is 1490
9999 mem: location 1504 is 1363
9999 mem: location 1182 is 1502
9999 mem: skipping refcount at 1502
9998 run: address to copy is 1503
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1503 is 1490
9999 mem: storing 1490 in location 1183
9999 mem: incrementing refcount of 1490: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1183 is 1490
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1490
9999 mem: storing 1490 in location 1388
9999 mem: incrementing refcount of 1490: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1388 is 1490
9999 mem: skipping refcount at 1490
9999 mem: location 1491 is 0
9999 mem: location 1492 is 2
9999 mem: location 1493 is 1
9999 mem: location 1494 is 1161
9999 mem: location 1495 is 2
9999 mem: location 1496 is 2
9999 mem: location 1497 is 1161
9999 mem: location 1498 is 1486
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1
9999 mem: location 1501 is 0
9999 mem: location 1388 is 1490
9999 mem: skipping refcount at 1490
9999 mem: storing 1492 in location 1395
 105 run: jump-unless typing, 
9999 mem: location 1395 is 1492
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *typing, tag:offset
9999 mem: location 1395 is 1492
9999 mem: location 1492 is 2
9999 mem: location 1493 is 1
9999 mem: location 1494 is 1161
9999 mem: location 1495 is 2
9999 mem: location 1496 is 2
9999 mem: location 1497 is 1161
9999 mem: location 1498 is 1486
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1
9999 mem: location 1395 is 1492
9998 run: address to copy is 1500
9998 run: its type is number
9999 mem: location 1500 is 1
9999 mem: storing 1 in location 1412
 105 run: jump-unless previous-coalesce-tag, 
9999 mem: location 1412 is 1
9998 run: jump-unless fell through
 105 run: insert-until:address:address:shared:duplex-list:character <- get-address *typing, insert-until:offset
9999 mem: location 1395 is 1492
9999 mem: location 1492 is 2
9999 mem: location 1493 is 1
9999 mem: location 1494 is 1161
9999 mem: location 1495 is 2
9999 mem: location 1496 is 2
9999 mem: location 1497 is 1161
9999 mem: location 1498 is 1486
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1
9999 mem: location 1395 is 1492
9998 run: address to copy is 1499
9999 mem: storing 1499 in location 1433
 105 run: *insert-until <- next_2 *before-cursor
9999 mem: location 1380 is 1004
9999 mem: location 1004 is 1505
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1505 in location 1182
9999 mem: incrementing refcount of 1505: 5 -> 6
 106 run: jump-if in, 1:offset
9999 mem: location 1182 is 1505
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1182 is 1505
9999 mem: skipping refcount at 1505
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1506 is 102
9999 mem: location 1507 is 0
9999 mem: location 1508 is 1486
9999 mem: location 1182 is 1505
9999 mem: skipping refcount at 1505
9999 type: type deduced to be character$
9998 run: address to copy is 1507
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1507 is 0
9999 mem: storing 0 in location 1183
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1183 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1433 is 1499
9999 mem: storing 0 in location 1499
 105 run: after-row:address:number <- get-address *typing, after-row:offset
9999 mem: location 1395 is 1492
9999 mem: location 1492 is 2
9999 mem: location 1493 is 1
9999 mem: location 1494 is 1161
9999 mem: location 1495 is 2
9999 mem: location 1496 is 2
9999 mem: location 1497 is 1161
9999 mem: location 1498 is 1486
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1
9999 mem: location 1395 is 1492
9998 run: address to copy is 1495
9999 mem: storing 1495 in location 1414
 105 run: *after-row <- copy *cursor-row
9999 mem: location 1381 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1414 is 1495
9999 mem: storing 2 in location 1495
 105 run: after-column:address:number <- get-address *typing, after-column:offset
9999 mem: location 1395 is 1492
9999 mem: location 1492 is 2
9999 mem: location 1493 is 1
9999 mem: location 1494 is 1161
9999 mem: location 1495 is 2
9999 mem: location 1496 is 2
9999 mem: location 1497 is 1161
9999 mem: location 1498 is 1486
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1
9999 mem: location 1395 is 1492
9998 run: address to copy is 1496
9999 mem: storing 1496 in location 1415
 105 run: *after-column <- copy *cursor-column
9999 mem: location 1382 is 1008
9999 mem: location 1008 is 3
9999 mem: location 1415 is 1496
9999 mem: storing 3 in location 1496
 105 run: after-top:address:address:shared:duplex-list:character <- get-address *typing, after-top-of-screen:offset
9999 mem: location 1395 is 1492
9999 mem: location 1492 is 2
9999 mem: location 1493 is 1
9999 mem: location 1494 is 1161
9999 mem: location 1495 is 2
9999 mem: location 1496 is 3
9999 mem: location 1497 is 1161
9999 mem: location 1498 is 1486
9999 mem: location 1499 is 0
9999 mem: location 1500 is 1
9999 mem: location 1395 is 1492
9998 run: address to copy is 1497
9999 mem: storing 1497 in location 1416
 105 run: *after-top <- get *editor, top-of-screen:offset
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1370 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1161
9999 mem: location 1416 is 1497
9999 mem: decrementing refcount of 1161: 18 -> 17
9999 mem: storing 1161 in location 1497
9999 mem: incrementing refcount of 1161: 17 -> 18
 105 run: jump +done-adding-insert-operation:label
9998 run: jumping to instruction 436
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1369 is 1012
9999 mem: location 1370 is 1000
9999 mem: location 1375 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 97 -> 98
9999 mem: decrementing refcount of 1000: 15 -> 14
9999 mem: storing 1000 in location 1317
9999 mem: incrementing refcount of 1000: 14 -> 15
9999 mem: storing 0 in location 1327
 104 run: jump-unless go-render?, 
9999 mem: location 1327 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1318
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1161
9999 mem: location 1002 is 1161
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1505
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1502
9999 mem: location 1011 is 0
9999 mem: location 1317 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 3
9999 mem: storing 3 in location 1319
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1315 is 1012
9999 mem: location 1318 is 2
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1232
9999 mem: incrementing refcount of 1012: 98 -> 99
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1233
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1234
 105 run: jump-unless screen, 
9999 mem: location 1232 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1235
 105 run: *row <- copy new-row
9999 mem: location 1233 is 2
9999 mem: location 1235 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1232 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1236
 105 run: *column <- copy new-column
9999 mem: location 1234 is 3
9999 mem: location 1236 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1232 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1315
9999 mem: incrementing refcount of 1012: 98 -> 99
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1316 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1267
9999 mem: incrementing refcount of 1309: 4 -> 5
 105 run: jump-unless console, 
9999 mem: location 1267 is 1309
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 3
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1310
9999 mem: storing 1310 in location 1268
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 3
9999 mem: location 1311 is 1295
9999 mem: location 1267 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1311 is 1295
9999 mem: storing 1295 in location 1269
9999 mem: incrementing refcount of 1295: 3 -> 4
 105 run: max:number <- length *buf
9999 mem: location 1269 is 1295
9999 mem: skipping refcount at 1295
9999 mem: storing 3 in location 1270
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1268 is 1310
9999 mem: location 1310 is 3
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1271
 105 run: jump-unless done?, 
9999 mem: location 1271 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1179 in location 1272
9999 mem: incrementing refcount of 1179: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1272 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1267 is 1309
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1309
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: decrementing refcount of 1309: 5 -> 4
9999 mem: storing 1309 in location 1316
9999 mem: incrementing refcount of 1309: 4 -> 5
9999 mem: storing 1 in location 1324
9999 mem: storing 1 in location 1325
 104 run: jump-unless found?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1325 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1315 is 1012
9999 mem: location 1316 is 1309
9999 mem: location 1317 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .def       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 2, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
