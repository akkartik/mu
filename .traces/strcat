schedule: main
run: -- nil
run: 1 main 0: ((1 string-address) <- new hello,)
run: 1000 => (1 string-address)
setm: (1 string-address) <= 1000
sz: (1 string-address)
addr: (1 string-address)
addr: initial result: 1
setm: size of (1 string-address) is 1
setm: (1 string-address): setting 1 to 1000
run: -- ((1 1000) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,))
run: 2 main 1: ((2 string-address) <- new  world!)
run: 1007 => (2 string-address)
setm: (2 string-address) <= 1007
sz: (2 string-address)
addr: (2 string-address)
addr: initial result: 2
setm: size of (2 string-address) is 1
setm: (2 string-address): setting 2 to 1007
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !))
run: 3 main 2: ((3 string-address) <- strcat (1 string-address) (2 string-address))
m: (1 string-address)
sz: (1 string-address)
addr: (1 string-address)
addr: initial result: 1
m: (2 string-address)
sz: (2 string-address)
addr: (2 string-address)
addr: initial result: 2
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !))
run: 4 strcat 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1015 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30))
run: 5 strcat 1: ((1 string-address) <- arg)
arg: nil 0 (1000 1007)
run: 1000 => (1 string-address)
setm: (1 string-address) <= 1000
sz: (1 string-address)
addr: (1 string-address)
addr: initial result: 1
addr: incrementing by 1015
setm: size of (1 string-address) is 1
setm: (1 string-address): setting 1016 to 1000
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000))
run: 6 strcat 2: ((2 integer) <- len (1 string-address deref))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
run: 6 => (2 integer)
setm: (2 integer) <= 6
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
setm: size of (2 integer) is 1
setm: (2 integer): setting 1017 to 6
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6))
run: 7 strcat 3: ((3 string-address) <- arg)
arg: nil 1 (1000 1007)
run: 1007 => (3 string-address)
setm: (3 string-address) <= 1007
sz: (3 string-address)
addr: (3 string-address)
addr: initial result: 3
addr: incrementing by 1015
setm: size of (3 string-address) is 1
setm: (3 string-address): setting 1018 to 1007
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007))
run: 8 strcat 4: ((4 integer) <- len (3 string-address deref))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
run: 7 => (4 integer)
setm: (4 integer) <= 7
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
setm: size of (4 integer) is 1
setm: (4 integer): setting 1019 to 7
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7))
run: 9 strcat 5: ((5 integer) <- add (2 integer) (4 integer))
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
add: 6 7
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: 13 => (5 integer)
setm: (5 integer) <= 13
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1015
setm: size of (5 integer) is 1
setm: (5 integer): setting 1020 to 13
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13))
run: 10 strcat 6: ((6 string-address) <- new (string literal) (5 integer))
m: (5 integer)
sz: (5 integer)
addr: (5 integer)
addr: initial result: 5
addr: incrementing by 1015
sizeof: byte
run: 1046 => (6 string-address)
setm: (6 string-address) <= 1046
sz: (6 string-address)
addr: (6 string-address)
addr: initial result: 6
addr: incrementing by 1015
setm: size of (6 string-address) is 1
setm: (6 string-address): setting 1021 to 1046
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1046 13))
run: 11 strcat 7: ((7 integer) <- copy (0 literal))
run: 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 0
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1046 13))
run: 12 strcat 8: ((8 integer) <- copy (0 literal))
run: 0 => (8 integer)
setm: (8 integer) <= 0
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 0
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 0) (1046 13))
run: 13 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 0) (1024 t) (1046 13))
run: 14 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 0) (1024 t) (1046 13))
run: 15 strcat 11: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1047
run: 1047 => (10 byte-address)
setm: (10 byte-address) <= 1047
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1047
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 0) (1024 t) (1025 1047) (1046 13))
run: 16 strcat 12: ((11 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
array-info: array-len of (1 string-address deref) is 6
index: (1 string-address deref) (8 integer) => 1001 byte
m: (1001 byte global)
sz: (1001 byte global)
addr: (1001 byte global)
addr: initial result: 1001
run: h => (11 byte)
setm: (11 byte) <= h
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to h
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 0) (1024 t) (1025 1047) (1026 h) (1046 13))
run: 17 strcat 13: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: h => (10 byte-address deref)
setm: (10 byte-address deref) <= h
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1047 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1047
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1047 to h
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 0) (1024 t) (1025 1047) (1026 h) (1046 13) (1047 h))
run: 18 strcat 14: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 0 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 1 => (8 integer)
setm: (8 integer) <= 1
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 1
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 0) (1023 1) (1024 t) (1025 1047) (1026 h) (1046 13) (1047 h))
run: 19 strcat 15: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 0 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 1
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1047) (1026 h) (1046 13) (1047 h))
run: 20 strcat 16: (jump (-8 offset))
jump: jumping to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1047) (1026 h) (1046 13) (1047 h))
run: 21 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1047) (1026 h) (1046 13) (1047 h))
run: 22 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1047) (1026 h) (1046 13) (1047 h))
run: 23 strcat 11: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1048
run: 1048 => (10 byte-address)
setm: (10 byte-address) <= 1048
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1048
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1048) (1026 h) (1046 13) (1047 h))
run: 24 strcat 12: ((11 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
array-info: array-len of (1 string-address deref) is 6
index: (1 string-address deref) (8 integer) => 1002 byte
m: (1002 byte global)
sz: (1002 byte global)
addr: (1002 byte global)
addr: initial result: 1002
run: e => (11 byte)
setm: (11 byte) <= e
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to e
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h))
run: 25 strcat 13: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: e => (10 byte-address deref)
setm: (10 byte-address deref) <= e
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1048 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1048
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1048 to e
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 1) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h) (1048 e))
run: 26 strcat 14: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 1 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 2
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 1) (1023 2) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h) (1048 e))
run: 27 strcat 15: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 1 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 2 => (7 integer)
setm: (7 integer) <= 2
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 2
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h) (1048 e))
run: 28 strcat 16: (jump (-8 offset))
jump: jumping to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h) (1048 e))
run: 29 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h) (1048 e))
run: 30 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1048) (1026 e) (1046 13) (1047 h) (1048 e))
run: 31 strcat 11: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1049
run: 1049 => (10 byte-address)
setm: (10 byte-address) <= 1049
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1049
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1049) (1026 e) (1046 13) (1047 h) (1048 e))
run: 32 strcat 12: ((11 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
array-info: array-len of (1 string-address deref) is 6
index: (1 string-address deref) (8 integer) => 1003 byte
m: (1003 byte global)
sz: (1003 byte global)
addr: (1003 byte global)
addr: initial result: 1003
run: l => (11 byte)
setm: (11 byte) <= l
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to l
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e))
run: 33 strcat 13: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: l => (10 byte-address deref)
setm: (10 byte-address deref) <= l
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1049 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1049
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1049 to l
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 2) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 34 strcat 14: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 2 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 3 => (8 integer)
setm: (8 integer) <= 3
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 3
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 2) (1023 3) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 35 strcat 15: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 2 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 3 => (7 integer)
setm: (7 integer) <= 3
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 3
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 36 strcat 16: (jump (-8 offset))
jump: jumping to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 37 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 38 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1049) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 39 strcat 11: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1050
run: 1050 => (10 byte-address)
setm: (10 byte-address) <= 1050
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1050
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 40 strcat 12: ((11 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
array-info: array-len of (1 string-address deref) is 6
index: (1 string-address deref) (8 integer) => 1004 byte
m: (1004 byte global)
sz: (1004 byte global)
addr: (1004 byte global)
addr: initial result: 1004
run: l => (11 byte)
setm: (11 byte) <= l
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to l
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l))
run: 41 strcat 13: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: l => (10 byte-address deref)
setm: (10 byte-address deref) <= l
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1050 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1050
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1050 to l
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 3) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 42 strcat 14: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 3 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 4 => (8 integer)
setm: (8 integer) <= 4
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 4
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 3) (1023 4) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 43 strcat 15: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 3 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 4 => (7 integer)
setm: (7 integer) <= 4
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 4
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 44 strcat 16: (jump (-8 offset))
jump: jumping to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 45 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 46 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1050) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 47 strcat 11: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1051
run: 1051 => (10 byte-address)
setm: (10 byte-address) <= 1051
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1051
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1051) (1026 l) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 48 strcat 12: ((11 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
array-info: array-len of (1 string-address deref) is 6
index: (1 string-address deref) (8 integer) => 1005 byte
m: (1005 byte global)
sz: (1005 byte global)
addr: (1005 byte global)
addr: initial result: 1005
run: o => (11 byte)
setm: (11 byte) <= o
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to o
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l))
run: 49 strcat 13: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: o => (10 byte-address deref)
setm: (10 byte-address deref) <= o
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1051 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1051
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1051 to o
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 4) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 50 strcat 14: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 4 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 5 => (8 integer)
setm: (8 integer) <= 5
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 5
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 4) (1023 5) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 51 strcat 15: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 4 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 5 => (7 integer)
setm: (7 integer) <= 5
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 5
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 52 strcat 16: (jump (-8 offset))
jump: jumping to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 53 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 54 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1051) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 55 strcat 11: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1052
run: 1052 => (10 byte-address)
setm: (10 byte-address) <= 1052
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1052
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1052) (1026 o) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 56 strcat 12: ((11 byte) <- index (1 string-address deref) (8 integer))
array-info: (1 string-address deref) (8 integer)
addr: (1 string-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1000 type ((address t) (elem string) (size 1))
array-info: (1 string-address deref) requests deref => ((array t) (elem byte))
array-len: (1 string-address deref)
m: (1 integer-address deref)
sz: (1 integer-address deref)
m: (1 location)
sz: (1 location)
addr: (1 location)
addr: initial result: 1
addr: incrementing by 1015
sz: (1000 integer)
addr: (1 integer-address deref)
addr: initial result: 1
addr: incrementing by 1015
addr: deref 1016 => 1000
array-info: array-len of (1 string-address deref) is 6
index: (1 string-address deref) (8 integer) => 1006 byte
m: (1006 byte global)
sz: (1006 byte global)
addr: (1006 byte global)
addr: initial result: 1006
run: , => (11 byte)
setm: (11 byte) <= ,
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to ,
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o))
run: 57 strcat 13: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: , => (10 byte-address deref)
setm: (10 byte-address deref) <= ,
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1052 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1052
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1052 to ,
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 5) (1024 t) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 58 strcat 14: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 5 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 6 => (8 integer)
setm: (8 integer) <= 6
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 6
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 5) (1023 6) (1024 t) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 59 strcat 15: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 5 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 6 => (7 integer)
setm: (7 integer) <= 6
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 6
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 6) (1024 t) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 60 strcat 16: (jump (-8 offset))
jump: jumping to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 6) (1024 t) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 61 strcat 9: ((9 boolean) <- lt (8 integer) (2 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (2 integer)
sz: (2 integer)
addr: (2 integer)
addr: initial result: 2
addr: incrementing by 1015
run: nil => (9 boolean)
setm: (9 boolean) <= nil
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1024 to nil
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 6) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 62 strcat 10: (jump-unless (9 boolean) (6 offset))
m: (9 boolean)
sz: (9 boolean)
addr: (9 boolean)
addr: initial result: 9
addr: incrementing by 1015
jump: checking that nil is not t
jump: jumping to 17
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 6) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 63 strcat 17: ((8 integer) <- copy (0 literal))
run: 0 => (8 integer)
setm: (8 integer) <= 0
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 0
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 0) (1025 1052) (1026 ,) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 64 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 0) (1025 1052) (1026 ,) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 65 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 0) (1025 1052) (1026 ,) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 66 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1053
run: 1053 => (10 byte-address)
setm: (10 byte-address) <= 1053
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1053
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 0) (1025 1053) (1026 ,) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 67 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1008 byte
m: (1008 byte global)
sz: (1008 byte global)
addr: (1008 byte global)
addr: initial result: 1008
run:   => (11 byte)
setm: (11 byte) <=  
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to  
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 0) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,))
run: 68 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run:   => (10 byte-address deref)
setm: (10 byte-address deref) <=  
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1053 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1053
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1053 to  
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 0) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 69 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 0 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 1 => (8 integer)
setm: (8 integer) <= 1
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 1
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 6) (1023 1) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 70 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 6 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 7 => (7 integer)
setm: (7 integer) <= 7
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 7
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 71 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 72 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 73 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1053) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 74 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1054
run: 1054 => (10 byte-address)
setm: (10 byte-address) <= 1054
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1054
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1054) (1026  ) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 75 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1009 byte
m: (1009 byte global)
sz: (1009 byte global)
addr: (1009 byte global)
addr: initial result: 1009
run: w => (11 byte)
setm: (11 byte) <= w
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to w
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ))
run: 76 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: w => (10 byte-address deref)
setm: (10 byte-address deref) <= w
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1054 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1054
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1054 to w
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 1) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 77 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 1 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 2 => (8 integer)
setm: (8 integer) <= 2
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 2
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 7) (1023 2) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 78 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 7 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 8 => (7 integer)
setm: (7 integer) <= 8
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 8
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 79 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 80 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 81 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1054) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 82 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1055
run: 1055 => (10 byte-address)
setm: (10 byte-address) <= 1055
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1055
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1055) (1026 w) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 83 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1010 byte
m: (1010 byte global)
sz: (1010 byte global)
addr: (1010 byte global)
addr: initial result: 1010
run: o => (11 byte)
setm: (11 byte) <= o
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to o
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w))
run: 84 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: o => (10 byte-address deref)
setm: (10 byte-address deref) <= o
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1055 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1055
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1055 to o
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 2) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 85 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 2 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 3 => (8 integer)
setm: (8 integer) <= 3
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 3
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 8) (1023 3) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 86 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 8 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 9 => (7 integer)
setm: (7 integer) <= 9
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 9
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 87 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 88 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 89 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1055) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 90 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1056
run: 1056 => (10 byte-address)
setm: (10 byte-address) <= 1056
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1056
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1056) (1026 o) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 91 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1011 byte
m: (1011 byte global)
sz: (1011 byte global)
addr: (1011 byte global)
addr: initial result: 1011
run: r => (11 byte)
setm: (11 byte) <= r
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to r
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o))
run: 92 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: r => (10 byte-address deref)
setm: (10 byte-address deref) <= r
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1056 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1056
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1056 to r
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 3) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 93 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 3 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 4 => (8 integer)
setm: (8 integer) <= 4
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 4
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 9) (1023 4) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 94 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 9 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 10 => (7 integer)
setm: (7 integer) <= 10
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 10
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 95 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 96 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 97 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1056) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 98 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1057
run: 1057 => (10 byte-address)
setm: (10 byte-address) <= 1057
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1057
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1057) (1026 r) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 99 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1012 byte
m: (1012 byte global)
sz: (1012 byte global)
addr: (1012 byte global)
addr: initial result: 1012
run: l => (11 byte)
setm: (11 byte) <= l
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to l
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r))
run: 100 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: l => (10 byte-address deref)
setm: (10 byte-address deref) <= l
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1057 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1057
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1057 to l
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 4) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 101 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 4 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 5 => (8 integer)
setm: (8 integer) <= 5
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 5
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 10) (1023 5) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 102 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 10 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 11 => (7 integer)
setm: (7 integer) <= 11
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 11
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 103 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 104 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 105 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1057) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 106 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1058
run: 1058 => (10 byte-address)
setm: (10 byte-address) <= 1058
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1058
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1058) (1026 l) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 107 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1013 byte
m: (1013 byte global)
sz: (1013 byte global)
addr: (1013 byte global)
addr: initial result: 1013
run: d => (11 byte)
setm: (11 byte) <= d
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to d
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l))
run: 108 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: d => (10 byte-address deref)
setm: (10 byte-address deref) <= d
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1058 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1058
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1058 to d
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 5) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 109 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 5 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 6 => (8 integer)
setm: (8 integer) <= 6
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 6
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 11) (1023 6) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 110 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 11 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 12 => (7 integer)
setm: (7 integer) <= 12
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 12
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 111 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 112 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: t => (12 boolean)
setm: (12 boolean) <= t
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 113 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that t is not t
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1058) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 114 strcat 20: ((10 byte-address) <- index-address (6 string-address deref) (7 integer))
array-info: (6 string-address deref) (7 integer)
addr: (6 string-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
array-info: initial base 1046 type ((address t) (elem string) (size 1))
array-info: (6 string-address deref) requests deref => ((array t) (elem byte))
array-len: (6 string-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
addr: (6 location)
addr: initial result: 6
addr: incrementing by 1015
sz: (1046 integer)
addr: (6 integer-address deref)
addr: initial result: 6
addr: incrementing by 1015
addr: deref 1021 => 1046
array-info: array-len of (6 string-address deref) is 13
index-address: (6 string-address deref) (7 integer) => 1059
run: 1059 => (10 byte-address)
setm: (10 byte-address) <= 1059
sz: (10 byte-address)
addr: (10 byte-address)
addr: initial result: 10
addr: incrementing by 1015
setm: size of (10 byte-address) is 1
setm: (10 byte-address): setting 1025 to 1059
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1059) (1026 d) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 115 strcat 21: ((11 byte) <- index (3 string-address deref) (8 integer))
array-info: (3 string-address deref) (8 integer)
addr: (3 string-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
array-info: initial base 1007 type ((address t) (elem string) (size 1))
array-info: (3 string-address deref) requests deref => ((array t) (elem byte))
array-len: (3 string-address deref)
m: (3 integer-address deref)
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
addr: (3 location)
addr: initial result: 3
addr: incrementing by 1015
sz: (1007 integer)
addr: (3 integer-address deref)
addr: initial result: 3
addr: incrementing by 1015
addr: deref 1018 => 1007
array-info: array-len of (3 string-address deref) is 7
index: (3 string-address deref) (8 integer) => 1014 byte
m: (1014 byte global)
sz: (1014 byte global)
addr: (1014 byte global)
addr: initial result: 1014
run: ! => (11 byte)
setm: (11 byte) <= !
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
setm: size of (11 byte) is 1
setm: (11 byte): setting 1026 to !
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1059) (1026 !) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d))
run: 116 strcat 22: ((10 byte-address deref) <- copy (11 byte))
m: (11 byte)
sz: (11 byte)
addr: (11 byte)
addr: initial result: 11
addr: incrementing by 1015
run: ! => (10 byte-address deref)
setm: (10 byte-address deref) <= !
sz: (10 byte-address deref)
m: (10 location)
sz: (10 location)
addr: (10 location)
addr: initial result: 10
addr: incrementing by 1015
sz: (1059 byte)
addr: (10 byte-address deref)
addr: initial result: 10
addr: incrementing by 1015
addr: deref 1025 => 1059
setm: size of (10 byte-address deref) is 1
setm: (10 byte-address deref): setting 1059 to !
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 6) (1025 1059) (1026 !) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d) (1059 !))
run: 117 strcat 23: ((8 integer) <- add (8 integer) (1 literal))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
add: 6 1
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
run: 7 => (8 integer)
setm: (8 integer) <= 7
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
setm: size of (8 integer) is 1
setm: (8 integer): setting 1023 to 7
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 12) (1023 7) (1025 1059) (1026 !) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d) (1059 !))
run: 118 strcat 24: ((7 integer) <- add (7 integer) (1 literal))
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
add: 12 1
m: (7 integer)
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
run: 13 => (7 integer)
setm: (7 integer) <= 13
sz: (7 integer)
addr: (7 integer)
addr: initial result: 7
addr: incrementing by 1015
setm: size of (7 integer) is 1
setm: (7 integer): setting 1022 to 13
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 13) (1023 7) (1025 1059) (1026 !) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d) (1059 !))
run: 119 strcat 25: (jump (-8 offset))
jump: jumping to 18
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 13) (1023 7) (1025 1059) (1026 !) (1027 t) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d) (1059 !))
run: 120 strcat 18: ((12 boolean) <- lt (8 integer) (4 integer))
m: (8 integer)
sz: (8 integer)
addr: (8 integer)
addr: initial result: 8
addr: incrementing by 1015
m: (4 integer)
sz: (4 integer)
addr: (4 integer)
addr: initial result: 4
addr: incrementing by 1015
run: nil => (12 boolean)
setm: (12 boolean) <= nil
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
setm: size of (12 boolean) is 1
setm: (12 boolean): setting 1027 to nil
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 13) (1023 7) (1025 1059) (1026 !) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d) (1059 !))
run: 121 strcat 19: (jump-unless (12 boolean) (6 offset))
m: (12 boolean)
sz: (12 boolean)
addr: (12 boolean)
addr: initial result: 12
addr: incrementing by 1015
jump: checking that nil is not t
jump: jumping to 26
run: -- ((1 1000) (2 1007) (1000 6) (1001 h) (1002 e) (1003 l) (1004 l) (1005 o) (1006 ,) (1007 7) (1008  ) (1009 w) (1010 o) (1011 r) (1012 l) (1013 d) (1014 !) (1015 30) (1016 1000) (1017 6) (1018 1007) (1019 7) (1020 13) (1021 1046) (1022 13) (1023 7) (1025 1059) (1026 !) (1046 13) (1047 h) (1048 e) (1049 l) (1050 l) (1051 o) (1052 ,) (1053  ) (1054 w) (1055 o) (1056 r) (1057 l) (1058 d) (1059 !))
run: 122 strcat 26: (reply (6 string-address))
m: (6 string-address)
sz: (6 string-address)
addr: (6 string-address)
addr: initial result: 6
addr: incrementing by 1015
reply: ((6 string-address)) ((3 string-address))
reply: 1046 => (3 string-address)
setm: (3 string-address) <= 1046
sz: (3 string-address)
addr: (3 string-address)
addr: initial result: 3
setm: size of (3 string-address) is 1
setm: (3 string-address): setting 3 to 1046
schedule: done with routine
