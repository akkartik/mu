schedule: main
run: 1 main 0: (((1 string-address)) <- ((new)) hello,)
run: 1000 => ((1 string-address))
setm: ((1 string-address)) <= 1000
setm: size of ((1 string-address)) is 1
setm: ((1 string-address)): setting 1 to 1000
run: 2 main 1: (((2 string-address)) <- ((new))  world!)
run: 1007 => ((2 string-address))
setm: ((2 string-address)) <= 1007
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 2 to 1007
run: 3 main 2: (((3 string-address)) <- ((strcat)) ((1 string-address)) ((2 string-address)))
m: ((1 string-address))
sizeof: ((1 string-address))
m: ((2 string-address))
sizeof: ((2 string-address))
run: 4 strcat 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1015 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5 strcat 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1000 1007)
run: 1000 => ((1 string-address))
setm: ((1 string-address)) <= 1000
setm: size of ((1 string-address)) is 1
setm: ((1 string-address)): setting 1017 to 1000
run: 6 strcat 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
run: 6 => ((2 integer))
setm: ((2 integer)) <= 6
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 1018 to 6
run: 7 strcat 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (1000 1007)
run: 1007 => ((3 string-address))
setm: ((3 string-address)) <= 1007
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 1019 to 1007
run: 8 strcat 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1020 to 7
run: 9 strcat 5: (((5 integer)) <- ((add)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((5 integer))
setm: ((5 integer)) <= 13
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1021 to 13
run: 10 strcat 6: (((6 string-address)) <- ((new)) ((string literal)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
sizeof: ((_ byte))
run: 1046 => ((6 string-address))
setm: ((6 string-address)) <= 1046
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 1022 to 1046
run: 11 strcat 7: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 0
run: 12 strcat 8: (((8 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((8 integer))
setm: ((8 integer)) <= 0
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 0
run: 13 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to nil
run: 14 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 15 strcat 11: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1047 => ((10 byte-address))
setm: ((10 byte-address)) <= 1047
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1047
run: 16 strcat 12: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1001 byte) (raw))
sizeof: ((1001 byte) (raw))
run: #\h => ((11 byte))
setm: ((11 byte)) <= #\h
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\h
run: 17 strcat 13: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\h => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\h
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1047 to #\h
run: 18 strcat 14: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 1 => ((8 integer))
setm: ((8 integer)) <= 1
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 1
run: 19 strcat 15: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 1
run: 20 strcat 16: (((jump)) ((-8 offset)))
run: 21 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to nil
run: 22 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 23 strcat 11: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1048 => ((10 byte-address))
setm: ((10 byte-address)) <= 1048
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1048
run: 24 strcat 12: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1002 byte) (raw))
sizeof: ((1002 byte) (raw))
run: #\e => ((11 byte))
setm: ((11 byte)) <= #\e
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\e
run: 25 strcat 13: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\e => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\e
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1048 to #\e
run: 26 strcat 14: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 2
run: 27 strcat 15: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 2
run: 28 strcat 16: (((jump)) ((-8 offset)))
run: 29 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to nil
run: 30 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 31 strcat 11: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1049 => ((10 byte-address))
setm: ((10 byte-address)) <= 1049
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1049
run: 32 strcat 12: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1003 byte) (raw))
sizeof: ((1003 byte) (raw))
run: #\l => ((11 byte))
setm: ((11 byte)) <= #\l
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\l
run: 33 strcat 13: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\l => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\l
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1049 to #\l
run: 34 strcat 14: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 3 => ((8 integer))
setm: ((8 integer)) <= 3
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 3
run: 35 strcat 15: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 3
run: 36 strcat 16: (((jump)) ((-8 offset)))
run: 37 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to nil
run: 38 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 39 strcat 11: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1050 => ((10 byte-address))
setm: ((10 byte-address)) <= 1050
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1050
run: 40 strcat 12: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1004 byte) (raw))
sizeof: ((1004 byte) (raw))
run: #\l => ((11 byte))
setm: ((11 byte)) <= #\l
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\l
run: 41 strcat 13: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\l => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\l
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1050 to #\l
run: 42 strcat 14: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 4
run: 43 strcat 15: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 4
run: 44 strcat 16: (((jump)) ((-8 offset)))
run: 45 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to nil
run: 46 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 47 strcat 11: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1051 => ((10 byte-address))
setm: ((10 byte-address)) <= 1051
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1051
run: 48 strcat 12: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1005 byte) (raw))
sizeof: ((1005 byte) (raw))
run: #\o => ((11 byte))
setm: ((11 byte)) <= #\o
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\o
run: 49 strcat 13: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\o => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\o
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1051 to #\o
run: 50 strcat 14: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 5 => ((8 integer))
setm: ((8 integer)) <= 5
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 5
run: 51 strcat 15: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 5
run: 52 strcat 16: (((jump)) ((-8 offset)))
run: 53 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to nil
run: 54 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 55 strcat 11: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1052 => ((10 byte-address))
setm: ((10 byte-address)) <= 1052
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1052
run: 56 strcat 12: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1000 string) (raw))
m: ((1000 integer) (raw))
sizeof: ((1000 integer) (raw))
sizeof: ((_ byte))
m: ((1006 byte) (raw))
sizeof: ((1006 byte) (raw))
run: #\, => ((11 byte))
setm: ((11 byte)) <= #\,
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\,
run: 57 strcat 13: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\, => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\,
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1052 to #\,
run: 58 strcat 14: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 6 => ((8 integer))
setm: ((8 integer)) <= 6
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 6
run: 59 strcat 15: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 6
run: 60 strcat 16: (((jump)) ((-8 offset)))
run: 61 strcat 9: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((2 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1025 to t
run: 62 strcat 10: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 63 strcat 17: (((8 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((8 integer))
setm: ((8 integer)) <= 0
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 0
run: 64 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 65 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 66 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1053 => ((10 byte-address))
setm: ((10 byte-address)) <= 1053
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1053
run: 67 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1008 byte) (raw))
sizeof: ((1008 byte) (raw))
run: #\space => ((11 byte))
setm: ((11 byte)) <= #\space
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\space
run: 68 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\space => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\space
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1053 to #\space
run: 69 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 1 => ((8 integer))
setm: ((8 integer)) <= 1
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 1
run: 70 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 7
run: 71 strcat 25: (((jump)) ((-8 offset)))
run: 72 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 73 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 74 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1054 => ((10 byte-address))
setm: ((10 byte-address)) <= 1054
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1054
run: 75 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1009 byte) (raw))
sizeof: ((1009 byte) (raw))
run: #\w => ((11 byte))
setm: ((11 byte)) <= #\w
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\w
run: 76 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\w => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\w
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1054 to #\w
run: 77 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 2
run: 78 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 8
run: 79 strcat 25: (((jump)) ((-8 offset)))
run: 80 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 81 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 82 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1055 => ((10 byte-address))
setm: ((10 byte-address)) <= 1055
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1055
run: 83 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1010 byte) (raw))
sizeof: ((1010 byte) (raw))
run: #\o => ((11 byte))
setm: ((11 byte)) <= #\o
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\o
run: 84 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\o => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\o
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1055 to #\o
run: 85 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 3 => ((8 integer))
setm: ((8 integer)) <= 3
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 3
run: 86 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 9 => ((7 integer))
setm: ((7 integer)) <= 9
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 9
run: 87 strcat 25: (((jump)) ((-8 offset)))
run: 88 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 89 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 90 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1056 => ((10 byte-address))
setm: ((10 byte-address)) <= 1056
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1056
run: 91 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1011 byte) (raw))
sizeof: ((1011 byte) (raw))
run: #\r => ((11 byte))
setm: ((11 byte)) <= #\r
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\r
run: 92 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\r => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\r
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1056 to #\r
run: 93 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 4
run: 94 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 10 => ((7 integer))
setm: ((7 integer)) <= 10
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 10
run: 95 strcat 25: (((jump)) ((-8 offset)))
run: 96 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 97 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 98 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1057 => ((10 byte-address))
setm: ((10 byte-address)) <= 1057
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1057
run: 99 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1012 byte) (raw))
sizeof: ((1012 byte) (raw))
run: #\l => ((11 byte))
setm: ((11 byte)) <= #\l
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\l
run: 100 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\l => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\l
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1057 to #\l
run: 101 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 5 => ((8 integer))
setm: ((8 integer)) <= 5
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 5
run: 102 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 11 => ((7 integer))
setm: ((7 integer)) <= 11
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 11
run: 103 strcat 25: (((jump)) ((-8 offset)))
run: 104 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 105 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 106 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1058 => ((10 byte-address))
setm: ((10 byte-address)) <= 1058
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1058
run: 107 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1013 byte) (raw))
sizeof: ((1013 byte) (raw))
run: #\d => ((11 byte))
setm: ((11 byte)) <= #\d
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\d
run: 108 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\d => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\d
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1058 to #\d
run: 109 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 6 => ((8 integer))
setm: ((8 integer)) <= 6
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 6
run: 110 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 12 => ((7 integer))
setm: ((7 integer)) <= 12
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 12
run: 111 strcat 25: (((jump)) ((-8 offset)))
run: 112 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to nil
run: 113 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 114 strcat 20: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1046 string) (raw))
m: ((1046 integer) (raw))
sizeof: ((1046 integer) (raw))
sizeof: ((_ byte))
run: 1059 => ((10 byte-address))
setm: ((10 byte-address)) <= 1059
setm: size of ((10 byte-address)) is 1
setm: ((10 byte-address)): setting 1026 to 1059
run: 115 strcat 21: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer)))
m: ((8 integer))
sizeof: ((8 integer))
array-len: ((1007 string) (raw))
m: ((1007 integer) (raw))
sizeof: ((1007 integer) (raw))
sizeof: ((_ byte))
m: ((1014 byte) (raw))
sizeof: ((1014 byte) (raw))
run: #\! => ((11 byte))
setm: ((11 byte)) <= #\!
setm: size of ((11 byte)) is 1
setm: ((11 byte)): setting 1027 to #\!
run: 116 strcat 22: (((10 byte-address) (deref)) <- ((copy)) ((11 byte)))
m: ((11 byte))
sizeof: ((11 byte))
run: #\! => ((10 byte-address) (deref))
setm: ((10 byte-address) (deref)) <= #\!
setm: size of ((10 byte-address) (deref)) is 1
setm: ((10 byte-address) (deref)): setting 1059 to #\!
run: 117 strcat 23: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal)))
m: ((8 integer))
sizeof: ((8 integer))
run: 7 => ((8 integer))
setm: ((8 integer)) <= 7
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1024 to 7
run: 118 strcat 24: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 13 => ((7 integer))
setm: ((7 integer)) <= 13
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1023 to 13
run: 119 strcat 25: (((jump)) ((-8 offset)))
run: 120 strcat 18: (((12 boolean)) <- ((greater-or-equal)) ((8 integer)) ((4 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((12 boolean))
setm: ((12 boolean)) <= t
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 1028 to t
run: 121 strcat 19: (((jump-if)) ((12 boolean)) ((6 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 122 strcat 26: (((reply)) ((6 string-address)))
m: ((6 string-address))
sizeof: ((6 string-address))
reply: (((6 string-address))) (((3 string-address)))
reply: 1046 => ((3 string-address))
setm: ((3 string-address)) <= 1046
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 3 to 1046
schedule: done with routine 
