 102 run: assume-console [
    left-click 3, 7  # below text
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"7": "literal"}
9992 load: after rewriting: left-click 3, 7
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1262
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1264
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1266
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1262 in location 1267
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1268
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1268 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1268 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1269
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1268 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1268 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1270
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1266 is 1009
9999 mem: location 1269 is 1
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 0
9999 mem: location 1224 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1266
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1267 is 1262
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1279
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1262 in location 1281
 105 run: jump-unless x, 
9999 mem: location 1281 is 1262
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1281 is 1262
9999 mem: location 1262 is 0
9999 mem: location 1263 is 1257
9999 mem: location 1281 is 1262
9998 run: address to copy is 1262
9999 mem: storing 1262 in location 1282
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1281 is 1262
9999 mem: location 1262 is 0
9999 mem: location 1263 is 1257
9999 mem: location 1281 is 1262
9998 run: address to copy is 1263
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1263 is 1257
9999 mem: storing 1257 in location 1283
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1257
9999 mem: storing 1 in location 1284
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1282 is 1262
9999 mem: location 1262 is 0
9999 mem: location 1284 is 1
9999 mem: storing 0 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1283 is 1257
9999 mem: location 1282 is 1262
9999 mem: location 1262 is 0
9998 run: address to copy is 1258
9998 run: its type is event
9999 mem: location 1258 is 2
9999 mem: location 1259 is 65513
9999 mem: location 1260 is 3
9999 mem: location 1261 is 7
9999 mem: storing 2 in location 1287
9999 mem: storing 65513 in location 1288
9999 mem: storing 3 in location 1289
9999 mem: storing 7 in location 1290
 105 run: *idx <- add *idx, 1
9999 mem: location 1282 is 1262
9999 mem: location 1262 is 0
9999 mem: location 1282 is 1262
9999 mem: storing 1 in location 1262
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1287 is 2
9999 mem: location 1288 is 65513
9999 mem: location 1289 is 3
9999 mem: location 1290 is 7
9999 mem: location 1281 is 1262
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 7]
9998 run: result 1 is 1262
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1271
9999 mem: storing 65513 in location 1272
9999 mem: storing 3 in location 1273
9999 mem: storing 7 in location 1274
9999 mem: storing 1262 in location 1267
9999 mem: storing 1 in location 1275
9999 mem: storing 0 in location 1276
 104 run: jump-unless found?, 
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1276 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1271 is 2
9999 mem: location 1272 is 65513
9999 mem: location 1273 is 3
9999 mem: location 1274 is 7
9999 mem: storing 1272 in location 1277
 104 run: jump-unless t, 
9999 mem: location 1277 is 1272
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1266 is 1009
9999 mem: location 1268 is 1000
9999 mem: location 1277 is 1272
9999 mem: location 1272 is 65513
9999 mem: location 1273 is 3
9999 mem: location 1274 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1292
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1294
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1295
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1296
9999 mem: storing 3 in location 1297
9999 mem: storing 7 in location 1298
 105 run: jump-if editor, 1:offset
9999 mem: location 1295 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1296 is 65513
9999 mem: location 1297 is 3
9999 mem: location 1298 is 7
9998 run: address to copy is 1297
9998 run: its type is number
9999 mem: location 1297 is 3
9999 mem: storing 3 in location 1299
 105 run: jump-if click-row, 1:offset
9999 mem: location 1299 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1296 is 65513
9999 mem: location 1297 is 3
9999 mem: location 1298 is 7
9998 run: address to copy is 1298
9998 run: its type is number
9999 mem: location 1298 is 7
9999 mem: storing 7 in location 1300
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1295 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1295 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1301
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1300 is 7
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1302
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1302 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1295 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1295 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1303
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1300 is 7
9999 mem: location 1303 is 9
9999 mem: storing 0 in location 1304
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1304 is 0
9998 run: jumping to instruction 18
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1294 is 1009
9999 mem: location 1295 is 1000
9999 mem: location 1299 is 3
9999 mem: location 1300 is 7
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1193
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1194
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 3 in location 1195
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 7 in location 1196
 106 run: jump-if editor, 1:offset
9999 mem: location 1194 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1197
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1198
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1193 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 107 run: jump-unless sc, 
9999 mem: location 1171 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 107 run: reply height
9999 mem: location 1172 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1199
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1200
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1200 is 1154
9999 mem: storing 1154 in location 1201
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1154
9999 trace: incrementing callstack depth to 6
9990 schedule: next-duplex_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-handles-mouse-clicks-outside-text-3
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1200
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1202
 106 run: column:number <- copy left
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1203
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1204
 106 run: *cursor-row <- copy target-row
9999 mem: location 1195 is 3
9999 mem: location 1204 is 1006
9999 mem: storing 3 in location 1006
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1205
 106 run: *cursor-column <- copy target-column
9999 mem: location 1196 is 7
9999 mem: location 1205 is 1007
9999 mem: storing 7 in location 1007
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 3
9999 mem: location 1007 is 7
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1206
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1166
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1200 is 1166
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 97
9999 mem: storing 97 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 97
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 0
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 0
9999 mem: storing 1 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1173
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1200 is 1173
9998 run: address to copy is 1173
9998 run: its type is character
9999 mem: location 1173 is 98
9999 mem: storing 98 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 98
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 1
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1166 is 97
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 1
9999 mem: storing 2 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1200 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 99
9999 mem: storing 99 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 99
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 2
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1173 is 98
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 2
9999 mem: storing 3 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1179
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1200 is 1179
9998 run: address to copy is 1179
9998 run: its type is character
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 10
9999 mem: storing 1 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 106 run: column <- copy left
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1203
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1182
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1176 is 99
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1201
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1182
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1182 is 100
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1200 is 1182
9998 run: address to copy is 1182
9998 run: its type is character
9999 mem: location 1182 is 100
9999 mem: storing 100 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 100
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 0
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1182 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1182 is 100
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1185
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1182
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 0
9999 mem: storing 1 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1185
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1185 is 101
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1200 is 1185
9998 run: address to copy is 1185
9998 run: its type is character
9999 mem: location 1185 is 101
9999 mem: storing 101 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 101
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 1
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1185 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1185 is 101
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 type: type deduced to be character$
9998 run: address to copy is 1186
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1188
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1182 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1182 is 100
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1185
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 1
9999 mem: storing 2 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1188
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1188 is 102
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1200 is 1188
9998 run: address to copy is 1188
9998 run: its type is character
9999 mem: location 1188 is 102
9999 mem: storing 102 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 102
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 2
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next-duplex_2 curr
9999 mem: location 1200 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1188 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1188 is 102
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1189
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1200
 106 run: prev <- next-duplex_2 prev
9999 mem: location 1201 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1185 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 type: type deduced to be character$
9999 mem: location 1185 is 101
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 type: type deduced to be character$
9998 run: address to copy is 1186
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1188
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 2
9999 mem: storing 3 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1208
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 7
9999 mem: storing 1 in location 1214
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1208 is 0
9999 mem: location 1214 is 1
9999 mem: storing 0 in location 1215
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1216
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1
9999 mem: storing 1 in location 1217
 106 run: jump-unless before-cursor?, 
9999 mem: location 1217 is 1
9998 run: jump-unless fell through
 106 run: *cursor-row <- copy row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: storing 2 in location 1006
 106 run: *cursor-column <- copy column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: storing 3 in location 1007
 106 run: *before-cursor <- copy prev
9999 mem: location 1201 is 1188
9999 mem: location 1206 is 1003
9999 mem: storing 1188 in location 1003
 106 run: reply editor:address:editor-data
9999 mem: location 1194 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1295
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1305
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1268 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1268 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 1269
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1268 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1268 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1270
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1266 is 1009
9999 mem: location 1269 is 2
9999 mem: location 1270 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 2
9999 mem: location 1223 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 3
9999 mem: location 1224 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1266
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1267 is 1262
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1262 in location 1281
 105 run: jump-unless x, 
9999 mem: location 1281 is 1262
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1281 is 1262
9999 mem: location 1262 is 1
9999 mem: location 1263 is 1257
9999 mem: location 1281 is 1262
9998 run: address to copy is 1262
9999 mem: storing 1262 in location 1282
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1281 is 1262
9999 mem: location 1262 is 1
9999 mem: location 1263 is 1257
9999 mem: location 1281 is 1262
9998 run: address to copy is 1263
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1263 is 1257
9999 mem: storing 1257 in location 1283
 105 run: max:number <- length *buf
9999 mem: location 1283 is 1257
9999 mem: storing 1 in location 1284
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1282 is 1262
9999 mem: location 1262 is 1
9999 mem: location 1284 is 1
9999 mem: storing 1 in location 1285
 105 run: jump-unless done?, 
9999 mem: location 1285 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1169 in location 1286
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1286 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1281 is 1262
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1262
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 1262 in location 1267
9999 mem: storing 1 in location 1275
9999 mem: storing 1 in location 1276
 104 run: jump-unless found?, 
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1276 is 1
9998 run: jumping to instruction 28
9999 trace: fall-through: exiting editor-event-loop; decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1188
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 2
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 4
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2  # cursor row
    4 <- 3  # cursor column
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
9999 trace: fall-through: exiting scenario-editor-handles-mouse-clicks-outside-text-3; decrementing callstack depth from 1
