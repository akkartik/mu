9999 parse: instruction: run
9999 parse:   ingredient: {"\n    1:number <- copy 13\n  ": "literal-string"}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {"\n    1 <- 13\n  ": "literal-string"}
9999 after-brace: recipe scenario-foo
9999 after-brace: run ...
9999 after-brace: memory-should-contain ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-foo
 102 run: run [
    1:number <- copy 13
  ]
9999 parse: instruction: copy
9999 parse:   ingredient: {"13": "literal"}
9999 parse:   product: {"1": "number"}
9999 after-brace: recipe run1001
9999 after-brace: copy ...
9999 trace: run: incrementing callstack depth to 2
 103 run: 1:number <- copy 13
9999 mem: storing 13 in location 1
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    1 <- 13
  ]
9999 run: checking location 1
9999 trace: fall-through: exiting scenario-foo; decrementing callstack depth from 1
