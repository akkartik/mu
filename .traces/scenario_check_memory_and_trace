9999 parse: instruction: run
9999 parse:   ingredient: {name: "\n    1:number <- copy 13\n    trace 1, [a], [a b c]\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: memory-should-contain
9999 parse:   ingredient: {name: "\n    1 <- 13\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: trace-should-contain
9999 parse:   ingredient: {name: "\n    a: a b c\n  ", properties: [_: "literal-string"]}
9999 parse: instruction: trace-should-not-contain
9999 parse:   ingredient: {name: "\n    a: x y z\n  ", properties: [_: "literal-string"]}
9999 after-brace: recipe scenario-foo
9999 after-brace: run ...
9999 after-brace: memory-should-contain ...
9999 after-brace: trace-should-contain ...
9999 after-brace: trace-should-not-contain ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-foo
 102 run: run [
    1:number <- copy 13
    trace 1, [a], [a b c]
  ]
9999 parse: instruction: copy
9999 parse:   ingredient: {name: "13", properties: ["13": "literal"]}
9999 parse:   product: {name: "1", properties: ["1": "number"]}
9999 parse: instruction: trace
9999 parse:   ingredient: {name: "1", properties: ["1": "literal"]}
9999 parse:   ingredient: {name: "a", properties: [_: "literal-string"]}
9999 parse:   ingredient: {name: "a b c", properties: [_: "literal-string"]}
9999 after-brace: recipe run1001
9999 after-brace: copy ...
9999 after-brace: trace ...
9999 trace: run: incrementing callstack depth to 2
 103 run: 1:number <- copy 13
9999 mem: storing 13 in location 1
 103 run: trace 1, [a], [a b c]
   1 a: a b c 
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    1 <- 13
  ]
9999 run: checking location 1
 102 run: trace-should-contain [
    a: a b c
  ]
 102 run: trace-should-not-contain [
    a: x y z
  ]
9999 trace: fall-through: exiting scenario-foo; decrementing callstack depth from 1
