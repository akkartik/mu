parse: instruction: run
parse:   ingredient: {name: "
    1:number <- copy 13:literal
    trace [a], [a b c]
  ", properties: ["
    1:number <- copy 13:literal
    trace [a], [a b c]
  ": "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "
    1 <- 13
  ", properties: ["
    1 <- 13
  ": "literal-string"]}
parse: instruction: trace-should-contain
parse:   ingredient: {name: "
    a: a b c
  ", properties: ["
    a: a b c
  ": "literal-string"]}
parse: instruction: trace-should-not-contain
parse:   ingredient: {name: "
    a: x y z
  ", properties: ["
    a: x y z
  ": "literal-string"]}
after-brace: recipe foo
after-brace: run ...
after-brace: memory-should-contain ...
after-brace: trace-should-contain ...
after-brace: trace-should-not-contain ...
new: routine allocated memory from 1000 to 101000
schedule: foo
run: run [
    1:number <- copy 13:literal
    trace [a], [a b c]
  ]
parse: instruction: copy
parse:   ingredient: {name: "13", properties: ["13": "literal"]}
parse:   product: {name: "1", properties: ["1": "number"]}
parse: instruction: trace
parse:   ingredient: {name: "a", properties: ["a": "literal-string"]}
parse:   ingredient: {name: "a b c", properties: ["a b c": "literal-string"]}
after-brace: recipe run1001
after-brace: copy ...
after-brace: trace ...
run: 1:number <- copy 13:literal
mem: storing 13 in location 1
run: trace [a], [a b c]
a: a b c
run: memory-should-contain [
    1 <- 13
  ]
run: checking location 1
run: trace-should-contain [
    a: a b c
  ]
run: trace-should-not-contain [
    a: x y z
  ]
